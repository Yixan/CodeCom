from __future__ import print_function EOM
import numpy as np EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Lambda EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Convolution1D COMMA MaxPooling1D COMMA  Flatten EOM
from keras DOT datasets import imdb EOM
from keras import backend as K EOM
from sklearn DOT cross_validation import train_test_split EOM
import pandas as pd EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from sklearn DOT preprocessing import Normalizer EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Convolution1D COMMA  Dense COMMA  Dropout COMMA  Flatten COMMA  MaxPooling1D EOM
from keras DOT utils import np_utils EOM
import numpy as np EOM
import h5py EOM
from keras import callbacks EOM
from keras DOT layers import LSTM COMMA  GRU COMMA  SimpleRNN EOM
from keras DOT callbacks import CSVLogger EOM
from keras DOT callbacks import ModelCheckpoint COMMA  EarlyStopping COMMA  ReduceLROnPlateau COMMA  CSVLogger EOM
import csv EOM
with open( PARERIGHT  as f: EOM
reader  EQUAL  csv DOT reader( PARERIGHT  EOM
your_list  EQUAL  list( PARERIGHT  EOM
trainX  EQUAL  np DOT array( PARERIGHT  EOM
traindata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
Y  EQUAL  traindata DOT iloc[] EOM
y_train1  EQUAL  np DOT array( PARERIGHT  EOM
y_train EQUAL  to_categorical( PARERIGHT  EOM
maxlen  EQUAL  100000 EOM
trainX  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_train  EQUAL  np DOT reshape(trainX COMMA  ( PARERIGHT  PARERIGHT  EOM
with open( PARERIGHT  as f: EOM
reader1  EQUAL  csv DOT reader( PARERIGHT  EOM
your_list1  EQUAL  list( PARERIGHT  EOM
testX  EQUAL  np DOT array( PARERIGHT  EOM
testdata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
Y1  EQUAL  traindata DOT iloc[] EOM
y_test1  EQUAL  np DOT array( PARERIGHT  EOM
y_test EQUAL  to_categorical( PARERIGHT  EOM
testX  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  np DOT reshape(testX COMMA  ( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
checkpointer  EQUAL  callbacks DOT ModelCheckpoint( PARERIGHT  EOM
csv_logger  EQUAL  CSVLogger( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Flatten COMMA  Activation COMMA  Merge COMMA  Add COMMA  merge COMMA  Conv1D COMMA  MaxPooling1D COMMA  LeakyReLU COMMA  CuDNNLSTM COMMA  CuDNNGRU EOM
from keras DOT layers import Conv2D COMMA  MaxPooling2D COMMA  UpSampling2D EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers DOT core import Reshape EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT wrappers import Bidirectional EOM
from keras DOT regularizers import l2 EOM
def Convolutional( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LeakyReLU( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LeakyReLU( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LeakyReLU( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(64 COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LeakyReLU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
if print_info: EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def Convolutional2DRecurrent( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(filters  EQUAL  COMMA  kernel_size  EQUAL ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if GPU: EOM
model DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if GPU: EOM
model DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
if print_info: EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def Convolutional1DRecurrent( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LeakyReLU( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
if GPU: EOM
model DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if GPU: EOM
model DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(LeakyReLU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
if print_info: EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def ConvolutionalDeepRecurrent( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LeakyReLU( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LeakyReLU( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LeakyReLU( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
if GPU: EOM
model DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if GPU: EOM
model DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(LeakyReLU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
if print_info: EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def MotionDetection( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LeakyReLU( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(LeakyReLU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
if print_info: EOM
model DOT summary( PARERIGHT  EOM
return modelfrom __future__ import print_function EOM
import numpy as np EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Lambda EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Convolution1D COMMA MaxPooling1D COMMA  Flatten EOM
from keras DOT datasets import imdb EOM
from keras import backend as K EOM
from sklearn DOT cross_validation import train_test_split EOM
import pandas as pd EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from sklearn DOT preprocessing import Normalizer EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Convolution1D COMMA  Dense COMMA  Dropout COMMA  Flatten COMMA  MaxPooling1D EOM
from keras DOT utils import np_utils EOM
import numpy as np EOM
import h5py EOM
from keras import callbacks EOM
from keras DOT layers import LSTM COMMA  GRU COMMA  SimpleRNN EOM
from keras DOT callbacks import CSVLogger EOM
from keras DOT callbacks import ModelCheckpoint COMMA  EarlyStopping COMMA  ReduceLROnPlateau COMMA  CSVLogger EOM
import csv EOM
from sklearn DOT cross_validation import StratifiedKFold EOM
from sklearn DOT cross_validation import cross_val_score EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
from sklearn DOT metrics import ( PARERIGHT  EOM
with open( PARERIGHT  as f: EOM
reader  EQUAL  csv DOT reader( PARERIGHT  EOM
your_list  EQUAL  list( PARERIGHT  EOM
trainX  EQUAL  np DOT array( PARERIGHT  EOM
traindata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
Y  EQUAL  traindata DOT iloc[] EOM
y_train1  EQUAL  np DOT array( PARERIGHT  EOM
y_train EQUAL  to_categorical( PARERIGHT  EOM
maxlen  EQUAL  2000 EOM
trainX  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_train  EQUAL  np DOT reshape(trainX COMMA  ( PARERIGHT  PARERIGHT  EOM
with open( PARERIGHT  as f: EOM
reader1  EQUAL  csv DOT reader( PARERIGHT  EOM
your_list1  EQUAL  list( PARERIGHT  EOM
testX  EQUAL  np DOT array( PARERIGHT  EOM
testdata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
Y1  EQUAL  testdata DOT iloc[] EOM
y_test1  EQUAL  np DOT array( PARERIGHT  EOM
y_test EQUAL  to_categorical( PARERIGHT  EOM
maxlen  EQUAL  2000 EOM
testX  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  np DOT reshape(testX COMMA  ( PARERIGHT  PARERIGHT  EOM
batch_size  EQUAL  5 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
import os EOM
for file in os DOT listdir( PARERIGHT : EOM
model DOT load_weights( PARERIGHT  EOM
y_pred  EQUAL  model DOT predict_classes( PARERIGHT  EOM
accuracy  EQUAL  accuracy_score( PARERIGHT  EOM
recall  EQUAL  recall_score( PARERIGHT  EOM
precision  EQUAL  precision_score( PARERIGHT  EOM
f1  EQUAL  f1_score( PARERIGHT  EOM
class TextMod( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT fc_dimension  EQUAL  fc_dimension EOM
self DOT vocab  EQUAL  vocab EOM
def build_model( PARERIGHT : EOM
from keras DOT models import Model EOM
from keras DOT layers import Embedding COMMA  Input COMMA  Dense COMMA  Dropout COMMA  LSTM COMMA  Lambda COMMA  multiply EOM
lstm_cells  EQUAL  512 EOM
fc_common_embedding_size  EQUAL  512 EOM
activation  EQUAL  EOM
dropout  EQUAL  0 DOT 5 EOM
emb_dim  EQUAL  200 EOM
vocab_size  EQUAL  self DOT vocab[] EOM
output_classes  EQUAL  self DOT vocab[] EOM
fc_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
fc_norm  EQUAL  Lambda(l2_norm COMMA  output_shape EQUAL ( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
img_fc  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
img_drop  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
language_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
l_in  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
lstm_fc  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
lstm_norm_fc  EQUAL  Lambda(l2_norm COMMA  output_shape EQUAL ( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
lstm_drop_fc  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
v_q_fc  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
fc_merged  EQUAL  multiply( PARERIGHT  EOM
fc_merged_norm  EQUAL  Lambda(l2_norm COMMA  output_shape EQUAL ( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
fc_merged_dense  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
fc_merged_drop  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
fc_out  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
class SpeechMod( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT img_dim  EQUAL  img_dim EOM
def build_model( PARERIGHT : EOM
from keras DOT layers import BatchNormalization COMMA  Activation COMMA  Merge EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Lambda EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT pooling import MaxPooling1D EOM
from keras DOT layers DOT recurrent import LSTM EOM
common_embedding_size  EQUAL  512 EOM
activation  EQUAL  EOM
dropout  EQUAL  0 DOT 5 EOM
image_model  EQUAL  Sequential( PARERIGHT  EOM
image_model DOT add(Lambda(l2_norm COMMA  input_shape EQUAL ( PARERIGHT  COMMA  output_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
image_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
image_model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
speech_model  EQUAL  Sequential( PARERIGHT  EOM
speech_model DOT add(Conv1D(32 COMMA  64 COMMA  strides EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
speech_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(Lambda(l2_norm COMMA  output_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
speech_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
speech_model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Lambda(l2_norm COMMA  output_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def l2_norm( PARERIGHT : EOM
epsilon  EQUAL  1e-4 EOM
x_normed  EQUAL  K DOT sqrt(K DOT sum(K DOT square( PARERIGHT  COMMA  axis EQUAL  COMMA  keepdims EQUAL  PARERIGHT  PARERIGHT  EOM
x  EQUAL  x / ( PARERIGHT  EOM
return ximport numpy as np EOM
import h5py as h5 EOM
from sklearn import manifold EOM
import os EOM
import datetime EOM
from keras DOT utils import np_utils EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Merge COMMA  Reshape EOM
from keras DOT regularizers import l2 COMMA  activity_l2 COMMA  l1 COMMA  activity_l1 EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
os DOT chdir( PARERIGHT  EOM
with h5 DOT File( PARERIGHT  as f1: EOM
video_train  EQUAL  f1[][] DOT transpose( PARERIGHT  EOM
audio_train  EQUAL  f1[][] DOT transpose( PARERIGHT  EOM
label_train  EQUAL  f1[][] DOT transpose( PARERIGHT  EOM
label_train  EQUAL  label_train DOT squeeze( PARERIGHT  DOT astype( PARERIGHT  EOM
with h5 DOT File( PARERIGHT  as f2: EOM
video_test  EQUAL  f2[][] DOT transpose( PARERIGHT  EOM
audio_test  EQUAL  f2[][] DOT transpose( PARERIGHT  EOM
label_test  EQUAL  f2[][] DOT transpose( PARERIGHT  EOM
label_test  EQUAL  label_test DOT squeeze( PARERIGHT  DOT astype( PARERIGHT  EOM
X_test  EQUAL  np DOT hstack(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  label_train EOM
y_test  EQUAL  label_test EOM
y_train  EQUAL  np_utils DOT to_categorical( PARERIGHT  EOM
y_test  EQUAL  np_utils DOT to_categorical( PARERIGHT  EOM
mlp  EQUAL  Sequential( PARERIGHT  EOM
mlp DOT add(Dense( PARERIGHT  PARERIGHT  EOM
mlp DOT add(Activation( PARERIGHT  PARERIGHT  EOM
mlp DOT add(Dense( PARERIGHT  PARERIGHT  EOM
mlp DOT add(Activation( PARERIGHT  PARERIGHT  EOM
mlp DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
lstm  EQUAL  Sequential( PARERIGHT  EOM
lstm DOT add(LSTM(output_dim EQUAL  COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
clas  EQUAL  Sequential( PARERIGHT  EOM
clas DOT add(Dense( PARERIGHT  PARERIGHT  EOM
clas DOT add(Activation( PARERIGHT  PARERIGHT  EOM
clas DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
clas DOT add(Dense( PARERIGHT  PARERIGHT  EOM
clas DOT add(Activation( PARERIGHT  PARERIGHT  EOM
clas DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
clas DOT add(Dense( PARERIGHT  PARERIGHT  EOM
clas DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(X_train COMMA  y_train COMMA  batch_size EQUAL  COMMA  nb_epoch EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  PARERIGHT from keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Dense EOM
import numpy as np EOM
import matplotlib DOT pyplot as plt EOM
import numpy as np EOM
import time EOM
import csv EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout COMMA Merge EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
import copy EOM
data_dim  EQUAL  1 EOM
timesteps  EQUAL  13 EOM
model_A  EQUAL  Sequential( PARERIGHT  EOM
model_B  EQUAL  Sequential( PARERIGHT  EOM
model_Combine  EQUAL  Sequential( PARERIGHT  EOM
lstm_hidden_size  EQUAL  [] EOM
drop_out_rate  EQUAL  [] EOM
model_A DOT add(LSTM(lstm_hidden_size[] COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_A DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_A DOT add(Dense( PARERIGHT  PARERIGHT  EOM
in_dimension  EQUAL  3 EOM
nn_hidden_size  EQUAL  [] EOM
nn_drop_rate  EQUAL  [] EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_Combine DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model_Combine DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_Combine DOT compile( PARERIGHT  EOM
from keras DOT utils DOT visualize_util import plot COMMA  to_graph EOM
graph  EQUAL  to_graph( PARERIGHT  EOM
graph DOT write_png( PARERIGHT import os EOM
import numpy as np EOM
import keras EOM
import donkeycar as dk EOM
from donkeycar DOT parts DOT keras import KerasPilot EOM
class KerasRNN_LSTM( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
super( PARERIGHT  DOT __init__( PARERIGHT  EOM
self DOT model  EQUAL  rnn_lstm( PARERIGHT  EOM
self DOT seq_length  EQUAL  seq_length EOM
self DOT img_seq  EQUAL  [] EOM
def run( PARERIGHT : EOM
while len( PARERIGHT  < self DOT seq_length: EOM
self DOT img_seq DOT append( PARERIGHT  EOM
self DOT img_seq  EQUAL  self DOT img_seq[] EOM
self DOT img_seq DOT append( PARERIGHT  EOM
img_arr  EQUAL  np DOT array( PARERIGHT  DOT reshape( PARERIGHT  EOM
outputs  EQUAL  self DOT model DOT predict( PARERIGHT  EOM
steering  EQUAL  outputs[][] EOM
throttle  EQUAL  outputs[][] EOM
return steering COMMA  throttle EOM
def rnn_lstm_one(seq_length EQUAL  COMMA  num_outputs EQUAL  COMMA  image_shape EQUAL ( PARERIGHT  PARERIGHT : EOM
from numpy DOT random import seed EOM
seed( PARERIGHT  EOM
from tensorflow import set_random_seed EOM
set_random_seed( PARERIGHT  EOM
from keras DOT layers import Input COMMA  Dense EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Convolution2D COMMA  MaxPooling2D COMMA  Reshape COMMA  BatchNormalization COMMA  Merge EOM
from keras DOT layers import Activation COMMA  Dropout COMMA  Flatten COMMA  Cropping2D COMMA  Lambda EOM
from keras DOT layers DOT merge import concatenate EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT wrappers import TimeDistributed as TD EOM
img_seq_shape  EQUAL  ( PARERIGHT  + image_shape EOM
img_in  EQUAL  Input( PARERIGHT  EOM
x  EQUAL  Sequential( PARERIGHT  EOM
x DOT add(TD(Convolution2D(24 COMMA  ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
x DOT add(TD(Convolution2D(32 COMMA  ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
x DOT add(TD(Convolution2D(32 COMMA  ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
x DOT add(TD(Convolution2D(32 COMMA  ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
x DOT add(TD(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
x DOT add(TD(Flatten( PARERIGHT  PARERIGHT  PARERIGHT  EOM
x DOT add(TD(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
x DOT add(TD(Dropout( PARERIGHT  PARERIGHT  PARERIGHT  EOM
x DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
x DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
x DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
x DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
x DOT add(Dense( PARERIGHT  PARERIGHT  EOM
x DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
x DOT add(Dense( PARERIGHT  PARERIGHT  EOM
x DOT compile( PARERIGHT  EOM
return x EOM
def rnn_lstm(seq_length EQUAL  COMMA  num_outputs EQUAL  COMMA  image_shape EQUAL ( PARERIGHT  PARERIGHT : EOM
from keras DOT layers import Input COMMA  Dense EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Convolution2D COMMA  MaxPooling2D COMMA  Reshape COMMA  BatchNormalization COMMA  Merge EOM
from keras DOT layers import Activation COMMA  Dropout COMMA  Flatten COMMA  Cropping2D COMMA  Lambda EOM
from keras DOT layers DOT merge import concatenate EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT wrappers import TimeDistributed as TD EOM
img_seq_shape  EQUAL  ( PARERIGHT  + image_shape EOM
img_in  EQUAL  Input( PARERIGHT  EOM
x  EQUAL  Sequential( PARERIGHT  EOM
x DOT add(TD(Convolution2D(24 COMMA  ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
x DOT add(TD(Convolution2D(32 COMMA  ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
x DOT add(TD(Convolution2D(32 COMMA  ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
x DOT add(TD(Convolution2D(32 COMMA  ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
x DOT add(TD(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
x DOT add(TD(Flatten( PARERIGHT  PARERIGHT  PARERIGHT  EOM
x DOT add(TD(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
x DOT add(TD(Dropout( PARERIGHT  PARERIGHT  PARERIGHT  EOM
x DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
x DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
x DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
x DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
x DOT add(Dense( PARERIGHT  PARERIGHT  EOM
x DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
x DOT add(Dense( PARERIGHT  PARERIGHT  EOM
x DOT add(Dense( PARERIGHT  PARERIGHT  EOM
x DOT add(Dense( PARERIGHT  PARERIGHT  EOM
x DOT compile( PARERIGHT  EOM
return x EOM
from __future__ import print_function EOM
import os EOM
from keras DOT models import Sequential EOM
from keras DOT models import load_model EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Activation EOM
from keras DOT layers import LSTM EOM
from getdata import GetData EOM
from logger import Logger EOM
log  EQUAL  Logger( PARERIGHT  EOM
class Model( PARERIGHT : EOM
gd DOT get_dataset( PARERIGHT  EOM
def __init__( PARERIGHT : EOM
self DOT maxlen  EQUAL  self DOT gd DOT preprocess DOT __defaults__[] EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
def lstm_( PARERIGHT : EOM
log DOT info( PARERIGHT  EOM
os DOT mkdir( PARERIGHT  EOM
log DOT info( PARERIGHT  EOM
if os DOT path DOT exists( PARERIGHT : EOM
if os DOT path DOT exists(os DOT path DOT join( PARERIGHT  PARERIGHT : EOM
log DOT info( PARERIGHT  EOM
self DOT model  EQUAL  load_model(os DOT path DOT join( PARERIGHT  PARERIGHT  EOM
self DOT model DOT summary( PARERIGHT  EOM
return self DOT model EOM
else: EOM
log DOT info( PARERIGHT  EOM
import os EOM
global_model_version  EQUAL  54 EOM
global_batch_size  EQUAL  128 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
adam  EQUAL  keras DOT optimizers DOT Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import numpy as np EOM
np DOT random DOT seed( PARERIGHT  EOM
from theano DOT tensor DOT shared_randomstreams import RandomStreams EOM
srng  EQUAL  RandomStreams( PARERIGHT  EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT datasets import imdb EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  LSTM COMMA  GRU COMMA  Dropout COMMA  Flatten COMMA  Convolution1D COMMA  MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from keras_helper import load_keras_model as load EOM
from keras_helper import save_keras_model as save EOM
base_dir  EQUAL  EOM
def generate_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
if dropout is not None: EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if dropout is not None: EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
if __name__ EQUAL  EQUAL : EOM
embedding_length  EQUAL  16 EOM
top_words  EQUAL  EOM
n_lstm_units  EQUAL  100 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
hist  EQUAL  model DOT fit(X_train COMMA  y_train COMMA  validation_data EQUAL ( PARERIGHT  COMMA  nb_epoch EQUAL  COMMA  batch_size EQUAL  PARERIGHT  EOM
save(model COMMA   DOT format( PARERIGHT  COMMA  base_dir EQUAL  PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from keras DOT optimizers import SGD EOM
from keras DOT optimizers import Adam EOM
from sklearn DOT cross_validation import StratifiedKFold EOM
from decimal import Decimal EOM
import operator EOM
from fractions import Fraction EOM
import numpy EOM
from keras DOT datasets import imdb EOM
import AlgebraProblems EOM
import sklearn EOM
from sklearn DOT naive_bayes import GaussianNB EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT embeddings import Embedding EOM
from sklearn DOT ensemble import RandomForestClassifier EOM
from sklearn import svm EOM
from keras DOT layers import Dropout EOM
from keras DOT preprocessing import sequence EOM
import PrepareInputANN EOM
import PrepareInputLSTM EOM
import numpy as np EOM
import pdb EOM
import csv EOM
def defineModelandOptimizer( PARERIGHT : EOM
if ( PARERIGHT : EOM
embedding_vector_length  EQUAL  32 EOM
max_review_length  EQUAL  max_length EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(100 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if ( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def solve( PARERIGHT : EOM
case  EQUAL  type DOT index(max( PARERIGHT  PARERIGHT  EOM
indexes  EQUAL  [] EOM
if (len( PARERIGHT  EQUAL  PARERIGHT : EOM
if ( PARERIGHT : EOM
return nums[]+nums[] EOM
if ( PARERIGHT : EOM
return max( PARERIGHT -min( PARERIGHT  EOM
if( PARERIGHT : EOM
return nums[]*nums[] EOM
if ( PARERIGHT : EOM
return max( PARERIGHT /min( PARERIGHT  EOM
def main( PARERIGHT : EOM
X  EQUAL  [] EOM
Y  EQUAL  [] EOM
topWords  EQUAL  150 EOM
maxProblemLength  EQUAL  53 EOM
if ( PARERIGHT : EOM
X COMMA Y COMMA words  EQUAL  PrepareInputLSTM DOT load_data( PARERIGHT  EOM
X  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
else: EOM
if ( PARERIGHT : EOM
X COMMA Y COMMA words  EQUAL  AlgebraProblems DOT prepareAlgebraInput( PARERIGHT  EOM
else: EOM
X COMMA Y COMMA words  EQUAL  PrepareInputANN DOT load_ANN( PARERIGHT  EOM
if ( PARERIGHT : EOM
model  EQUAL  defineModelandOptimizer(networkType COMMA top_words EQUAL  COMMA max_length EQUAL  COMMA  ninputs EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit(X COMMA  to_categorical( PARERIGHT  COMMA  epochs EQUAL  COMMA  batch_size EQUAL  COMMA  verbose EQUAL  PARERIGHT  EOM
while ( PARERIGHT : EOM
problem  EQUAL  input( EOM
if ( PARERIGHT : EOM
processed  EQUAL  PrepareInputLSTM DOT process( PARERIGHT  EOM
X_test  EQUAL  np DOT array(PrepareInputLSTM DOT words_2_ints([] DOT strip( PARERIGHT  DOT split( PARERIGHT ] COMMA words PARERIGHT  PARERIGHT  EOM
X_test  EQUAL   sequence DOT pad_sequences( PARERIGHT  EOM
if ( PARERIGHT : EOM
processed  EQUAL  PrepareInputANN DOT process( PARERIGHT  EOM
X_test  EQUAL  np DOT array(PrepareInputANN DOT makemap( PARERIGHT  PARERIGHT  EOM
nums  EQUAL  processed[] EOM
problemType  EQUAL  list(model DOT predict( PARERIGHT  PARERIGHT [] EOM
problemTypes  EQUAL  [] EOM
ans  EQUAL  problemTypes[] EOM
else: EOM
true_classes  EQUAL  [] EOM
predicted_classes  EQUAL  [] EOM
if ( PARERIGHT : EOM
model  EQUAL  svm DOT SVC( PARERIGHT  EOM
scores  EQUAL  sklearn DOT model_selection DOT cross_val_score( PARERIGHT  EOM
else: EOM
kfold  EQUAL  StratifiedKFold( PARERIGHT  EOM
trueclass  EQUAL  [] EOM
predclass  EQUAL  [] EOM
for train COMMA  test in kfold: EOM
if ( PARERIGHT : EOM
model  EQUAL  defineModelandOptimizer( PARERIGHT  EOM
model DOT fit(X[] COMMA  to_categorical( PARERIGHT  COMMA  epochs EQUAL  COMMA  batch_size EQUAL  COMMA  verbose EQUAL  PARERIGHT  EOM
if ( PARERIGHT : EOM
model  EQUAL  defineModelandOptimizer(networkType COMMA  ninputs EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit(X[] COMMA  to_categorical( PARERIGHT  COMMA  epochs EQUAL  COMMA  batch_size EQUAL  COMMA  verbose EQUAL  PARERIGHT  EOM
scores  EQUAL  model DOT evaluate(X[] COMMA  to_categorical( PARERIGHT  COMMA  verbose EQUAL  PARERIGHT  EOM
finalloss  EQUAL  model DOT evaluate(X[] COMMA  to_categorical( PARERIGHT  COMMA  verbose EQUAL  PARERIGHT  EOM
true_classes  EQUAL  Y[] DOT tolist( PARERIGHT  EOM
trueclass  EQUAL  trueclass + true_classes EOM
predicted_classes  EQUAL  model DOT predict_classes(X[] COMMA  len( PARERIGHT  PARERIGHT  DOT tolist( PARERIGHT  EOM
predclass  EQUAL  predclass+ predicted_classes EOM
ct EQUAL  0 EOM
for i in range(0 COMMA  len( PARERIGHT  PARERIGHT : EOM
if ( PARERIGHT : EOM
ct+ EQUAL 1 EOM
trueclass  EQUAL  np DOT array( PARERIGHT  EOM
predclass  EQUAL  np DOT array( PARERIGHT  EOM
correctGuesses  EQUAL  0 EOM
wrongGuesses  EQUAL  0 EOM
for i in range(0 COMMA  len( PARERIGHT  PARERIGHT : EOM
if( PARERIGHT : EOM
if ( PARERIGHT : EOM
correctGuesses+ EQUAL 1 EOM
else: EOM
wrongGuesses+ EQUAL 1 EOM
pdb DOT set_trace( PARERIGHT  EOM
if ( PARERIGHT : EOM
main( PARERIGHT from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
def build_LSTM_model( PARERIGHT : EOM
model DOT add(LSTM(nput_shape EQUAL ( PARERIGHT  COMMA units EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return modelfrom __future__ import print_function EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Conv1D COMMA  MaxPooling1D EOM
from keras DOT datasets import imdb EOM
top_words  EQUAL  20000 EOM
maxlen  EQUAL  100 EOM
embedding_size  EQUAL  128 EOM
kernel_size  EQUAL  5 EOM
filters  EQUAL  64 EOM
pool_size  EQUAL  4 EOM
lstm_output_size  EQUAL  70 EOM
batch_size  EQUAL  30 EOM
epochs  EQUAL  2 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
x_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
x_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(x_train COMMA  y_train COMMA batch_size EQUAL  COMMA epochs EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten COMMA  BatchNormalization EOM
from keras DOT layers import Convolution2D COMMA  MaxPooling2D EOM
from keras DOT callbacks import ModelCheckpoint EOM
from keras DOT utils import np_utils EOM
from keras DOT optimizers import adagrad COMMA  adadelta EOM
from keras import regularizers EOM
from keras DOT layers import LSTM EOM
from keras DOT regularizers import l2 EOM
class LSTM_M3: EOM
def __init__( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(N COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT Model  EQUAL  modelfrom keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
def build_improved_model( PARERIGHT : EOM
model DOT add(LSTM(nput_shape EQUAL ( PARERIGHT  COMMA units EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def build_basic_model( PARERIGHT : EOM
model DOT add(LSTM(nput_shape EQUAL ( PARERIGHT  COMMA units EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout EOM
from keras DOT layers import Input COMMA  Dense COMMA  Embedding COMMA  Conv2D COMMA  MaxPool2D EOM
from keras DOT layers import Reshape COMMA  Flatten COMMA  Dropout COMMA  Concatenate EOM
from keras DOT layers import LSTM COMMA  Merge COMMA  Dense COMMA  Embedding COMMA  Input COMMA Bidirectional EOM
from keras DOT models import Model EOM
from keras DOT layers import merge EOM
def basic_mlp( PARERIGHT : EOM
model_image  EQUAL  Sequential( PARERIGHT  EOM
model_image DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language  EQUAL  Sequential( PARERIGHT  EOM
model_language DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM(num_hidden_units_lstm COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
for i in xrange( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def deeper_lstm( PARERIGHT : EOM
inpx1 EQUAL Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
x1 EQUAL Dense( PARERIGHT ( PARERIGHT  EOM
x1 EQUAL Dropout( PARERIGHT ( PARERIGHT  EOM
image_model  EQUAL  Model( PARERIGHT  EOM
image_model DOT summary( PARERIGHT  EOM
inpx0 EQUAL Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
x0 EQUAL Embedding( PARERIGHT ( PARERIGHT  EOM
x1 EQUAL LSTM( PARERIGHT ( PARERIGHT  EOM
x1 EQUAL LSTM( PARERIGHT ( PARERIGHT  EOM
x2 EQUAL LSTM( PARERIGHT ( PARERIGHT  EOM
x2 EQUAL Dense( PARERIGHT ( PARERIGHT  EOM
x2 EQUAL Dropout( PARERIGHT ( PARERIGHT  EOM
embedding_model  EQUAL  Model( PARERIGHT  EOM
embedding_model DOT summary( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
for i in xrange( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def visual_lstm( PARERIGHT : EOM
inpx1 EQUAL Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
x1 EQUAL Dense( PARERIGHT ( PARERIGHT  EOM
x1 EQUAL Reshape(( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
image_model  EQUAL  Model( PARERIGHT  EOM
image_model DOT summary( PARERIGHT  EOM
inpx0 EQUAL Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
x0 EQUAL Embedding( PARERIGHT ( PARERIGHT  EOM
x2 EQUAL Dense( PARERIGHT ( PARERIGHT  EOM
x2 EQUAL Dropout( PARERIGHT ( PARERIGHT  EOM
embedding_model  EQUAL  Model( PARERIGHT  EOM
embedding_model DOT summary( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def visual_lstm2( PARERIGHT : EOM
inpx1 EQUAL Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
x1 EQUAL Dense( PARERIGHT ( PARERIGHT  EOM
x1 EQUAL Reshape(( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
image_model  EQUAL  Model( PARERIGHT  EOM
image_model DOT summary( PARERIGHT  EOM
inpx0 EQUAL Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
x0 EQUAL Embedding( PARERIGHT ( PARERIGHT  EOM
x2 EQUAL Dense( PARERIGHT ( PARERIGHT  EOM
x2 EQUAL Dropout( PARERIGHT ( PARERIGHT  EOM
embedding_model  EQUAL  Model( PARERIGHT  EOM
embedding_model DOT summary( PARERIGHT  EOM
inpx2 EQUAL Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
x1 EQUAL Dense( PARERIGHT ( PARERIGHT  EOM
x3 EQUAL Reshape(( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
image_model2  EQUAL  Model( PARERIGHT  EOM
image_model2 DOT summary( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout EOM
from keras DOT layers import LSTM COMMA  Merge COMMA  Dense EOM
def VQA_MODEL( PARERIGHT : EOM
image_feature_size  EQUAL  4096 EOM
word_feature_size  EQUAL  300 EOM
number_of_LSTM  EQUAL  3 EOM
number_of_hidden_units_LSTM  EQUAL  512 EOM
max_length_questions  EQUAL  30 EOM
number_of_dense_layers  EQUAL  3 EOM
number_of_hidden_units  EQUAL  1024 EOM
activation_function  EQUAL  EOM
dropout_pct  EQUAL  0 DOT 5 EOM
model_image  EQUAL  Sequential( PARERIGHT  EOM
model_image DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language  EQUAL  Sequential( PARERIGHT  EOM
model_language DOT add(LSTM(number_of_hidden_units_LSTM COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
for _ in xrange( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
import numpy as np EOM
import logging EOM
from rasa_core DOT policies DOT keras_policy import KerasPolicy EOM
logger  EQUAL  logging DOT getLogger( PARERIGHT  EOM
class BotPolicy( PARERIGHT : EOM
def model_architecture( PARERIGHT : EOM
from keras DOT layers import LSTM COMMA  Activation COMMA  Masking COMMA  Dense EOM
from keras DOT models import Sequential EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Masking COMMA  LSTM COMMA  Dense COMMA  TimeDistributed COMMA  Activation EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if len( PARERIGHT   EQUAL             model DOT add(Masking( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             model DOT add(Masking(mask_value EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
raise ValueError(th of output_shape  EQUAL (len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
logger DOT debug(model DOT summary( PARERIGHT  PARERIGHT  EOM
return modelfrom __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
from __future__ import unicode_literals EOM
import logging EOM
from rasa_core DOT policies DOT keras_policy import KerasPolicy EOM
logger  EQUAL  logging DOT getLogger( PARERIGHT  EOM
class ClofusBotPolicy( PARERIGHT : EOM
def model_architecture( PARERIGHT : EOM
from keras DOT layers import LSTM COMMA  Activation COMMA  Masking COMMA  Dense EOM
from keras DOT models import Sequential EOM
from keras DOT models import Sequential EOM
from keras DOT layers import \ EOM
Masking COMMA  LSTM COMMA  Dense COMMA  TimeDistributed COMMA  Activation EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if len( PARERIGHT   EQUAL             model DOT add(Masking( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             model DOT add(Masking(mask_value EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
raise ValueError(th of output_shape  EQUAL (len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
logger DOT debug(model DOT summary( PARERIGHT  PARERIGHT  EOM
return model EOM
import os EOM
os DOT environ[]  EQUAL  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Activation COMMA  Dropout COMMA  LSTM COMMA  Bidirectional EOM
from keras DOT layers DOT convolutional import MaxPooling1D COMMA  Conv1D EOM
from keras DOT callbacks import EarlyStopping EOM
from keras DOT models import load_model EOM
import numpy as np EOM
import pandas as pd EOM
import functools EOM
from keras import backend as K EOM
import tensorflow as tf EOM
import Doc2Vec EOM
def as_keras_metric( PARERIGHT : EOM
def wrapper( PARERIGHT : EOM
value COMMA  update_op  EQUAL  method( PARERIGHT  EOM
K DOT get_session( PARERIGHT  DOT run(tf DOT local_variables_initializer( PARERIGHT  PARERIGHT  EOM
with tf DOT control_dependencies( PARERIGHT : EOM
value  EQUAL  tf DOT identity( PARERIGHT  EOM
return value EOM
return wrapper EOM
def MyLSTM( PARERIGHT : EOM
feature  EQUAL  700 EOM
vec_size  EQUAL  300 EOM
auc_roc  EQUAL  as_keras_metric( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA tivation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
if __name__  EQUAL  EQUAL  : EOM
model  EQUAL  MyLSTM( PARERIGHT  EOM
trainData COMMA  trainLabel  EQUAL  Doc2Vec DOT LoadDataTrain( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
X_test  EQUAL  Doc2Vec DOT LoadDataTest( PARERIGHT  EOM
Y_test  EQUAL  model DOT predict( PARERIGHT  EOM
Doc2Vec DOT SaveResult( PARERIGHT from keras DOT layers import Dense COMMA  Dropout COMMA  Flatten COMMA  LSTM EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
from keras DOT layers DOT convolutional import Conv1D COMMA  MaxPooling1D EOM
from sklearn DOT metrics import accuracy_score EOM
import numpy as np EOM
import itertools EOM
from scipy DOT signal import butter COMMA  lfilter EOM
def butter_bandpass( PARERIGHT : EOM
nyq  EQUAL  0 DOT 5 * fs EOM
low  EQUAL  lowcut / nyq EOM
b COMMA  a  EQUAL  butter( PARERIGHT  EOM
return b COMMA  a EOM
def butter_bandpass_filter( PARERIGHT : EOM
b COMMA  a  EQUAL  butter_bandpass( PARERIGHT  EOM
y  EQUAL  lfilter( PARERIGHT  EOM
return y EOM
def conv_classifier( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D(filters EQUAL  COMMA  padding EQUAL  COMMA  activation EQUAL  COMMA input_shape EQUAL ( PARERIGHT  COMMA  kernel_size EQUAL  COMMA  dilation_rate EQUAL  PARERIGHT   PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
summary  EQUAL  model DOT summary( PARERIGHT  EOM
return model COMMA  summary EOM
def hybrid_classifier( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D(filters EQUAL  COMMA  padding EQUAL  COMMA  activation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  kernel_size EQUAL  PARERIGHT   PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
summary  EQUAL  model DOT summary( PARERIGHT  EOM
return model COMMA  summary EOM
def lstm_classifier( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(units  EQUAL  COMMA  return_sequences EQUAL  COMMA  input_shape  EQUAL ( PARERIGHT   PARERIGHT   PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
summary  EQUAL  model DOT summary( PARERIGHT  EOM
return model COMMA  summary EOM
def expandgrid( PARERIGHT : EOM
product  EQUAL  list(itertools DOT product( PARERIGHT  PARERIGHT  EOM
return product EOM
def evaluate( PARERIGHT : EOM
Y_pred  EQUAL  [] EOM
freq_tab  EQUAL  [] EOM
for example in X: EOM
predic  EQUAL  classifier DOT predict( PARERIGHT  EOM
b_count  EQUAL  np DOT bincount( PARERIGHT  EOM
Y_pred DOT append(np DOT argmax( PARERIGHT  PARERIGHT  EOM
n_zero  EQUAL  np DOT nonzero( PARERIGHT [] EOM
freq_tab DOT append(list(zip( PARERIGHT  PARERIGHT   PARERIGHT  EOM
score  EQUAL  accuracy_score( PARERIGHT  EOM
return score  COMMA  freq_tab EOM
import keras DOT models EOM
from keras DOT layers import Dense EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT constraints import maxnorm COMMA  non_neg EOM
def singlevar_model( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def baseline_model( PARERIGHT : EOM
model DOT add(Dropout(dropout COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def medium_model( PARERIGHT : EOM
model DOT add(Dropout(dropout COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(11 COMMA  input_dim EQUAL  COMMA  kernel_initializer EQUAL  COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(16 COMMA  kernel_initializer EQUAL  COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def medium2_model( PARERIGHT : EOM
model DOT add(Dropout(dropout COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(32 COMMA  input_dim EQUAL  COMMA  kernel_initializer EQUAL  COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(32 COMMA  kernel_initializer EQUAL  COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def two_var_medium_model( PARERIGHT : EOM
model DOT add(Dense(32 COMMA  input_dim EQUAL  COMMA  kernel_initializer EQUAL  COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def xlarge_model( PARERIGHT : EOM
model DOT add(Dropout(dropout COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(16 COMMA   kernel_initializer EQUAL  COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(16 COMMA  kernel_initializer EQUAL  COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(16 COMMA  kernel_initializer EQUAL  COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(neurons COMMA  batch_input_shape EQUAL ( PARERIGHT  COMMA  stateful EQUAL  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Embedding COMMA  LSTM COMMA  TimeDistributed EOM
from keras DOT optimizers import Adam EOM
from keras import initializers EOM
from weightnorm import AdamWithWeightnorm EOM
import tensorflow as tf EOM
from multiplicative_lstm import MultiplicativeLSTM EOM
from params import * EOM
def tf_softmax_logits( PARERIGHT : EOM
return tf DOT nn DOT softmax_cross_entropy_with_logits( PARERIGHT  EOM
def make_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(features COMMA LSTM_SIZE COMMA atch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(MultiplicativeLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(ense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  AdamWithWeightnorm( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def make_run_model( PARERIGHT : EOM
run_model  EQUAL  Sequential( PARERIGHT  EOM
run_model DOT add(Embedding(features COMMA LSTM_SIZE COMMA atch_input_shape EQUAL ( PARERIGHT  COMMA embeddings_initializer EQUAL  PARERIGHT  PARERIGHT  EOM
run_model DOT add(MultiplicativeLSTM( PARERIGHT  PARERIGHT  EOM
run_model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
return run_modelfrom keras DOT preprocessing import sequence EOM
from keras DOT utils import np_utils EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Embedding EOM
from keras DOT layers import LSTM COMMA  SimpleRNN COMMA  GRU COMMA  Flatten COMMA  Convolution1D COMMA  MaxPooling1D EOM
from keras DOT initializers import RandomUniform EOM
from keras import optimizers EOM
def main( PARERIGHT : EOM
np DOT random DOT seed( PARERIGHT  EOM
hidden_units  EQUAL  1000 EOM
dim  EQUAL  1000 EOM
batch_size  EQUAL  256 EOM
initializer  EQUAL  RandomUniform( PARERIGHT  EOM
sgd  EQUAL  optimizers DOT SGD( PARERIGHT  EOM
left  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
left DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
left DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
left DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
left DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
right  EQUAL  Sequential( PARERIGHT  EOM
right DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
right DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
right DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
right DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(X_train COMMA  y_train COMMA  batch_size EQUAL  COMMA  nb_epoch EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
score COMMA  acc  EQUAL  model DOT evaluate( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
main( PARERIGHT keras EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Activation EOM
model  EQUAL  Sequential([] PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
import keras DOT backend as K EOM
def mean_pred( PARERIGHT : EOM
return K DOT mean( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
import numpy as np EOM
data  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
labels  EQUAL  np DOT random DOT randint(2 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
import keras EOM
import numpy as np EOM
data  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
labels  EQUAL  np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  EOM
one_hot_labels  EQUAL  keras DOT utils DOT to_categorical( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
import keras EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT optimizers import SGD EOM
import numpy as np EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  keras DOT utils DOT to_categorical(np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  COMMA  num_classes EQUAL  PARERIGHT  EOM
x_test  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_test  EQUAL  keras DOT utils DOT to_categorical(np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  COMMA  num_classes EQUAL  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
sgd  EQUAL  SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  np DOT random DOT randint(2 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  EOM
x_test  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_test  EQUAL  np DOT random DOT randint(2 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
import numpy as np EOM
import keras EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers import Conv2D COMMA  MaxPooling2D EOM
from keras DOT optimizers import SGD EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  keras DOT utils DOT to_categorical(np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  COMMA  num_classes EQUAL  PARERIGHT  EOM
x_test  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_test  EQUAL  keras DOT utils DOT to_categorical(np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  COMMA  num_classes EQUAL  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(32 COMMA  ( PARERIGHT  COMMA  activation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(32 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
sgd  EQUAL  SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Conv1D COMMA  GlobalAveragePooling1D COMMA  MaxPooling1D EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D(64 COMMA  3 COMMA  activation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(GlobalAveragePooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Dense EOM
import numpy as np EOM
data_dim  EQUAL  16 EOM
timesteps  EQUAL  8 EOM
num_classes  EQUAL  10 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT recurrent import SimpleRNN  COMMA  LSTM EOM
from keras DOT optimizers import SGD  COMMA  Adagrad EOM
LSTM_layers  EQUAL  1 EOM
LSTM_units  EQUAL  512 EOM
DNN_layers  EQUAL  3 EOM
DNN_units  EQUAL  512 EOM
question_model  EQUAL  Sequential( PARERIGHT  EOM
layer_q1  EQUAL  LSTM ( LSTM_units  COMMA  input_shape  EQUAL ( PARERIGHT   COMMA  return_sequences EQUAL  PARERIGHT  EOM
question_model DOT add( PARERIGHT  EOM
answer_1_model  EQUAL  Sequential( PARERIGHT  EOM
layer_a1  EQUAL  LSTM ( LSTM_units  COMMA  input_shape  EQUAL ( PARERIGHT   COMMA  return_sequences EQUAL  PARERIGHT  EOM
answer_1_model DOT add( PARERIGHT  EOM
answer_2_model  EQUAL  Sequential( PARERIGHT  EOM
layer_a2  EQUAL  LSTM ( LSTM_units  COMMA  input_shape  EQUAL ( PARERIGHT   COMMA  return_sequences EQUAL  PARERIGHT  EOM
answer_2_model DOT add( PARERIGHT  EOM
answer_3_model  EQUAL  Sequential( PARERIGHT  EOM
layer_a3  EQUAL  LSTM ( LSTM_units  COMMA  input_shape  EQUAL ( PARERIGHT   COMMA  return_sequences EQUAL  PARERIGHT  EOM
answer_3_model DOT add( PARERIGHT  EOM
answer_4_model  EQUAL  Sequential( PARERIGHT  EOM
layer_a4  EQUAL  LSTM ( LSTM_units  COMMA  input_shape  EQUAL ( PARERIGHT   COMMA  return_sequences EQUAL  PARERIGHT  EOM
answer_4_model DOT add( PARERIGHT  EOM
answer_5_model  EQUAL  Sequential( PARERIGHT  EOM
layer_a5  EQUAL  LSTM ( LSTM_units  COMMA  input_shape  EQUAL ( PARERIGHT   COMMA  return_sequences EQUAL  PARERIGHT  EOM
answer_5_model DOT add( PARERIGHT  EOM
image_model  EQUAL  Sequential( PARERIGHT  EOM
image_model DOT add(Reshape(input_shape  EQUAL ( PARERIGHT   COMMA  dims  EQUAL ( PARERIGHT   PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
layer_DNN_1  EQUAL  Dense( PARERIGHT  EOM
layer_DNN_1_act  EQUAL  Activation( PARERIGHT  EOM
layer_DNN_1_dro  EQUAL  Dropout( PARERIGHT  EOM
layer_DNN_2  EQUAL  Dense( PARERIGHT  EOM
layer_DNN_2_act  EQUAL  Activation( PARERIGHT  EOM
layer_DNN_2_dro  EQUAL  Dropout( PARERIGHT  EOM
layer_DNN_3  EQUAL  Dense( PARERIGHT  EOM
layer_DNN_3_act  EQUAL  Activation( PARERIGHT  EOM
layer_DNN_3_dro  EQUAL  Dropout( PARERIGHT  EOM
layer_out  EQUAL  Dense( PARERIGHT  EOM
layer_softmax  EQUAL  Activation( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
import arrow COMMA bs4 COMMA random EOM
import numexpr as ne EOM
import numpy as np EOM
import pandas as pd EOM
import tushare as ts EOM
import pypinyin EOM
import matplotlib as mpl EOM
from matplotlib import pyplot as plt EOM
from concurrent DOT futures import ProcessPoolExecutor EOM
from concurrent DOT futures import ThreadPoolExecutor EOM
from concurrent DOT futures import as_completed EOM
import keras as ks EOM
from keras import initializers COMMA models COMMA layers EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential COMMA load_model EOM
from keras DOT layers import Dense COMMA  Input COMMA  Dropout COMMA  Embedding COMMA  LSTM COMMA  Bidirectional COMMA Activation COMMA SimpleRNN COMMA Conv1D COMMA MaxPooling1D COMMA  GlobalMaxPooling1D COMMA GlobalAveragePooling1D EOM
from keras DOT optimizers import RMSprop COMMA  SGD EOM
from keras DOT applications DOT resnet50 import preprocess_input COMMA  decode_predictions EOM
import tflearn as tn EOM
import tensorflow as tf EOM
import tensorlayer as tl EOM
import zsys EOM
import ztools as zt EOM
import ztools_tq as ztq EOM
import zpd_talib as zta EOM
import zai_tools as zat EOM
def mlp01( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def mlp010( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def mlp020( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def rnn010( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(SimpleRNN(num_in*4 COMMA kernel_initializer EQUAL ( PARERIGHT  COMMA recurrent_initializer EQUAL ( PARERIGHT  COMMA activation EQUAL  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
rmsprop  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def rnn020( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(SimpleRNN(num_in*8 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm010( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(num_in*8 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm020typ( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(num_in*8 COMMA  return_sequences EQUAL  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
import os EOM
global_model_version  EQUAL  31 EOM
global_batch_size  EQUAL  32 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
import keras DOT models as km EOM
import keras as keras EOM
X_train COMMA  y_train COMMA  X_test COMMA  y_test  EQUAL  lstm DOT load_data( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
start  EQUAL  time DOT time( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
tbCallBack  EQUAL  keras DOT callbacks DOT TensorBoard( PARERIGHT  EOM
model DOT fit(X_train COMMA y_train COMMA batch_size EQUAL  COMMA nb_epoch EQUAL  COMMA validation_split EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  COMMA callbacks EQUAL [] PARERIGHT  EOM
score COMMA  acc  EQUAL  model DOT evaluate( PARERIGHT  EOM
import numpy as np EOM
from keras DOT layers import LSTM EOM
from keras DOT models import Sequential EOM
from phased_lstm_keras DOT PhasedLSTM import PhasedLSTM EOM
def main( PARERIGHT : EOM
X  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
Y  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model_lstm  EQUAL  Sequential( PARERIGHT  EOM
model_lstm DOT add(LSTM(10 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_lstm DOT summary( PARERIGHT  EOM
model_lstm DOT compile( PARERIGHT  EOM
model_plstm  EQUAL  Sequential( PARERIGHT  EOM
model_plstm DOT add(PhasedLSTM(10 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_plstm DOT summary( PARERIGHT  EOM
model_plstm DOT compile( PARERIGHT  EOM
model_lstm DOT fit( PARERIGHT  EOM
model_plstm DOT fit( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
main( PARERIGHT import numpy as np EOM
import keras EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Bidirectional COMMA  Dropout COMMA  TimeDistributed EOM
from keras DOT layers import LSTM COMMA  GRU COMMA  Flatten COMMA  Conv1D COMMA  CuDNNLSTM COMMA  CuDNNGRU COMMA  MaxPooling1D EOM
from keras DOT callbacks import ModelCheckpoint COMMA  CSVLogger EOM
from keras import regularizers EOM
window_size  EQUAL  300 EOM
def loss_fn( PARERIGHT : EOM
return 1/np DOT log( PARERIGHT  * keras DOT losses DOT binary_crossentropy( PARERIGHT  EOM
n  EQUAL  a DOT strides[] EOM
return np DOT lib DOT stride_tricks DOT as_strided(a COMMA  shape EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA  writeable EQUAL  PARERIGHT  EOM
def FC( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
init  EQUAL  keras DOT initializers DOT lecun_uniform( PARERIGHT  EOM
model DOT add(Dense(128 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  activation EQUAL  COMMA  kernel_initializer EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def LSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(CuDNNLSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def fit_model( PARERIGHT : EOM
y  EQUAL  Y EOM
optim  EQUAL  keras DOT optimizers DOT Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
csv_logger  EQUAL  CSVLogger( PARERIGHT  EOM
callbacks_list  EQUAL  [] EOM
model DOT fit( PARERIGHT  EOM
def gen_data( PARERIGHT : EOM
true_signal  EQUAL  data[] EOM
false_signal  EQUAL  data[] EOM
true_X  EQUAL  strided_app( PARERIGHT  EOM
false_X  EQUAL  strided_app( PARERIGHT  EOM
true_Y  EQUAL  np DOT ones((len( PARERIGHT  COMMA  1 PARERIGHT  PARERIGHT  EOM
false_Y  EQUAL  np DOT zeros((len( PARERIGHT  COMMA  1 PARERIGHT  PARERIGHT  EOM
X  EQUAL  np DOT concatenate( PARERIGHT  EOM
Y  EQUAL  np DOT concatenate( PARERIGHT  EOM
return X COMMA  Y EOM
def main( PARERIGHT : EOM
data  EQUAL  np DOT load( PARERIGHT  EOM
X COMMA  Y  EQUAL  gen_data( PARERIGHT  EOM
X  EQUAL  np DOT expand_dims( PARERIGHT  EOM
model  EQUAL  LSTM( PARERIGHT  EOM
fit_model( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
main( PARERIGHT from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
import keras as ks EOM
import tensorflow as tf EOM
X_train COMMA  y_train COMMA  X_test COMMA  y_test  EQUAL  lstm DOT load_data( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
start  EQUAL  time DOT time( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
predictions  EQUAL  lstm DOT predict_sequences_multiple( PARERIGHT  EOM
lstm DOT plot_results_multiple( PARERIGHT from keras DOT layers import Dense COMMA  Flatten COMMA  Dropout COMMA  Embedding EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT regularizers import l2 EOM
from keras DOT models import Sequential COMMA  load_model EOM
from keras DOT layers import MaxPooling2D COMMA  TimeDistributed EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten COMMA  Bidirectional EOM
from keras DOT optimizers import Adam EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
from keras DOT layers DOT convolutional import ( PARERIGHT  EOM
from collections import deque EOM
import sys EOM
from keras DOT optimizers import SGD EOM
class ResearchModels( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT seq_length  EQUAL  seq_length EOM
self DOT load_model  EQUAL  load_model EOM
self DOT saved_model  EQUAL  saved_model EOM
self DOT nb_classes  EQUAL  nb_classes EOM
self DOT feature_queue  EQUAL  deque( PARERIGHT  EOM
metrics  EQUAL  [] EOM
if self DOT nb_classes > EQUAL  10: EOM
metrics DOT append( PARERIGHT  EOM
if self DOT saved_model is not None: EOM
self DOT model  EQUAL  load_model( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT cnn_rnn( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT lstm( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT crnn( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  features_length * seq_length EOM
self DOT model  EQUAL  self DOT mlp( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT conv_3d( PARERIGHT  EOM
else: EOM
sys DOT exit( PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
def cnn_rnn( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def lstm( PARERIGHT : EOM
model_lstm  EQUAL  Sequential( PARERIGHT  EOM
model_lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense(2 COMMA  W_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def crnn( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Activation( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D( PARERIGHT  COMMA   name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Activation( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dropout( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Activation( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Activation( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dropout( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Flatten( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Activation( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dropout( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def mlp( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def conv_3d( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv3D( ( PARERIGHT  COMMA  activation EQUAL  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(128 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
import numpy as np EOM
np DOT random DOT seed( PARERIGHT  EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Embedding COMMA  LSTM COMMA  Bidirectional EOM
from keras DOT datasets import imdb EOM
from keras DOT callbacks import TensorBoard EOM
max_features  EQUAL  5000 EOM
no_classes  EQUAL  1 EOM
max_length  EQUAL  100 EOM
batch_size  EQUAL  32 EOM
embedding_size  EQUAL  64 EOM
dropout_rate  EQUAL  0 DOT 5 EOM
no_epochs  EQUAL  5 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
x_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
x_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
y_train  EQUAL  np DOT array( PARERIGHT  EOM
y_test  EQUAL  np DOT array( PARERIGHT  EOM
LSTM_model  EQUAL  Sequential( PARERIGHT  EOM
LSTM_model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT compile( PARERIGHT  EOM
tensorboard  EQUAL  TensorBoard( PARERIGHT  EOM
LSTM_model DOT fit( PARERIGHT import os as os EOM
import pandas as pd EOM
import numpy as np EOM
import pickle as pkl EOM
from sklearn DOT metrics import mean_squared_error as mse EOM
from sklearn DOT model_selection import train_test_split EOM
from datetime import datetime COMMA  timedelta EOM
from sklearn DOT preprocessing import StandardScaler COMMA  LabelEncoder COMMA  MinMaxScaler EOM
import math as ma EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  BatchNormalization COMMA LSTM EOM
from keras DOT optimizers import sgd COMMA rmsprop COMMA adam EOM
from keras DOT initializers import RandomNormal COMMA  RandomUniform EOM
from keras DOT losses import mean_squared_error COMMA  mean_absolute_error EOM
from keras DOT callbacks import CSVLogger EOM
seed  EQUAL  73 EOM
np DOT random DOT seed( PARERIGHT  EOM
class ModelDataLSTM( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
pass EOM
def lstm_model( PARERIGHT : EOM
features  EQUAL  X DOT shape[] EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(n COMMA  batch_input_shape EQUAL ( PARERIGHT  COMMA  stateful EQUAL  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(n COMMA  batch_input_shape EQUAL ( PARERIGHT  COMMA  stateful EQUAL  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(n COMMA  batch_input_shape EQUAL ( PARERIGHT  COMMA  stateful EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm_fit( PARERIGHT : EOM
model DOT fit( PARERIGHT  EOM
Xpred  EQUAL  model DOT predict( PARERIGHT  EOM
Xtestpred  EQUAL  model DOT predict( PARERIGHT  EOM
model DOT reset_states( PARERIGHT  EOM
return Xpred COMMA  Xtestpredfrom keras DOT layers import Dense COMMA  Dropout COMMA  TimeDistributed EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT initializers import Constant EOM
from keras DOT optimizers import Adam COMMA  RMSprop COMMA  SGD EOM
from keras DOT applications import ResNet50 as ResNet EOM
from collections import deque EOM
from keras import backend as K EOM
from keras DOT layers import Activation COMMA  Lambda COMMA  Input COMMA  Concatenate COMMA  Reshape COMMA  Flatten COMMA  concatenate EOM
from keras DOT layers import Input COMMA  Dense COMMA  Activation COMMA  Dropout COMMA  Conv3D COMMA  MaxPooling3D COMMA  Flatten COMMA ZeroPadding3D EOM
from keras DOT layers import concatenate EOM
def get_model( PARERIGHT : EOM
rm  EQUAL  LSTMModel( PARERIGHT  EOM
else: EOM
rm  EQUAL  ResNetLSTMModel( PARERIGHT  EOM
return rm EOM
def ctc_lambda_func( PARERIGHT : EOM
y_pred COMMA  labels COMMA  input_length COMMA  label_length  EQUAL  args EOM
y_pred  EQUAL  y_pred[] EOM
return K DOT ctc_batch_cost( PARERIGHT  EOM
class ResNetLSTMModel: EOM
def __init__(self COMMA  units COMMA  nb_classes COMMA  seq_length COMMA  model_name EQUAL  COMMA  image_shape EQUAL ( PARERIGHT  COMMA optimizer_name EQUAL  COMMA ning_rate EQUAL  COMMA  decay EQUAL  COMMA  lstm_dropout EQUAL  COMMA  dense_units EQUAL  COMMA  dense_dropout EQUAL  PARERIGHT : EOM
self DOT feature_queue  EQUAL  deque( PARERIGHT  EOM
self DOT image_shape  EQUAL  image_shape EOM
self DOT seq_length  EQUAL  seq_length EOM
self DOT nb_classes  EQUAL  nb_classes EOM
self DOT feature_queue  EQUAL  deque( PARERIGHT  EOM
self DOT optimizer_name  EQUAL  optimizer_name EOM
self DOT learning_rate  EQUAL  learning_rate EOM
self DOT decay  EQUAL  decay EOM
self DOT model_name  EQUAL  model_name +  +  + str( PARERIGHT  +  +  + str( PARERIGHT  +  \ EOM
metrics  EQUAL  [] EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT build_resnet( PARERIGHT  EOM
self DOT layer  EQUAL  1 EOM
self DOT direction  EQUAL  EOM
self DOT compile( PARERIGHT  EOM
def build_resnet( PARERIGHT : EOM
resnet  EQUAL  ResNet( PARERIGHT  EOM
input_data  EQUAL  Input( PARERIGHT  EOM
labels  EQUAL  Input( PARERIGHT  EOM
input_length  EQUAL  Input( PARERIGHT  EOM
label_length  EQUAL  Input( PARERIGHT  EOM
res_list  EQUAL  [] EOM
for j in range( PARERIGHT : EOM
def slice( PARERIGHT : EOM
return x[] EOM
inner  EQUAL  resnet(Lambda( PARERIGHT ( PARERIGHT  PARERIGHT  EOM
res_list DOT append( PARERIGHT  EOM
m  EQUAL  concatenate( PARERIGHT  EOM
inner  EQUAL  Reshape(( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
inner  EQUAL  TimeDistributed(Dense( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM(units COMMA  return_sequences EQUAL  COMMA  dropout EQUAL  COMMA  bias_initializer EQUAL ( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
y_pred  EQUAL  TimeDistributed(Dense( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
loss_out  EQUAL  Lambda(ctc_lambda_func COMMA  output_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT direction  EQUAL  EOM
return model EOM
def compile( PARERIGHT : EOM
if lr is not None: EOM
self DOT learning_rate  EQUAL  lr EOM
if self DOT optimizer_name  EQUAL  EQUAL  : EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
elif self DOT optimizer_name  EQUAL  EQUAL  : EOM
optimizer  EQUAL  RMSprop( PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
class LSTMModel: EOM
def __init__( PARERIGHT : EOM
self DOT nb_classes  EQUAL  nb_classes EOM
self DOT feature_queue  EQUAL  deque( PARERIGHT  EOM
self DOT optimizer_name  EQUAL  optimizer_name EOM
self DOT learning_rate  EQUAL  learning_rate EOM
self DOT decay  EQUAL  decay EOM
self DOT model_name  EQUAL  model_name +  +  + str( PARERIGHT  +  +  + str( PARERIGHT  +  + \ EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
if model_name  EQUAL  EQUAL  : EOM
m COMMA  l COMMA  d  EQUAL  lstm( PARERIGHT  EOM
elif model_name  EQUAL  EQUAL  : EOM
m COMMA  l COMMA  d  EQUAL  two_layer_lstm( PARERIGHT  EOM
elif model_name  EQUAL  EQUAL  : EOM
m COMMA  l COMMA  d  EQUAL  three_layer_lstm( PARERIGHT  EOM
else: EOM
raise ValueError({}\ DOT format( PARERIGHT  PARERIGHT  EOM
self DOT model  EQUAL  m EOM
self DOT layer  EQUAL  l EOM
self DOT direction  EQUAL  d EOM
def compile( PARERIGHT : EOM
if lr is not None: EOM
self DOT learning_rate  EQUAL  lr EOM
if self DOT optimizer_name  EQUAL  EQUAL  : EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
elif self DOT optimizer_name  EQUAL  EQUAL  : EOM
optimizer  EQUAL  RMSprop( PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
def two_layer_lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(units COMMA  return_sequences EQUAL  COMMA  bias_initializer EQUAL ( PARERIGHT  COMMA  dropout EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(units COMMA  return_sequences EQUAL  COMMA  dropout EQUAL  COMMA  bias_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
return model COMMA  2 COMMA  EOM
def three_layer_lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(units COMMA  return_sequences EQUAL  COMMA  dropout EQUAL  COMMA  bias_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(units COMMA  return_sequences EQUAL  COMMA  dropout EQUAL  COMMA  bias_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(units COMMA  return_sequences EQUAL  COMMA  dropout EQUAL  COMMA  bias_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
return model COMMA  3 COMMA  EOM
def lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(units COMMA  return_sequences EQUAL  COMMA  dropout EQUAL  COMMA  bias_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
return model COMMA  1 COMMA  import numpy as np EOM
import keras EOM
from keras DOT models import Sequential COMMA  Graph EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT convolutional import Convolution1D COMMA  MaxPooling1D EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT utils import np_utils COMMA  generic_utils EOM
import data_helpers EOM
from w2v import train_word2vec EOM
from sklearn DOT cross_validation import StratifiedKFold EOM
cnn_train COMMA lstm_train COMMA Y_train COMMA cnn_vocabulary COMMA cnn_vocabulary_inv COMMA lstm_vocabulary COMMA lstm_vocabulary_inv  EQUAL  data_helpers DOT load_data( PARERIGHT  EOM
cnn_embedding_weights COMMA lstm_embedding_weights  EQUAL  train_word2vec( PARERIGHT  EOM
shuffle_indices  EQUAL  np DOT random DOT permutation(np DOT arange(len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
cnn_shuffled  EQUAL  cnn_train[] EOM
lstm_shuffled  EQUAL  lstm_train[] EOM
Y_train  EQUAL  Y_train[] EOM
filter_sizes  EQUAL  ( PARERIGHT  EOM
num_filters  EQUAL  150 EOM
hidden_dims  EQUAL  150 EOM
cnn_graph  EQUAL  Graph( PARERIGHT  EOM
cnn_graph DOT add_input(name EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
for fsz in filter_sizes: EOM
conv  EQUAL  Convolution1D( PARERIGHT  EOM
pool  EQUAL  MaxPooling1D( PARERIGHT  EOM
cnn_graph DOT add_node( PARERIGHT  EOM
cnn_graph DOT add_node( PARERIGHT  EOM
cnn_graph DOT add_node(Flatten( PARERIGHT  COMMA  name EQUAL  COMMA  input EQUAL  PARERIGHT  EOM
if len( PARERIGHT >1: EOM
cnn_graph DOT add_output( PARERIGHT  EOM
else: EOM
cnn_graph DOT add_output( PARERIGHT  EOM
cnn  EQUAL  Sequential( PARERIGHT  EOM
cnn DOT add(Embedding(len( PARERIGHT  COMMA  300 COMMA  input_length EQUAL  COMMA weights EQUAL  PARERIGHT  PARERIGHT  EOM
cnn DOT add(Dropout(0 DOT 25 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
cnn DOT add( PARERIGHT  EOM
lstm  EQUAL  Sequential( PARERIGHT  EOM
lstm DOT add(Embedding(len( PARERIGHT  COMMA  300 COMMA  input_length EQUAL  COMMA weights EQUAL  PARERIGHT  PARERIGHT  EOM
lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT core DOT Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
from keras DOT utils import np_utils EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import LSTM EOM
def get_simple_net( PARERIGHT : EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def get_dropout_net( PARERIGHT : EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelimport os EOM
from sklearn DOT externals import joblib EOM
import numpy as np EOM
from copy import deepcopy EOM
from plmodel import PLModel COMMA  DefaultScaler EOM
from sklearn DOT preprocessing import StandardScaler COMMA  MinMaxScaler EOM
from keras DOT models import Sequential COMMA  load_model EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  LSTM COMMA  BatchNormalization EOM
from keras DOT optimizers import Adam COMMA  RMSprop EOM
from keras DOT initializers import Constant EOM
from keras DOT callbacks import EarlyStopping COMMA  ModelCheckpoint EOM
import tensorflow as tf EOM
from modelcontainer import DefaultModelContainer EOM
class KerasModelContainer( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
DefaultModelContainer DOT __init__( PARERIGHT  EOM
self DOT model  EQUAL  model EOM
if metric in []: EOM
self DOT loss  EQUAL  EOM
self DOT task  EQUAL  EOM
self DOT last_act  EQUAL  EOM
elif metric in []: EOM
self DOT loss  EQUAL  EOM
self DOT task  EQUAL  EOM
self DOT last_act  EQUAL  EOM
elif metric in []: EOM
self DOT loss  EQUAL  EOM
self DOT task  EQUAL  EOM
self DOT last_act  EQUAL  EOM
elif metric in []: EOM
self DOT loss  EQUAL  EOM
self DOT task  EQUAL  EOM
self DOT last_act  EQUAL  EOM
elif  in metric: EOM
self DOT loss  EQUAL  metric EOM
self DOT task  EQUAL  EOM
self DOT last_act  EQUAL  EOM
elif task  EQUAL  EQUAL  : EOM
self DOT loss  EQUAL  EOM
self DOT task  EQUAL  EOM
self DOT last_act  EQUAL  EOM
else: EOM
raise NotImplementedError( DOT format( PARERIGHT  PARERIGHT  EOM
def build_model( PARERIGHT : EOM
return self DOT model EOM
class KerasMLP( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
KerasModelContainer DOT __init__( PARERIGHT  EOM
self DOT dense_units  EQUAL  dense_units EOM
self DOT dropout  EQUAL  dropout EOM
self DOT lr  EQUAL  lr EOM
return EOM
def build_model( PARERIGHT : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add(Dense(input_shape EQUAL ( PARERIGHT  COMMA  units EQUAL  COMMA  bias_initializer EQUAL ( PARERIGHT  COMMA ernel_initializer EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense(units EQUAL  COMMA  bias_initializer EQUAL ( PARERIGHT  COMMA ernel_initializer EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
self DOT model DOT compile(optimizer EQUAL ( PARERIGHT  COMMA  loss EQUAL  PARERIGHT  EOM
return self DOT model EOM
class KerasMLP2( PARERIGHT : EOM
def __init__(self COMMA  model EQUAL  COMMA  task EQUAL  COMMA  metric EQUAL  COMMA e_units EQUAL ( PARERIGHT  COMMA  dropout EQUAL ( PARERIGHT  COMMA  lr EQUAL  PARERIGHT : EOM
KerasModelContainer DOT __init__( PARERIGHT  EOM
self DOT dense_units  EQUAL  dense_units EOM
self DOT dropout  EQUAL  dropout EOM
self DOT lr  EQUAL  lr EOM
return EOM
def build_model( PARERIGHT : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add(Dense(input_shape EQUAL ( PARERIGHT  COMMA  units EQUAL [] COMMA  bias_initializer EQUAL ( PARERIGHT  COMMA ernel_initializer EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense(units EQUAL [] COMMA  bias_initializer EQUAL ( PARERIGHT  COMMA ernel_initializer EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense(units EQUAL  COMMA  bias_initializer EQUAL ( PARERIGHT  COMMA ernel_initializer EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
self DOT model DOT compile(optimizer EQUAL ( PARERIGHT  COMMA  loss EQUAL  PARERIGHT  EOM
return self DOT model EOM
class KerasLSTM( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
KerasModelContainer DOT __init__( PARERIGHT  EOM
self DOT lstm_units  EQUAL  lstm_units EOM
self DOT n_lookback  EQUAL  n_lookback EOM
return EOM
def build_model( PARERIGHT : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add(LSTM(units EQUAL  COMMA  activation EQUAL  COMMA  recurrent_activation EQUAL  COMMA ut_shape EQUAL ( PARERIGHT  COMMA  dropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense(units EQUAL  COMMA  bias_initializer EQUAL ( PARERIGHT  COMMA ernel_initializer EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
return self DOT model EOM
class KerasLSTM2( PARERIGHT : EOM
def __init__(self COMMA  model EQUAL  COMMA  task EQUAL  COMMA  metric EQUAL  COMMA lookback EQUAL  COMMA  lstm_units EQUAL ( PARERIGHT  PARERIGHT : EOM
KerasModelContainer DOT __init__( PARERIGHT  EOM
self DOT lstm_units  EQUAL  lstm_units EOM
self DOT n_lookback  EQUAL  n_lookback EOM
return EOM
def build_model( PARERIGHT : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add(LSTM(units EQUAL [] COMMA  activation EQUAL  COMMA  recurrent_activation EQUAL  COMMA ut_shape EQUAL ( PARERIGHT  COMMA  dropout EQUAL  COMMA  recurrent_dropout EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense(units EQUAL  COMMA  bias_initializer EQUAL ( PARERIGHT  COMMA ernel_initializer EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
return self DOT model EOM
class KerasLSTM3( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
KerasModelContainer DOT __init__( PARERIGHT  EOM
self DOT lstm_units  EQUAL  lstm_units EOM
self DOT dense_units  EQUAL  dense_units EOM
self DOT n_lookback  EQUAL  n_lookback EOM
return EOM
def build_model( PARERIGHT : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add(LSTM(units EQUAL  COMMA  activation EQUAL  COMMA  recurrent_activation EQUAL  COMMA ut_shape EQUAL ( PARERIGHT  COMMA  dropout EQUAL  COMMA  recurrent_dropout EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense(**{: self DOT dense_units COMMA  : Constant( PARERIGHT  COMMA rnel_initializerglorot_normalactivationrelu EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense(units EQUAL  COMMA  bias_initializer EQUAL ( PARERIGHT  COMMA ernel_initializer EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
return self DOT model EOM
class KerasModel( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
PLModel DOT __init__( PARERIGHT  EOM
self DOT model_container  EQUAL  model_container EOM
self DOT nb_epochs  EQUAL  nb_epochs EOM
self DOT fit_res  EQUAL  None EOM
self DOT tmp_dir  EQUAL  tmp_dir EOM
if not os DOT path DOT exists( PARERIGHT : EOM
os DOT makedirs( PARERIGHT  EOM
return EOM
def _fit_and_eval( PARERIGHT : EOM
try: EOM
X_train_  EQUAL  self DOT scaler DOT transform( PARERIGHT  EOM
except AttributeError as e: EOM
self DOT fit_scaler( PARERIGHT  EOM
X_train_  EQUAL  self DOT scaler DOT transform( PARERIGHT  EOM
if getattr( PARERIGHT  is None: EOM
self DOT model_container DOT n_lookback  EQUAL  None EOM
if self DOT model is not None and len(self DOT model DOT get_input_shape_at( PARERIGHT  PARERIGHT  > 2: EOM
self DOT model_container DOT n_lookback  EQUAL  self DOT model DOT get_input_shape_at( PARERIGHT [] EOM
if self DOT model_container DOT n_lookback is not None: EOM
X_batches COMMA  y_batches  EQUAL  [] COMMA  [] EOM
for i in range( PARERIGHT : EOM
xbatch  EQUAL  X_train_[] EOM
ybatch  EQUAL  y_train[] EOM
X_batches DOT append( PARERIGHT  EOM
y_batches DOT append( PARERIGHT  EOM
X_train_  EQUAL  np DOT array( PARERIGHT  EOM
y_train  EQUAL  np DOT array( PARERIGHT  EOM
ival  EQUAL  int(np DOT floor(( PARERIGHT  * X_train_ DOT shape[] PARERIGHT  PARERIGHT  EOM
X_val COMMA  y_val  EQUAL  X_train_[] COMMA  y_train[] EOM
X_train_ COMMA  y_train  EQUAL  X_train_[] COMMA  y_train[] EOM
callbacks  EQUAL  [] EOM
if early_stop: EOM
callbacks  EQUAL  [] EOM
callbacks DOT append(ModelCheckpoint(filepath EQUAL ( PARERIGHT  COMMA  verbose EQUAL  COMMA  save_best_only EQUAL  PARERIGHT  PARERIGHT  EOM
if self DOT model is None: EOM
self DOT set_model(self DOT model_container DOT build_model( PARERIGHT  PARERIGHT  EOM
self DOT fit_res  EQUAL  self DOT model DOT fit(X_train_ COMMA  y_train COMMA  epochs EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  COMMA erbose EQUAL  COMMA  callbacks EQUAL  PARERIGHT  EOM
if use_best: EOM
self DOT model  EQUAL  load_model(os DOT path DOT join( PARERIGHT  PARERIGHT  EOM
return self DOT fit_res EOM
def fit( PARERIGHT : EOM
try: EOM
X_train_  EQUAL  self DOT scaler DOT transform( PARERIGHT  EOM
except AttributeError as e: EOM
self DOT fit_scaler( PARERIGHT  EOM
X_train_  EQUAL  self DOT scaler DOT transform( PARERIGHT  EOM
if getattr( PARERIGHT  is None: EOM
self DOT model_container DOT n_lookback  EQUAL  None EOM
if self DOT model is not None and len(self DOT model DOT get_input_shape_at( PARERIGHT  PARERIGHT  > 2: EOM
self DOT model_container DOT n_lookback  EQUAL  self DOT model DOT get_input_shape_at( PARERIGHT [] EOM
if self DOT model_container DOT n_lookback is not None: EOM
X_batches COMMA  y_batches  EQUAL  [] COMMA  [] EOM
for i in range( PARERIGHT : EOM
xbatch  EQUAL  X_train_[] EOM
ybatch  EQUAL  y_train[] EOM
X_batches DOT append( PARERIGHT  EOM
y_batches DOT append( PARERIGHT  EOM
X_train_  EQUAL  np DOT array( PARERIGHT  EOM
y_train  EQUAL  np DOT array( PARERIGHT  EOM
if self DOT model is None: EOM
self DOT set_model(self DOT model_container DOT build_model( PARERIGHT  PARERIGHT  EOM
self DOT fit_res  EQUAL  self DOT model DOT fit( PARERIGHT  EOM
return self DOT fit_res EOM
def predict( PARERIGHT : EOM
if self DOT model is None: EOM
self DOT set_model(self DOT model_container DOT build_model( PARERIGHT  PARERIGHT  EOM
X  EQUAL  self DOT scaler DOT transform( PARERIGHT  EOM
if getattr( PARERIGHT  is None: EOM
self DOT model_container DOT n_lookback  EQUAL  None EOM
if self DOT model is not None and len(self DOT model DOT get_input_shape_at( PARERIGHT  PARERIGHT  > 2: EOM
self DOT model_container DOT n_lookback  EQUAL  self DOT model DOT get_input_shape_at( PARERIGHT [] EOM
if self DOT model_container DOT n_lookback is not None: EOM
X_batches  EQUAL  [] EOM
for i in range( PARERIGHT : EOM
xbatch  EQUAL  X[] EOM
X_batches DOT append( PARERIGHT  EOM
X  EQUAL  np DOT array( PARERIGHT  EOM
y_pred  EQUAL  self DOT model DOT predict( PARERIGHT  EOM
return y_pred DOT ravel( PARERIGHT  EOM
def predict_proba( PARERIGHT : EOM
pass EOM
def save_model( PARERIGHT : EOM
self DOT model DOT save( PARERIGHT  EOM
joblib DOT dump( PARERIGHT  EOM
def load_model( PARERIGHT : EOM
keras_model  EQUAL  load_model( PARERIGHT  EOM
keras_loss  EQUAL  keras_model DOT loss EOM
model_inst  EQUAL  cls(KerasModelContainer( PARERIGHT  PARERIGHT  EOM
model_inst DOT scaler  EQUAL  joblib DOT load( PARERIGHT  EOM
return model_instfrom keras DOT layers DOT core import Dense COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
from keras import optimizers EOM
from keras DOT utils import plot_model EOM
import os EOM
import warnings EOM
def lstm_2( PARERIGHT : EOM
model_name  EQUAL  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA  optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
return model COMMA  model_name EOM
def lstm_1( PARERIGHT : EOM
model_name  EQUAL  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA  optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
return model COMMA  model_name EOM
def lstm_bp( PARERIGHT : EOM
model_name  EQUAL  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(optimizer EQUAL ( PARERIGHT  COMMA  loss EQUAL  PARERIGHT  EOM
return model COMMA  model_name EOM
if __name__  EQUAL  EQUAL  : EOM
layer_out  EQUAL  [] EOM
input_shape  EQUAL  ( PARERIGHT  EOM
model COMMA model_name EQUAL  lstm_bp( PARERIGHT  EOM
plot_model( PARERIGHT import numpy as np EOM
import pandas as pd EOM
from keras DOT layers import Dense COMMA  Activation EOM
from keras DOT layers import LSTM as lstm_m EOM
from keras DOT models import Sequential EOM
from keras DOT optimizers import RMSprop EOM
from ML_models DOT OutputLayerModel_I import OutputLayerModel_I EOM
additionalDim  EQUAL  1 EOM
vecLen  EQUAL  115 EOM
def BuildLSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
l EQUAL lstm_m(128 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT add(lstm_m(128 COMMA input_shape  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
NumOfInstances  EQUAL  len( PARERIGHT  EOM
X  EQUAL  np DOT reshape(X COMMA  ( PARERIGHT  PARERIGHT  EOM
x  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
x  EQUAL  X[] EOM
y  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
x  EQUAL  X[] EOM
y  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
scores  EQUAL  model DOT predict( PARERIGHT  EOM
with open(str( PARERIGHT  +  +  COMMA   PARERIGHT  as scoresFP: EOM
for sc in scores: EOM
scoresFP DOT write(str( PARERIGHT  +  PARERIGHT  EOM
class LSTM ( PARERIGHT : EOM
def train( PARERIGHT : EOM
thresh EQUAL 1 EOM
NumOfInstances  EQUAL 1 EOM
x  EQUAL  [] EOM
vecLen EQUAL len( PARERIGHT  EOM
x  EQUAL  np DOT reshape(x COMMA  ( PARERIGHT  PARERIGHT  EOM
y  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
self DOT model DOT fit( PARERIGHT  EOM
def execute ( PARERIGHT : EOM
thresh  EQUAL  1 EOM
NumOfInstances  EQUAL  1 EOM
vecLen  EQUAL  len( PARERIGHT  EOM
x  EQUAL  np DOT reshape(x COMMA  ( PARERIGHT  PARERIGHT  EOM
y  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
scores  EQUAL  self DOT model DOT predict( PARERIGHT  EOM
return scores[] EOM
def __init__ ( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(lstm_m(128 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT model EQUAL model EOM
BuildLSTM( PARERIGHT  EOM
lstm EQUAL LSTM( PARERIGHT  EOM
lstm DOT train([]] PARERIGHT  EOM
lstm DOT execute([]] PARERIGHT from keras DOT layers import LSTM COMMA  Dense COMMA  Input COMMA  InputLayer COMMA  Permute COMMA  BatchNormalization COMMA  \ EOM
GRU COMMA  Conv1D COMMA  MaxPooling1D EOM
from keras DOT models import Sequential EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
from sklearn DOT model_selection import GridSearchCV EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from collections import defaultdict EOM
from src DOT const import * EOM
import csv EOM
INPUT_SHAPE  EQUAL  ( PARERIGHT  EOM
LSTM_SIZE  EQUAL  100 EOM
def get_model( PARERIGHT : EOM
lstm_model  EQUAL  Sequential( PARERIGHT  EOM
lstm_model DOT add(InputLayer( PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(Permute(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
lstm_model DOT summary( PARERIGHT  EOM
lstm_model DOT compile( PARERIGHT  EOM
return lstm_model EOM
def read_new_csv( PARERIGHT : EOM
players_action_dict  EQUAL  defaultdict( PARERIGHT  EOM
action_dict  EQUAL  {} EOM
action_max_id  EQUAL  0 EOM
with open( PARERIGHT  as csvfile: EOM
reader  EQUAL  csv DOT reader( PARERIGHT  EOM
for line_number COMMA  row in enumerate( PARERIGHT : EOM
player_id  EQUAL  row[] EOM
game_list  EQUAL  [] EOM
for action in row[]: EOM
if action in action_dict: EOM
action_id  EQUAL  action_dict[] EOM
else: EOM
action_id  EQUAL  action_max_id EOM
action_dict[]  EQUAL  action_max_id EOM
action_max_id + EQUAL  1 EOM
game_list DOT append( PARERIGHT  EOM
players_action_dict[] DOT append( PARERIGHT  EOM
return players_action_dict COMMA  action_max_id EOM
def split_training_set( PARERIGHT : EOM
train_dict  EQUAL  {} EOM
test_dict  EQUAL  {} EOM
for player_name COMMA  player_game in source_dict DOT items( PARERIGHT : EOM
number_of_games  EQUAL  len( PARERIGHT  EOM
split_index  EQUAL  number_of_games - int( PARERIGHT  - 2 EOM
train_game  EQUAL  player_game[] EOM
test_game  EQUAL  player_game[] EOM
train_dict[]  EQUAL  train_game EOM
test_dict[]  EQUAL  test_game EOM
return train_dict COMMA  test_dict EOM
def csv_set_to_keras_batch( PARERIGHT : EOM
batch_input  EQUAL  [] EOM
batch_output  EQUAL  [] EOM
player_id_to_name_dict  EQUAL  {} EOM
for i COMMA  t in enumerate(csv_dict DOT items( PARERIGHT  PARERIGHT : EOM
player_id_to_name_dict[]  EQUAL  t[] EOM
for string in t[]: EOM
output_array  EQUAL  np DOT zeros( PARERIGHT  EOM
output_array[]  EQUAL  1 EOM
batch_input DOT append( PARERIGHT  EOM
batch_output DOT append( PARERIGHT  EOM
return batch_input COMMA  batch_output COMMA  player_id_to_name_dict EOM
if __name__  EQUAL  EQUAL  : EOM
top_words  EQUAL  1000 EOM
value COMMA  top_words  EQUAL  read_new_csv( PARERIGHT  EOM
train COMMA  test  EQUAL  split_training_set( PARERIGHT  EOM
X_train COMMA  y_train COMMA  _  EQUAL  csv_set_to_keras_batch( PARERIGHT  EOM
X_test COMMA  y_test COMMA  _  EQUAL  csv_set_to_keras_batch( PARERIGHT  EOM
max_review_length  EQUAL  1000 EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
embedding_vecor_length  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
exit( PARERIGHT  EOM
model DOT fit(np DOT array( PARERIGHT  COMMA np DOT array( PARERIGHT  COMMA nb_epoch EQUAL  COMMA batch_size EQUAL  PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
import pickle EOM
import numpy as np EOM
np DOT random DOT seed( PARERIGHT  EOM
from keras DOT callbacks import Callback COMMA  EarlyStopping EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import np_utils EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Embedding COMMA  SpatialDropout1D EOM
from keras DOT layers import LSTM COMMA  SimpleRNN COMMA  GRU EOM
from keras DOT regularizers import l2 EOM
from keras DOT constraints import maxnorm EOM
from keras DOT datasets import imdb EOM
from qrnn DOT qrnn import QRNN EOM
def regenerate_dataset( PARERIGHT : EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_train COMMA  y_train COMMA  X_test COMMA  y_test  EQUAL  X_train[] COMMA  y_train[] COMMA  X_test[] COMMA  y_test[] EOM
return X_train COMMA  y_train COMMA  X_test COMMA  y_test EOM
class TimeHistory( PARERIGHT : EOM
def on_train_begin( PARERIGHT : EOM
self DOT times  EQUAL  0 EOM
def on_epoch_begin( PARERIGHT : EOM
self DOT epoch_time_start  EQUAL  time DOT time( PARERIGHT  EOM
def on_epoch_end( PARERIGHT : EOM
self DOT times  EQUAL  time DOT time( PARERIGHT  - self DOT epoch_time_start EOM
time_callback  EQUAL  TimeHistory( PARERIGHT  EOM
def time_lstm( PARERIGHT : EOM
model_lstm  EQUAL  Sequential( PARERIGHT  EOM
model_lstm DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_lstm DOT compile( PARERIGHT  EOM
model_lstm DOT fit( PARERIGHT  EOM
return time_callback DOT times EOM
def time_qrnn( PARERIGHT : EOM
model_qrnn  EQUAL  Sequential( PARERIGHT  EOM
model_qrnn DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model_qrnn DOT add(QRNN( PARERIGHT  PARERIGHT  EOM
model_qrnn DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_qrnn DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_qrnn DOT compile( PARERIGHT  EOM
model_qrnn DOT fit( PARERIGHT  EOM
return time_callback DOT times EOM
max_features  EQUAL  20000 EOM
maxlen  EQUAL  256 EOM
batch_size  EQUAL  32 EOM
epochs  EQUAL  1 EOM
matrice_results  EQUAL  [] EOM
X_train COMMA  y_train COMMA  X_test COMMA  y_test  EQUAL  regenerate_dataset( PARERIGHT  EOM
batch_matrice  EQUAL  [] EOM
t1  EQUAL  time_qrnn(batch_size EQUAL  COMMA  train_set EQUAL ( PARERIGHT  COMMA  test_set EQUAL ( PARERIGHT  PARERIGHT  EOM
t2  EQUAL  time_lstm(batch_size EQUAL  COMMA  train_set EQUAL ( PARERIGHT  COMMA  test_set EQUAL ( PARERIGHT  PARERIGHT  EOM
batch_matrice DOT append( PARERIGHT  EOM
matrice_results DOT append( PARERIGHT  EOM
with open( PARERIGHT  as file: EOM
pickle DOT dump( PARERIGHT from keras DOT layers import LSTM COMMA  Dense COMMA  Input COMMA  InputLayer COMMA  Permute COMMA  BatchNormalization COMMA  \ EOM
GRU COMMA  Conv1D COMMA  MaxPooling1D EOM
from keras DOT models import Sequential COMMA  save_model EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
from sklearn DOT model_selection import GridSearchCV EOM
from src DOT const import * EOM
from src DOT utils import * EOM
INPUT_SHAPE  EQUAL  ( PARERIGHT  EOM
LSTM_SIZE  EQUAL  50 EOM
def get_model( PARERIGHT : EOM
lstm_model  EQUAL  Sequential( PARERIGHT  EOM
lstm_model DOT add(InputLayer( PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(Permute(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
lstm_model DOT summary( PARERIGHT  EOM
lstm_model DOT compile( PARERIGHT  EOM
return lstm_model EOM
if __name__  EQUAL  EQUAL  : EOM
csv_dict  EQUAL  read_csv_sequence( PARERIGHT  EOM
players_dict COMMA  val_players_dict  EQUAL  split_training_set( PARERIGHT  EOM
batch_input COMMA  batch_input_other_info COMMA  batch_output COMMA  player_id_to_name_dict \ EOM
 EQUAL  csv_sequence_set_to_keras_batch( PARERIGHT  EOM
val_batch_input COMMA  val_batch_input_other_info COMMA  val_batch_output COMMA  _ \ EOM
 EQUAL  csv_sequence_set_to_keras_batch( PARERIGHT  EOM
model  EQUAL  get_model( PARERIGHT  EOM
model DOT fit(x EQUAL  COMMA y EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  COMMA epochs EQUAL  COMMA batch_size EQUAL  COMMA verbose EQUAL  PARERIGHT  EOM
save_model( PARERIGHT  EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT layers import Flatten EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
class Data_Obj( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT in_data  EQUAL  input_data EOM
self DOT out_data  EQUAL  output_data EOM
def data_func( PARERIGHT : EOM
keras_X  EQUAL  [] EOM
keras_Y  EQUAL  [] EOM
temp  EQUAL  [] EOM
filter_size  EQUAL  3 EOM
for data in raw_data: EOM
temp DOT append(np DOT asmatrix( PARERIGHT  DOT transpose( PARERIGHT  PARERIGHT  EOM
if data DOT out_data ! EQUAL  None: EOM
keras_Y DOT append(np DOT asarray( PARERIGHT  PARERIGHT  EOM
for temp_X in temp: EOM
real_X  EQUAL  [] EOM
for i in range( PARERIGHT : EOM
real_X DOT append( PARERIGHT  EOM
keras_X DOT append(np DOT asarray( PARERIGHT  PARERIGHT  EOM
keras_X  EQUAL  np DOT asarray( PARERIGHT  EOM
keras_Y  EQUAL  np DOT asarray( PARERIGHT  EOM
return ( PARERIGHT  EOM
filter_size  EQUAL  3 EOM
cnn  EQUAL  Sequential( PARERIGHT  EOM
cnn DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  activation EQUAL  COMMA  padding EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
cnn DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
cnn DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(TimeDistributed(cnn COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
import keras EOM
from keras DOT layers import Convolution2D COMMA  Activation COMMA  MaxPooling2D COMMA  Flatten COMMA  Dense COMMA  LSTM COMMA  Dropout EOM
from keras DOT models import Sequential EOM
from keras DOT regularizers import l2 EOM
def create_compile_cnn_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
number_of_time_stamps  EQUAL  20 EOM
number_of_out_channels  EQUAL  10 EOM
number_of_in_channels  EQUAL  55 EOM
model DOT add(Convolution2D(nb_filter EQUAL  COMMA nb_col EQUAL  COMMA nb_row EQUAL  COMMA put_shape EQUAL ( PARERIGHT  COMMA border_mode EQUAL  COMMA init EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(olution2D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def create_compile_lstm_model( PARERIGHT : EOM
model_lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense(2 COMMA  W_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_lstm DOT compile( PARERIGHT  EOM
return model_lstm EOM
def create_compile_lstm_model_letter( PARERIGHT : EOM
model_lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense(5 COMMA  W_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_lstm DOT compile( PARERIGHT  EOM
return model_lstm EOM
def create_compile_dense_model( PARERIGHT : EOM
model_lstm DOT add(keras DOT layers DOT core DOT Flatten(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense(input_dim EQUAL  COMMA  output_dim EQUAL  COMMA  W_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_lstm DOT compile( PARERIGHT  EOM
return model_lstm EOM
def create_small_compile_dense_model( PARERIGHT : EOM
model_lstm DOT add(keras DOT layers DOT core DOT Flatten(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense(output_dim EQUAL  COMMA  W_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_lstm DOT compile( PARERIGHT  EOM
return model_lstm EOM
def create_small_compile_dense_model_color( PARERIGHT : EOM
model_lstm DOT add(keras DOT layers DOT core DOT Flatten(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense(output_dim EQUAL  COMMA  W_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_lstm DOT compile( PARERIGHT  EOM
return model_lstm EOM
def create_small_compile_dense_model_color_less_params( PARERIGHT : EOM
model_lstm DOT add(keras DOT layers DOT core DOT Flatten(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense(output_dim EQUAL  COMMA  W_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_lstm DOT compile( PARERIGHT  EOM
return model_lstmimport pytest EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras import Input COMMA  Model EOM
from keras DOT layers import Conv2D COMMA  Bidirectional EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(2 COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
inner_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_lstm  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  name EQUAL  PARERIGHT ( PARERIGHT  EOM
encoder  EQUAL  Model( PARERIGHT  EOM
outer_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_encoder  EQUAL  TimeDistributed( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
preds  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
def test_plot_sequential_embedding( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT __author__  EQUAL __author2__  EQUAL  EOM
from keras DOT models import Model COMMA  Sequential COMMA  load_model EOM
from keras DOT layers import Input COMMA  Dense EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT wrappers import TimeDistributed COMMA  Bidirectional EOM
from keras DOT layers DOT core import RepeatVector EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers DOT noise import GaussianNoise EOM
from keras DOT layers DOT convolutional import Convolution1D EOM
from keras DOT layers DOT pooling import MaxPooling1D EOM
from scipy DOT spatial DOT distance import cosine EOM
import numpy as np EOM
np DOT random DOT seed( PARERIGHT  EOM
class Sequence2Sequence: EOM
def decode_one_hot( PARERIGHT : EOM
predicted  EQUAL  keras_model DOT predict(np DOT array( PARERIGHT  PARERIGHT [] EOM
res  EQUAL  [] EOM
for i in range(len( PARERIGHT  PARERIGHT : EOM
argmax  EQUAL  np DOT argmax( PARERIGHT  EOM
if argmax EQUAL  EQUAL max_word_index-1: EOM
res DOT append( PARERIGHT  EOM
break EOM
elif argmax EQUAL  EQUAL max_word_index: pass EOM
else: EOM
if reverse_index[]! EQUAL  and reverse_index[]! EQUAL : EOM
res DOT append( PARERIGHT  EOM
else: EOM
res DOT append( PARERIGHT  EOM
break EOM
return  DOT join( PARERIGHT  EOM
def decode_embedding( PARERIGHT : EOM
predicted  EQUAL  keras_model DOT predict(np DOT array( PARERIGHT  PARERIGHT [] EOM
res  EQUAL  [] EOM
pad  EQUAL  np DOT zeros( PARERIGHT -0 DOT 037 EOM
for i in range(len( PARERIGHT  PARERIGHT : EOM
aux  EQUAL  w2v_model DOT most_similar( PARERIGHT [] EOM
if cosine( PARERIGHT <aux[]: continue EOM
else: res DOT append( PARERIGHT  EOM
if res[] EQUAL  EQUAL  or res[] EQUAL  EQUAL : break EOM
return  DOT join( PARERIGHT  EOM
def get_seq2seq_model_one_hot( PARERIGHT : EOM
seq2seq_model  EQUAL  Sequential( PARERIGHT  EOM
seq2seq_model DOT add(RepeatVector( PARERIGHT  PARERIGHT  EOM
seq2seq_model DOT add(GaussianNoise( PARERIGHT  PARERIGHT  EOM
seq2seq_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
seq2seq_model DOT compile( PARERIGHT  EOM
return seq2seq_model EOM
def get_seq2seq_model_embedding( PARERIGHT : EOM
seq2seq_model  EQUAL  Sequential( PARERIGHT  EOM
seq2seq_model DOT add(BatchNormalization(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
seq2seq_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
seq2seq_model DOT add(RepeatVector( PARERIGHT  PARERIGHT  EOM
seq2seq_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
seq2seq_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
seq2seq_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
seq2seq_model DOT compile( PARERIGHT  EOM
return seq2seq_model EOM
def get_attention_seq2seq_model( PARERIGHT : EOM
input  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
activations  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
mask  EQUAL  TimeDistributed(Dense( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
flat  EQUAL  Flatten( PARERIGHT ( PARERIGHT  EOM
activations  EQUAL  merge( PARERIGHT  EOM
activations  EQUAL  AveragePooling1D( PARERIGHT ( PARERIGHT  EOM
activations  EQUAL  Flatten( PARERIGHT ( PARERIGHT  EOM
seq2seq_model DOT add(RepeatVector( PARERIGHT  PARERIGHT  EOM
seq2seq_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
seq2seq_model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
seq2seq_model DOT compile( PARERIGHT  EOM
return seq2seq_model EOM
import keras EOM
from keras DOT datasets import mnist EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dropout COMMA  Flatten COMMA  Dense COMMA  LSTM EOM
from keras DOT layers import Conv2D COMMA  MaxPooling2D EOM
from keras import backend as K EOM
from keras DOT utils import np_utils EOM
import scipy DOT io EOM
import numpy as np EOM
num_classes  EQUAL  2 EOM
def build_pred_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
if loss_weights is not None: EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA metrics EQUAL [] COMMA loss_weights EQUAL  PARERIGHT  EOM
else: EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA metrics EQUAL [] PARERIGHT  EOM
return model EOM
def build_lstm_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA metrics EQUAL [] PARERIGHT  EOM
return model EOM
def train_pred_model( PARERIGHT : EOM
model DOT fit(x_train COMMA  y_train COMMA batch_size EQUAL  COMMA epochs EQUAL  COMMA verbose EQUAL  COMMA validation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
return model EOM
def evaluate_model( PARERIGHT : EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten COMMA  Merge COMMA  Reshape EOM
from keras DOT layers DOT convolutional import Convolution2D COMMA  MaxPooling2D EOM
from keras DOT optimizers import RMSprop COMMA  SGD EOM
from keras DOT layers DOT recurrent import LSTM EOM
def create_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Convolution2D(64 COMMA  15 COMMA  15 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
sgd  EQUAL  SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def create_CNN_LSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Convolution2D(64 COMMA  15 COMMA  15 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  subsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model_lstm  EQUAL  Sequential( PARERIGHT  EOM
model_lstm DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation( PARERIGHT  PARERIGHT  EOM
rmsprop  EQUAL  RMSprop( PARERIGHT  EOM
model_lstm DOT compile( PARERIGHT  EOM
return model_lstmfrom __future__ import print_function EOM
from __future__ import division EOM
from functools import reduce EOM
import re EOM
import tarfile EOM
import math EOM
import numpy as np EOM
from keras DOT utils DOT data_utils import get_file EOM
from keras DOT layers import Merge COMMA  K EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  RepeatVector COMMA  Activation COMMA  Flatten EOM
from keras DOT layers import recurrent COMMA Lambda COMMA merge EOM
from keras DOT models import Sequential EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from keras DOT layers DOT convolutional import Convolution1D COMMA  MaxPooling1D COMMA  AveragePooling1D EOM
from sklearn DOT metrics import average_precision_score EOM
from keras DOT layers import Bidirectional EOM
from keras DOT layers DOT recurrent import LSTM COMMA  GRU EOM
from keras DOT preprocessing import sequence EOM
from attention import LSTM EOM
from attention_lstm import AttentionLSTM EOM
RNN EQUAL recurrent DOT LSTM EOM
EMBED_SIZE  EQUAL  16 EOM
HIDDEN_SIZE EQUAL  16 EOM
MAX_LEN EQUAL  100 EOM
BATCH_SIZE  EQUAL  16 EOM
EPOCHS  EQUAL  10 EOM
nb_filter  EQUAL  10 EOM
filter_length  EQUAL  5 EOM
def readResult( PARERIGHT : EOM
index EQUAL 0 EOM
p EQUAL n EQUAL tp EQUAL tn EQUAL fp EQUAL fn EQUAL 0 EOM
for prob in results: EOM
if prob>0 DOT 5: EOM
predLabel EQUAL 1 EOM
else: EOM
predLabel EQUAL 0 EOM
if y_test[]>0: EOM
p+ EQUAL 1 EOM
if predLabel>0: EOM
tp+ EQUAL 1 EOM
else: EOM
fn+ EQUAL 1 EOM
else: EOM
n+ EQUAL 1 EOM
if predLabel EQUAL  EQUAL 0: EOM
tn+ EQUAL 1 EOM
else: EOM
fp+ EQUAL 1 EOM
index+ EQUAL 1 EOM
acc EQUAL ( PARERIGHT /( PARERIGHT  EOM
precisionP EQUAL tp/( PARERIGHT  EOM
precisionN EQUAL tn/( PARERIGHT  EOM
recallP EQUAL tp/( PARERIGHT  EOM
recallN EQUAL tn/( PARERIGHT  EOM
gmean EQUAL math DOT sqrt( PARERIGHT  EOM
f_p EQUAL 2*precisionP*recallP/( PARERIGHT  EOM
f_n EQUAL 2*precisionN*recallN/( PARERIGHT  EOM
output EQUAL open( PARERIGHT  EOM
output DOT write( DOT join( PARERIGHT  PARERIGHT  EOM
def cnn_prediction( PARERIGHT : EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(X_train COMMA  y_train COMMA  batch_size EQUAL  COMMA b_epoch EQUAL  COMMA  show_accuracy EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
X_pred EQUAL model DOT predict( PARERIGHT  EOM
results EQUAL [] for result in X_pred] EOM
return readResult( PARERIGHT  EOM
def lstm_prediction( PARERIGHT : EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(RNN( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(X_train COMMA  y_train COMMA  batch_size EQUAL  COMMA b_epoch EQUAL  COMMA  show_accuracy EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
X_pred EQUAL model DOT predict( PARERIGHT  EOM
results EQUAL [] for result in X_pred] EOM
return readResult( PARERIGHT  EOM
def buildModel_max( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
return model EOM
def buildLSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(RNN( PARERIGHT  PARERIGHT  EOM
return model EOM
def cnn_combined( PARERIGHT : EOM
X_new_train_list EQUAL [] EOM
X_new_test_list EQUAL [] EOM
for i in range( PARERIGHT : EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_new_train_list DOT append( PARERIGHT  EOM
X_new_test_list DOT append( PARERIGHT  EOM
firstLayers EQUAL [] EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
X_pred EQUAL model DOT predict( PARERIGHT  EOM
results EQUAL [] for result in X_pred] EOM
return readResult( PARERIGHT  EOM
def cnn_combined2( PARERIGHT : EOM
X_new_train_list EQUAL [] EOM
X_new_test_list EQUAL [] EOM
for i in range( PARERIGHT : EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_new_train_list DOT append( PARERIGHT  EOM
X_new_test_list DOT append( PARERIGHT  EOM
preLayer EQUAL None EOM
for i in range( PARERIGHT : EOM
e_layer EQUAL Sequential( PARERIGHT  EOM
e_layer DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
e_layer DOT add(RNN( PARERIGHT  PARERIGHT  EOM
if preLayer! EQUAL None: EOM
m_layer EQUAL Sequential( PARERIGHT  EOM
m_layer DOT add(Merge( PARERIGHT  PARERIGHT  EOM
m_layer DOT add(RepeatVector( PARERIGHT  PARERIGHT  EOM
m_layer DOT add(RNN( PARERIGHT  PARERIGHT  EOM
e_layer EQUAL m_layer EOM
preLayer EQUAL e_layer EOM
model  EQUAL  e_layer EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
X_pred EQUAL model DOT predict( PARERIGHT  EOM
results EQUAL [] for result in X_pred] EOM
return readResult( PARERIGHT  EOM
def cnn_combined3( PARERIGHT : EOM
X_new_train_list EQUAL [] EOM
X_new_test_list EQUAL [] EOM
for i in range( PARERIGHT : EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_new_train_list DOT append( PARERIGHT  EOM
X_new_test_list DOT append( PARERIGHT  EOM
lstm_en EQUAL Sequential( PARERIGHT  EOM
lstm_en DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
lstm_en DOT add(RNN( PARERIGHT  PARERIGHT  EOM
lstm_en DOT add(RepeatVector( PARERIGHT  PARERIGHT  EOM
lstm_cn EQUAL Sequential( PARERIGHT  EOM
lstm_cn DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
lstm_cn DOT add(RNN( PARERIGHT  PARERIGHT  EOM
lstm_cn DOT add(RepeatVector( PARERIGHT  PARERIGHT  EOM
lstm_all EQUAL Sequential( PARERIGHT  EOM
lstm_all DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
lstm_all DOT add(RNN( PARERIGHT  PARERIGHT  EOM
lstm_all DOT add(RepeatVector( PARERIGHT  PARERIGHT  EOM
lstm_merge EQUAL Sequential( PARERIGHT  EOM
lstm_merge DOT add(Merge( PARERIGHT  PARERIGHT  EOM
lstm_merge DOT add(RNN( PARERIGHT  PARERIGHT  EOM
model EQUAL lstm_merge EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
X_pred EQUAL model DOT predict( PARERIGHT  EOM
results EQUAL [] for result in X_pred] EOM
return readResult( PARERIGHT  EOM
def lstm_attention( PARERIGHT : EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
data  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
embedding EQUAL Embedding( PARERIGHT  EOM
data_embedding EQUAL embedding( PARERIGHT  EOM
dropout  EQUAL  Dropout( PARERIGHT  EOM
data_dropout  EQUAL  dropout( PARERIGHT  EOM
rnn  EQUAL  RNN( PARERIGHT  EOM
data_rnn  EQUAL  RNN( PARERIGHT  EOM
maxpool  EQUAL  Lambda(lambda x: K DOT max( PARERIGHT  COMMA  output_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
data_pool  EQUAL  maxpool( PARERIGHT  EOM
rnn EQUAL AttentionLSTM( PARERIGHT import os EOM
global_model_version  EQUAL  37 EOM
global_batch_size  EQUAL  32 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_2  EQUAL  Sequential( PARERIGHT  EOM
branch_2 DOT add( PARERIGHT  EOM
branch_2 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_6  EQUAL  Sequential( PARERIGHT  EOM
branch_6 DOT add( PARERIGHT  EOM
branch_6 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT optimizers import SGD  COMMA  Adagrad EOM
def keras_model( PARERIGHT : EOM
LSTM_layers  EQUAL  1 EOM
LSTM_units   EQUAL  300 EOM
DNN_layers   EQUAL  3 EOM
DNN_units    EQUAL  32 EOM
question_model  EQUAL  Sequential( PARERIGHT  EOM
layer_q1  EQUAL  LSTM ( LSTM_units  COMMA  input_shape  EQUAL ( PARERIGHT   COMMA  return_sequences EQUAL  PARERIGHT  EOM
question_model DOT add( PARERIGHT  EOM
answer_1_model  EQUAL  Sequential( PARERIGHT  EOM
layer_a1  EQUAL  LSTM ( LSTM_units  COMMA  input_shape  EQUAL ( PARERIGHT   COMMA  return_sequences EQUAL  PARERIGHT  EOM
answer_1_model DOT add( PARERIGHT  EOM
answer_2_model  EQUAL  Sequential( PARERIGHT  EOM
layer_a2  EQUAL  beShared_LSTM(layer_a1  COMMA  input_shape  EQUAL ( PARERIGHT  PARERIGHT  EOM
answer_2_model DOT add( PARERIGHT  EOM
answer_3_model  EQUAL  Sequential( PARERIGHT  EOM
layer_a3  EQUAL  beShared_LSTM(layer_a1  COMMA  input_shape  EQUAL ( PARERIGHT  PARERIGHT  EOM
answer_3_model DOT add( PARERIGHT  EOM
answer_4_model  EQUAL  Sequential( PARERIGHT  EOM
layer_a4  EQUAL  beShared_LSTM(layer_a1  COMMA  input_shape  EQUAL ( PARERIGHT  PARERIGHT  EOM
answer_4_model DOT add( PARERIGHT  EOM
answer_5_model  EQUAL  Sequential( PARERIGHT  EOM
layer_a5  EQUAL  beShared_LSTM(layer_a1  COMMA  input_shape  EQUAL ( PARERIGHT  PARERIGHT  EOM
answer_5_model DOT add( PARERIGHT  EOM
image_model  EQUAL  Sequential( PARERIGHT  EOM
image_model DOT add(Reshape(input_shape  EQUAL ( PARERIGHT   COMMA  dims  EQUAL ( PARERIGHT   PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
layer_DNN_1  EQUAL  Dense( PARERIGHT  EOM
layer_DNN_1_act  EQUAL  Activation( PARERIGHT  EOM
layer_DNN_1_dro  EQUAL  Dropout( PARERIGHT  EOM
layer_DNN_2  EQUAL  Dense( PARERIGHT  EOM
layer_DNN_2_act  EQUAL  Activation( PARERIGHT  EOM
layer_DNN_2_dro  EQUAL  Dropout( PARERIGHT  EOM
layer_DNN_3  EQUAL  Dense( PARERIGHT  EOM
layer_DNN_3_act  EQUAL  Activation( PARERIGHT  EOM
layer_DNN_3_dro  EQUAL  Dropout( PARERIGHT  EOM
layer_out  EQUAL  Dense( PARERIGHT  EOM
layer_softmax  EQUAL  Activation( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Activation COMMA  Dropout COMMA  Embedding COMMA  LSTM EOM
def createModel( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if use_dropout: model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if use_dropout: model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return( PARERIGHT import argparse EOM
def softmax_demo( PARERIGHT : EOM
import keras EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT optimizers import SGD EOM
import numpy as np EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  keras DOT utils DOT to_categorical(np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  COMMA  num_classes EQUAL  PARERIGHT  EOM
x_test  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_test  EQUAL  keras DOT utils DOT to_categorical(np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  COMMA  num_classes EQUAL  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
sgd  EQUAL  SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
def mlp_demo( PARERIGHT : EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  np DOT random DOT randint(2 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  EOM
x_test  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_test  EQUAL  np DOT random DOT randint(2 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
def vgg_demo( PARERIGHT : EOM
import numpy as np EOM
import keras EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers import Conv2D COMMA  MaxPooling2D EOM
from keras DOT optimizers import SGD EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  keras DOT utils DOT to_categorical(np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  COMMA  num_classes EQUAL  PARERIGHT  EOM
x_test  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_test  EQUAL  keras DOT utils DOT to_categorical(np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  COMMA  num_classes EQUAL  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(32 COMMA  ( PARERIGHT  COMMA  activation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(32 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
sgd  EQUAL  SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
def stack_lstm_demo( PARERIGHT : EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
data_dim  EQUAL  16 EOM
timesteps  EQUAL  8 EOM
num_classes  EQUAL  10 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(32 COMMA  return_sequences EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
x_val  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_val  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT fit(x_train COMMA  y_train COMMA atch_size EQUAL  COMMA  epochs EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
def stateful_lstm_demo( PARERIGHT : EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Dense EOM
import numpy as np EOM
data_dim  EQUAL  16 EOM
timesteps  EQUAL  8 EOM
num_classes  EQUAL  10 EOM
batch_size  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(32 COMMA  return_sequences EQUAL  COMMA  stateful EQUAL  COMMA tch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
x_val  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_val  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT fit(x_train COMMA  y_train COMMA tch_size EQUAL  COMMA  epochs EQUAL  COMMA  shuffle EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
args  EQUAL  parser DOT parse_args( PARERIGHT  EOM
if args DOT model  EQUAL  EQUAL  : EOM
softmax_demo( PARERIGHT  EOM
elif args DOT model  EQUAL  EQUAL  : EOM
mlp_demo( PARERIGHT  EOM
elif args DOT model  EQUAL  EQUAL  : EOM
vgg_demo( PARERIGHT  EOM
elif args DOT model  EQUAL  EQUAL  : EOM
stack_lstm_demo( PARERIGHT  EOM
elif args DOT model  EQUAL  EQUAL  : EOM
stateful_lstm_demo( PARERIGHT from sklearn DOT feature_extraction DOT text import CountVectorizer EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from sklearn DOT model_selection import train_test_split EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
from keras DOT layers import Dense COMMA  Embedding COMMA  LSTM COMMA Dropout COMMA  BatchNormalization EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from keras DOT models import model_from_json EOM
from keras DOT models import Sequential EOM
from keras DOT optimizers import Adam EOM
import tensorflow as tf EOM
import numpy as np EOM
import pandas as pd EOM
import random EOM
class modeler: EOM
def __init__( PARERIGHT : EOM
self DOT dataset_main  EQUAL  self DOT load_dataset( PARERIGHT  EOM
self DOT max_features  EQUAL 5000 EOM
def load_dataset( PARERIGHT : EOM
data  EQUAL  pd DOT read_csv( PARERIGHT  EOM
data  EQUAL  data[]] EOM
return data EOM
def train_data( PARERIGHT : EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts( PARERIGHT  EOM
X  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
X  EQUAL  pad_sequences( PARERIGHT  EOM
Y  EQUAL  pd DOT get_dummies( PARERIGHT  DOT values EOM
X_train COMMA  X_test COMMA  Y_train COMMA  Y_test  EQUAL  train_test_split( PARERIGHT  EOM
return X_train COMMA  X_test COMMA  Y_train COMMA  Y_test COMMA X COMMA Y EOM
def build_model( PARERIGHT : EOM
embed_dim  EQUAL  128 EOM
lstm_out  EQUAL  192 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss  EQUAL  COMMA  optimizer EQUAL ( PARERIGHT  COMMA metrics  EQUAL [] PARERIGHT  EOM
return model EOM
def start_train( PARERIGHT : EOM
batch_size  EQUAL  32 EOM
X_train COMMA  X_test COMMA  Y_train COMMA  Y_test COMMA  X COMMA  Y  EQUAL  self DOT train_data( PARERIGHT  EOM
model  EQUAL  self DOT build_model( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
self DOT save( PARERIGHT  EOM
def save( PARERIGHT : EOM
model_json  EQUAL  model DOT to_json( PARERIGHT  EOM
with open( PARERIGHT  as json_file: EOM
json_file DOT write( PARERIGHT  EOM
model DOT save_weights( PARERIGHT  EOM
model  EQUAL  modeler( PARERIGHT  EOM
model DOT start_train( PARERIGHT from keras DOT layers import Embedding COMMA  LSTM COMMA  TimeDistributed COMMA  Dense COMMA  Dropout EOM
from keras DOT layers DOT wrappers import Bidirectional EOM
from keras DOT optimizers import Adam EOM
import constant EOM
class Model( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT  EOM
model DOT add(Bidirectional( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT  EOM
model DOT add(Bidirectional( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT  EOM
model DOT add(Bidirectional( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT model  EQUAL  modelfrom keras DOT models import Sequential EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
import keras DOT preprocessing DOT sequence as S EOM
from keras DOT utils import to_categorical EOM
from keras DOT layers import Embedding COMMA  Bidirectional COMMA  LSTM COMMA  Dropout COMMA  Dense EOM
import jieba EOM
import json EOM
import numpy as np EOM
vocab_size  EQUAL  350000 EOM
sentence_max_len  EQUAL  100 EOM
class SentimentLSTM: EOM
def __init__( PARERIGHT : EOM
self DOT tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
self DOT stop_words  EQUAL  [] EOM
self DOT model  EQUAL  None EOM
def load_stop_word( PARERIGHT : EOM
with open( PARERIGHT  as f: EOM
for line in f: EOM
content  EQUAL  line DOT strip( PARERIGHT  EOM
self DOT stop_words DOT append(content DOT decode( PARERIGHT  PARERIGHT  EOM
def jieba_cut( PARERIGHT : EOM
lcut  EQUAL  jieba DOT lcut( PARERIGHT  EOM
cut  EQUAL  [] EOM
cut  EQUAL   DOT join( PARERIGHT  EOM
return cut EOM
def load_cuted_corpus( PARERIGHT : EOM
f  EQUAL  open( PARERIGHT  EOM
lines  EQUAL  f DOT readlines( PARERIGHT  EOM
texts  EQUAL  [] EOM
labels  EQUAL  [] EOM
for line in lines: EOM
fields  EQUAL  line DOT split( PARERIGHT  EOM
rate  EQUAL  int( PARERIGHT  EOM
if rate EQUAL  EQUAL 0 or rate EQUAL  EQUAL 3: EOM
continue EOM
elif rate < 3: EOM
rate  EQUAL  0 EOM
else: EOM
rate  EQUAL  1 EOM
cont  EQUAL  fields[] EOM
cont  EQUAL   DOT join( PARERIGHT  EOM
texts DOT append( PARERIGHT  EOM
labels DOT append( PARERIGHT  EOM
self DOT tokenizer DOT fit_on_texts( PARERIGHT  EOM
f DOT close( PARERIGHT  EOM
return texts COMMA labels EOM
def load_data( PARERIGHT : EOM
x COMMA y  EQUAL  self DOT load_cuted_corpus( PARERIGHT  EOM
x  EQUAL  self DOT tokenizer DOT texts_to_sequences( PARERIGHT  EOM
x  EQUAL  S DOT pad_sequences( PARERIGHT  EOM
y  EQUAL  to_categorical( PARERIGHT  EOM
return (( PARERIGHT  COMMA  ( PARERIGHT  PARERIGHT  EOM
def train( PARERIGHT : EOM
self DOT model  EQUAL  SentimentLSTM DOT build_model( PARERIGHT  EOM
self DOT model DOT fit( PARERIGHT  EOM
self DOT model DOT save( PARERIGHT  EOM
score  EQUAL  self DOT model DOT evaluate( PARERIGHT  EOM
def load_trained_model( PARERIGHT : EOM
model  EQUAL  SentimentLSTM DOT build_model( PARERIGHT  EOM
model DOT load_weights( PARERIGHT  EOM
return model EOM
def predict_text( PARERIGHT : EOM
if self DOT model  EQUAL  EQUAL  None: EOM
self DOT model  EQUAL  self DOT load_trained_model( PARERIGHT  EOM
self DOT load_stop_word( PARERIGHT  EOM
self DOT load_cuted_corpus( PARERIGHT  EOM
vect  EQUAL  self DOT jieba_cut( PARERIGHT  EOM
vect  EQUAL  vect DOT encode( PARERIGHT  EOM
vect  EQUAL  self DOT tokenizer DOT texts_to_sequences( PARERIGHT  EOM
return self DOT model DOT predict_classes(S DOT pad_sequences(np DOT array( PARERIGHT  COMMA 100 PARERIGHT  PARERIGHT  EOM
def build_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def main( PARERIGHT : EOM
lstm  EQUAL  SentimentLSTM( PARERIGHT  EOM
lstm DOT train( PARERIGHT  EOM
while True: EOM
input  EQUAL  raw_input( PARERIGHT  EOM
if input  EQUAL  EQUAL  : EOM
break EOM
if __name__ EQUAL  EQUAL : EOM
main( PARERIGHT from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA Flatten COMMA Concatenate COMMA Input EOM
from keras DOT layers DOT recurrent import LSTM COMMA  GRU EOM
from keras DOT layers DOT convolutional import Conv2D EOM
from keras DOT layers DOT pooling import MaxPooling2D EOM
from keras DOT models import Sequential COMMA Model EOM
from keras DOT utils DOT vis_utils import plot_model EOM
def get_lstm( PARERIGHT : EOM
model DOT add(LSTM(units[] COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def get_gru( PARERIGHT : EOM
model DOT add(GRU(units[] COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def _get_sae( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def get_saes( PARERIGHT : EOM
sae2  EQUAL  _get_sae( PARERIGHT  EOM
sae3  EQUAL  _get_sae( PARERIGHT  EOM
saes  EQUAL  Sequential( PARERIGHT  EOM
saes DOT add(Dense( PARERIGHT  PARERIGHT  EOM
saes DOT add(Activation( PARERIGHT  PARERIGHT  EOM
saes DOT add(Dense( PARERIGHT  PARERIGHT  EOM
saes DOT add(Activation( PARERIGHT  PARERIGHT  EOM
saes DOT add(Dense( PARERIGHT  PARERIGHT  EOM
saes DOT add(Activation( PARERIGHT  PARERIGHT  EOM
saes DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
saes DOT add(Dense( PARERIGHT  PARERIGHT  EOM
models  EQUAL  [] EOM
return models EOM
def get_cnn( PARERIGHT : EOM
model EQUAL Sequential( PARERIGHT  EOM
model DOT add(Conv2D(kernel_size EQUAL ( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  COMMA filters EQUAL [] COMMA padding EQUAL  COMMA activation EQUAL  COMMA data_format EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(kernel_size EQUAL ( PARERIGHT  COMMA filters EQUAL [] COMMA padding EQUAL  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(kernel_size EQUAL ( PARERIGHT  COMMA filters EQUAL [] COMMA padding EQUAL  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def merge_lstm( PARERIGHT : EOM
input_min EQUAL Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
lstm_min EQUAL LSTM( PARERIGHT ( PARERIGHT  EOM
lstm_min EQUAL LSTM( PARERIGHT ( PARERIGHT  EOM
lstm_min EQUAL Dropout( PARERIGHT ( PARERIGHT  EOM
lstm_min EQUAL Dense( PARERIGHT ( PARERIGHT  EOM
input_day EQUAL Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
lstm_day EQUAL LSTM( PARERIGHT ( PARERIGHT  EOM
lstm_day EQUAL LSTM( PARERIGHT ( PARERIGHT  EOM
lstm_day EQUAL Dropout( PARERIGHT ( PARERIGHT  EOM
lstm_day EQUAL Dense( PARERIGHT ( PARERIGHT  EOM
input_week EQUAL Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
lstm_week EQUAL LSTM( PARERIGHT ( PARERIGHT  EOM
lstm_week EQUAL LSTM( PARERIGHT ( PARERIGHT  EOM
lstm_week EQUAL Dropout( PARERIGHT ( PARERIGHT  EOM
lstm_week EQUAL Dense( PARERIGHT ( PARERIGHT  EOM
merge EQUAL Concatenate( PARERIGHT ( PARERIGHT  EOM
merge EQUAL Dense( PARERIGHT ( PARERIGHT  EOM
model EQUAL Model( PARERIGHT  EOM
return model EOM
from keras import backend as K EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Conv1D COMMA  MaxPooling1D COMMA  Dropout COMMA  CuDNNLSTM COMMA  SimpleRNN EOM
from keras DOT layers DOT embeddings import Embedding EOM
import numpy as np EOM
import pandas as pd EOM
import os EOM
os DOT environ[]  EQUAL  EOM
df  EQUAL  pd DOT read_csv( PARERIGHT  EOM
df  EQUAL  df DOT dropna( PARERIGHT  EOM
df  EQUAL  df[] EOM
df  EQUAL  df[] EOM
df DOT head( PARERIGHT  EOM
df DOT groupby( PARERIGHT  DOT count( PARERIGHT  EOM
labels  EQUAL  df[] DOT map(lambda x: 1 if int( PARERIGHT  > 3 else 0 PARERIGHT  EOM
K DOT set_session(K DOT tf DOT Session(config EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vocabulary_size  EQUAL  1000 EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts( PARERIGHT  EOM
sequences  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
data  EQUAL  pad_sequences( PARERIGHT  EOM
model_rnn  EQUAL  Sequential( PARERIGHT  EOM
model_rnn DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model_rnn DOT add(SimpleRNN( PARERIGHT  PARERIGHT  EOM
model_rnn DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_rnn DOT compile( PARERIGHT  EOM
model_rnn DOT fit(data COMMA  np DOT array( PARERIGHT  COMMA  validation_split EQUAL  COMMA  epochs EQUAL  PARERIGHT  EOM
model_lstm  EQUAL  Sequential( PARERIGHT  EOM
model_lstm DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_lstm DOT compile( PARERIGHT  EOM
model_lstm DOT fit(data COMMA  np DOT array( PARERIGHT  COMMA  validation_split EQUAL  COMMA  epochs EQUAL  PARERIGHT  EOM
def create_conv_model( PARERIGHT : EOM
model_conv  EQUAL  Sequential( PARERIGHT  EOM
model_conv DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model_conv DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_conv DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model_conv DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model_conv DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model_conv DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_conv DOT compile( PARERIGHT  EOM
return model_conv EOM
model_conv  EQUAL  create_conv_model( PARERIGHT  EOM
model_conv DOT fit(data COMMA  np DOT array( PARERIGHT  COMMA  validation_split EQUAL  COMMA  epochs  EQUAL  PARERIGHT from keras DOT layers import Dense COMMA  LSTM COMMA  Activation COMMA  BatchNormalization COMMA  Dropout COMMA  initializers COMMA  Input EOM
from keras DOT models import Sequential EOM
from keras DOT optimizers import SGD COMMA  RMSprop EOM
from keras DOT models import load_model EOM
from keras DOT initializers import Constant EOM
import keras DOT backend as K EOM
from keras DOT utils DOT generic_utils import get_custom_objects EOM
from keras DOT backend DOT tensorflow_backend import _to_tensor EOM
return K DOT relu( PARERIGHT  EOM
get_custom_objects( PARERIGHT  DOT update({: Activation( PARERIGHT } PARERIGHT  EOM
return -100 DOT  * K DOT mean(( PARERIGHT  * y_pred PARERIGHT  EOM
class WindPuller( PARERIGHT : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add(Dropout(rate EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
self DOT model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense(1 COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
opt  EQUAL  RMSprop( PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
def fit( PARERIGHT : EOM
self DOT model DOT fit( PARERIGHT  EOM
def save( PARERIGHT : EOM
self DOT model DOT save( PARERIGHT  EOM
def load_model( PARERIGHT : EOM
self DOT model  EQUAL  load_model( PARERIGHT  EOM
return self EOM
def evaluate( PARERIGHT : EOM
return self DOT model DOT evaluate( PARERIGHT  EOM
def predict( PARERIGHT : EOM
return self DOT model DOT predict( PARERIGHT  EOM
import numpy as np EOM
import pandas as pd EOM
from nltk DOT corpus import stopwords EOM
from nltk import word_tokenize COMMA  ngrams EOM
from keras DOT preprocessing import text EOM
from sklearn DOT model_selection import train_test_split EOM
train_df  EQUAL  pd DOT read_csv( PARERIGHT  DOT fillna( PARERIGHT  EOM
train_df DOT head( PARERIGHT  EOM
X  EQUAL  train_df[]] EOM
y  EQUAL  train_df[] EOM
X_train  EQUAL  X DOT copy( PARERIGHT  EOM
q1s  EQUAL  list(X_train[] DOT apply(lambda x: x DOT encode( PARERIGHT  PARERIGHT  PARERIGHT  EOM
q2s  EQUAL  list(X_train[] DOT apply(lambda x: x DOT encode( PARERIGHT  PARERIGHT  PARERIGHT  EOM
all_questions  EQUAL  q1s + q2s EOM
tok  EQUAL  text DOT Tokenizer( PARERIGHT  EOM
tok DOT fit_on_texts( PARERIGHT  EOM
q1s_tok  EQUAL  tok DOT texts_to_sequences( PARERIGHT  EOM
q2s_tok  EQUAL  tok DOT texts_to_sequences( PARERIGHT  EOM
maxlen  EQUAL  max([] PARERIGHT  EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Activation COMMA  Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT datasets import imdb EOM
from keras DOT optimizers import RMSprop EOM
from keras DOT engine DOT topology import Merge EOM
from keras import backend as K EOM
def log_loss( PARERIGHT : EOM
first_log  EQUAL  K DOT log(K DOT clip(y_pred COMMA  K DOT epsilon( PARERIGHT  COMMA  None PARERIGHT  PARERIGHT  EOM
second_log  EQUAL  K DOT log(K DOT clip(1 DOT -y_pred COMMA  K DOT epsilon( PARERIGHT  COMMA  None PARERIGHT  PARERIGHT  EOM
return K DOT mean(-y_true * first_log - ( PARERIGHT  * second_log PARERIGHT  EOM
yt  EQUAL  np DOT array( PARERIGHT  EOM
yp  EQUAL  np DOT array( PARERIGHT  EOM
q1s_tok  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
q2s_tok  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model1  EQUAL  Sequential( PARERIGHT  EOM
model1 DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model1 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model1 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model1 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model2  EQUAL  Sequential( PARERIGHT  EOM
model2 DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
merged_model  EQUAL  Sequential( PARERIGHT  EOM
merged_model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
merged_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
merged_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
merged_model DOT compile( PARERIGHT  EOM
merged_model DOT fit( PARERIGHT  EOM
merged_model DOT save( PARERIGHT from __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
from __future__ import unicode_literals EOM
import logging EOM
from rasa_core DOT policies DOT keras_policy import KerasPolicy EOM
logger  EQUAL  logging DOT getLogger( PARERIGHT  EOM
class RestaurantPolicy( PARERIGHT : EOM
def model_architecture( PARERIGHT : EOM
from keras DOT layers import LSTM COMMA  Activation COMMA  Masking COMMA  Dense EOM
from keras DOT models import Sequential EOM
from keras DOT models import Sequential EOM
from keras DOT layers import \ EOM
Masking COMMA  LSTM COMMA  Dense COMMA  TimeDistributed COMMA  Activation EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if len( PARERIGHT   EQUAL             model DOT add(Masking( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             model DOT add(Masking(mask_value EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
raise ValueError(th of output_shape  EQUAL (len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
logger DOT debug(model DOT summary( PARERIGHT  PARERIGHT  EOM
return model EOM
from rasa_core DOT policies DOT fallback import FallbackPolicy EOM
fallback  EQUAL  FallbackPolicy(fallback_action_name EQUAL  COMMA core_threshold EQUAL  COMMA nlu_threshold EQUAL import common EOM
import matplotlib DOT pyplot as plt EOM
import numpy as np EOM
import pandas as pd EOM
from keras import optimizers EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import BatchNormalization EOM
from keras DOT layers DOT core import Dense EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
from scipy DOT ndimage DOT interpolation import shift EOM
from sklearn import preprocessing EOM
def getModel( PARERIGHT : EOM
model  EQUAL  Sequential ( PARERIGHT  EOM
model DOT add(LSTM(1000  COMMA  activation  EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense ( PARERIGHT  PARERIGHT  EOM
rmsprop  EQUAL  optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile ( PARERIGHT  EOM
return model EOM
if __name__  EQUAL  EQUAL  : EOM
file  EQUAL  common DOT readData( PARERIGHT  EOM
scaler  EQUAL  preprocessing DOT MinMaxScaler(feature_range EQUAL ( PARERIGHT  PARERIGHT  EOM
data  EQUAL  common DOT preprocessData( PARERIGHT  EOM
train_data COMMA  test_data  EQUAL  common DOT splitData( PARERIGHT  EOM
common DOT plotTestAndTrain( PARERIGHT  EOM
x_train COMMA  y_train COMMA  x_test COMMA  y_test  EQUAL  common DOT prepareForTraining( PARERIGHT  EOM
model  EQUAL  getModel( PARERIGHT  EOM
common DOT train( PARERIGHT  EOM
common DOT test( PARERIGHT  EOM
common DOT predict( PARERIGHT  EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
import keras EOM
def window_transform_series( PARERIGHT : EOM
X  EQUAL  [] EOM
y  EQUAL  [] EOM
for i in range(len( PARERIGHT -window_size PARERIGHT : EOM
X DOT append( PARERIGHT  EOM
y DOT append( PARERIGHT  EOM
X  EQUAL  np DOT asarray( PARERIGHT  EOM
X DOT shape  EQUAL  (np DOT shape( PARERIGHT [] PARERIGHT  EOM
y  EQUAL  np DOT asarray( PARERIGHT  EOM
y DOT shape  EQUAL  (len( PARERIGHT  COMMA 1 PARERIGHT  EOM
return X COMMA y EOM
def build_part1_RNN( PARERIGHT : EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
import keras EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(5 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def cleaned_text( PARERIGHT : EOM
import string EOM
punctuation  EQUAL  [] EOM
alphabet  EQUAL  list( PARERIGHT  EOM
empty  EQUAL  [] EOM
meaningful_chars  EQUAL  alphabet + punctuation + empty EOM
meanless_list  EQUAL  list(set( PARERIGHT  - set( PARERIGHT  PARERIGHT  EOM
for meanless_char in meanless_list: EOM
text  EQUAL  text DOT replace( PARERIGHT  EOM
return text EOM
def window_transform_text( PARERIGHT : EOM
inputs  EQUAL  [] EOM
outputs  EQUAL  [] EOM
for i in range(len( PARERIGHT -window_size PARERIGHT : EOM
inputs DOT append( PARERIGHT  EOM
outputs DOT append( PARERIGHT  EOM
return inputs COMMA outputs EOM
def build_part2_RNN( PARERIGHT : EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Activation EOM
from keras DOT layers import LSTM EOM
import keras EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(200 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return modelfrom keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT optimizers import RMSprop EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT callbacks import Callback EOM
class LossHistory( PARERIGHT : EOM
def on_train_begin( PARERIGHT : EOM
self DOT losses  EQUAL  [] EOM
def on_batch_end( PARERIGHT : EOM
self DOT losses DOT append(logs DOT get( PARERIGHT  PARERIGHT  EOM
def neural_net( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(rams[] COMMA  init EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
rms  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if load: EOM
model DOT load_weights( PARERIGHT  EOM
return model EOM
def lstm_net( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelimport pandas as pd EOM
import numpy as np EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT models import Input EOM
from keras DOT models import Model EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Merge EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT models import model_from_json EOM
from keras DOT callbacks import ModelCheckpoint EOM
from MyModule import data EOM
from MyModule import evaluate EOM
import os EOM
def build_lstm_models( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(input_shape EQUAL ( PARERIGHT  COMMA output_dim EQUAL [][] COMMA ctivation EQUAL [] COMMA  recurrent_activation EQUAL [] COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
for i in range(1 COMMA  len( PARERIGHT  PARERIGHT : EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
return model EOM
def add_multi_dense( PARERIGHT : EOM
for i in range(len( PARERIGHT  PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def build_model( PARERIGHT : EOM
if os DOT path DOT exists( PARERIGHT : EOM
json_string  EQUAL  open( PARERIGHT  DOT read( PARERIGHT  EOM
model  EQUAL  model_from_json( PARERIGHT  EOM
else: EOM
lstm_models  EQUAL  [] EOM
for i in range( PARERIGHT : EOM
lstm_models DOT append(build_lstm_models( PARERIGHT  PARERIGHT  EOM
sum_lstm_model  EQUAL  Sequential( PARERIGHT  EOM
sum_lstm_model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
sum_lstm_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
sum_lstm_model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
date_model  EQUAL  Sequential( PARERIGHT  EOM
date_model DOT add(ense(input_shape EQUAL ( PARERIGHT  COMMA nits EQUAL [][] COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model  EQUAL  add_multi_dense( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
open( PARERIGHT  DOT write(model DOT to_json( PARERIGHT  PARERIGHT  EOM
if os DOT path DOT exists( PARERIGHT : EOM
model DOT load_weights( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def train( PARERIGHT : EOM
df_date  EQUAL  df_raw DOT pop( PARERIGHT  EOM
df_date  EQUAL  pd DOT concat([] COMMA  axis EQUAL  PARERIGHT  EOM
df_date  EQUAL  pd DOT concat([] COMMA  axis EQUAL  PARERIGHT  EOM
df_date  EQUAL  df_date DOT loc[] EOM
df_raw  EQUAL  data DOT process_sequence_features( PARERIGHT  EOM
df_date_encode  EQUAL  data DOT encoding_features( PARERIGHT  EOM
y_scaled COMMA  y_scaler  EQUAL  data DOT min_max_scale(np DOT array(df_raw DOT pop( PARERIGHT  PARERIGHT  DOT reshape( PARERIGHT  PARERIGHT  EOM
X_scaled COMMA  X_scaler  EQUAL  data DOT min_max_scale( PARERIGHT  EOM
date_encode  EQUAL  np DOT array( PARERIGHT  EOM
train_y  EQUAL  y_scaled[] EOM
test_y  EQUAL  y_scaled[] EOM
train_y  EQUAL  train_y DOT reshape(( PARERIGHT  PARERIGHT  EOM
test_y  EQUAL  test_y DOT reshape(( PARERIGHT  PARERIGHT  EOM
X_scaled  EQUAL  X_scaled DOT reshape(( PARERIGHT  PARERIGHT  EOM
date_encode  EQUAL  date_encode DOT reshape(( PARERIGHT  PARERIGHT  EOM
train_X  EQUAL  [] EOM
test_X  EQUAL  [] EOM
for i in range( PARERIGHT : EOM
train_X DOT append(X_scaled[] PARERIGHT  EOM
test_X DOT append(X_scaled[] PARERIGHT  EOM
train_X DOT append(date_encode[] PARERIGHT  EOM
test_X DOT append(date_encode[] PARERIGHT  EOM
model  EQUAL  build_model( PARERIGHT  EOM
checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
callbacks_list  EQUAL  [] EOM
history  EQUAL  model DOT fit(train_X COMMA  train_y COMMA  epochs EQUAL  COMMA  batch_size EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  COMMA rbose EQUAL  COMMA  callbacks EQUAL  COMMA  shuffle EQUAL  PARERIGHT  EOM
plt DOT figure( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
pred_y  EQUAL  model DOT predict( PARERIGHT  EOM
test_y  EQUAL  data DOT inverse_to_original_data(train_y DOT reshape( PARERIGHT  COMMA  test_y DOT reshape( PARERIGHT  COMMA  scaler EQUAL  COMMA n_num EQUAL (len( PARERIGHT  * ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
pred_y  EQUAL  data DOT inverse_to_original_data(train_y DOT reshape( PARERIGHT  COMMA  pred_y DOT reshape( PARERIGHT  COMMA  scaler EQUAL  COMMA n_num EQUAL (len( PARERIGHT  * ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
return test_y COMMA  pred_y EOM
if __name__  EQUAL  EQUAL  : EOM
pd DOT set_option( PARERIGHT  EOM
cols  EQUAL  [] EOM
df_raw_data  EQUAL  pd DOT read_csv( PARERIGHT  EOM
epoch  EQUAL  1000 EOM
batch  EQUAL  1024 EOM
time_step  EQUAL  4 EOM
test_split  EQUAL  0 DOT 4 EOM
lstm_num  EQUAL  6 EOM
lstm_layers  EQUAL  [] EOM
lstm_activation  EQUAL  EOM
lstm_recurrent_activation  EQUAL  EOM
lstm_input_shape  EQUAL  ( PARERIGHT  EOM
lstm_dropout  EQUAL  0 DOT 3 EOM
dense_layers  EQUAL  [] EOM
dense_activation  EQUAL  EOM
date_features_shape  EQUAL  ( PARERIGHT  EOM
dense_dropout  EQUAL  0 DOT 5 EOM
lstm_conf  EQUAL  {lstm_num COMMA lstm_input_shape COMMA lstm_layers COMMA lstm_activation COMMA lstm_recurrent_activation COMMA lstm_dropout} EOM
dense_conf  EQUAL  {date_features_shape COMMA dense_layers COMMA dense_activation COMMA dense_dropout} EOM
y_true COMMA  y_pred  EQUAL  train( PARERIGHT  EOM
metrics  EQUAL  evaluate DOT print_metrics( PARERIGHT  EOM
evaluate DOT print_curve( PARERIGHT from keras DOT preprocessing DOT image import ImageDataGenerator EOM
from keras DOT models import Sequential COMMA Model EOM
from keras DOT layers import Conv2D COMMA  MaxPooling2D COMMA  Reshape EOM
from keras DOT layers import Activation COMMA  Dropout COMMA  Flatten COMMA  Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT applications DOT vgg16 import VGG16 EOM
class ModelBuilder: EOM
def __init__( PARERIGHT : EOM
pass EOM
def build_custom( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(32 COMMA  ( PARERIGHT  COMMA  input_shape EQUAL  COMMA  padding  EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(32 COMMA  ( PARERIGHT  COMMA  padding EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(1 COMMA  ( PARERIGHT  COMMA padding EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def build_vgg16(input_shape  EQUAL ( PARERIGHT   PARERIGHT : EOM
vgg  EQUAL  VGG16( PARERIGHT  EOM
lstm_input  EQUAL  Reshape(( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
lstm_output  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
model_output  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
modified_vgg_model  EQUAL  Model( PARERIGHT  EOM
vgg DOT summary( PARERIGHT  EOM
return modified_vgg_model EOM
import tensorflow as tf EOM
from tensorflow DOT keras DOT models import Sequential EOM
from tensorflow DOT keras DOT layers import Dense COMMA  Dropout COMMA  LSTM EOM
if __name__  EQUAL  EQUAL  : EOM
mnist  EQUAL  tf DOT keras DOT datasets DOT mnist EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
X_train  EQUAL  x_train/255 DOT 0 EOM
X_test  EQUAL  x_test/255 DOT 0 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(128 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation  EQUAL  COMMA return_sequences  EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  tf DOT keras DOT optimizers DOT Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(x_train COMMA  y_train COMMA epochs  EQUAL  COMMA alidation_data  EQUAL ( PARERIGHT  PARERIGHT  EOM
import numpy as np EOM
import pandas as pd EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import Dropout EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from sklearn DOT model_selection import train_test_split EOM
from keras DOT utils import to_categorical EOM
from sklearn DOT model_selection import GridSearchCV EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
def _clstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
if not embedding_length: EOM
model DOT pop( PARERIGHT  EOM
model DOT pop( PARERIGHT  EOM
model DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if not categorical: EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
else: EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def _lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if not embedding_length: EOM
model DOT pop( PARERIGHT  EOM
model DOT pop( PARERIGHT  EOM
model DOT add(LSTM(nodes COMMA  dropout EQUAL  COMMA recurrent_dropout EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if not categorical: EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
else: EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def _cnn( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
if not embedding_length: EOM
model DOT pop( PARERIGHT  EOM
model DOT pop( PARERIGHT  EOM
model DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
if not categorical: EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
else: EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def train_model( PARERIGHT : EOM
np DOT random DOT seed( PARERIGHT  EOM
if test_fraction: EOM
x COMMA  x_test COMMA  y COMMA  y_test  EQUAL  train_test_split( PARERIGHT  EOM
kwargs[]  EQUAL  int(x DOT max( PARERIGHT  + 1 PARERIGHT  EOM
if skip_embedding: EOM
kwargs[]  EQUAL  False EOM
x  EQUAL  to_categorical( PARERIGHT  EOM
if test_fraction: EOM
x_test  EQUAL  to_categorical( PARERIGHT  EOM
kwargs[]  EQUAL  int( PARERIGHT  EOM
if not np DOT isscalar( PARERIGHT : EOM
kwargs[]  EQUAL  y DOT shape[] EOM
if architecture  EQUAL  EQUAL  : EOM
model  EQUAL  _clstm( PARERIGHT  EOM
elif architecture  EQUAL  EQUAL  : EOM
model  EQUAL  _lstm( PARERIGHT  EOM
elif architecture  EQUAL  EQUAL  : EOM
model  EQUAL  _cnn( PARERIGHT  EOM
fit_args  EQUAL  {epochs COMMA batch_size COMMA verbose} EOM
if test_fraction: EOM
fit_args[]  EQUAL  ( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
if test_fraction: EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
if save_file: EOM
model DOT save( PARERIGHT  EOM
return model EOM
def cross_validate( PARERIGHT : EOM
np DOT random DOT seed( PARERIGHT  EOM
params[]  EQUAL  [] EOM
if skip_embedding: EOM
params[]  EQUAL  [] EOM
x  EQUAL  to_categorical( PARERIGHT  EOM
params[]  EQUAL  [] EOM
if not np DOT isscalar( PARERIGHT : EOM
params[]  EQUAL  []] EOM
if architecture  EQUAL  EQUAL  : EOM
model  EQUAL  KerasClassifier( PARERIGHT  EOM
if architecture  EQUAL  EQUAL  : EOM
model  EQUAL  KerasClassifier( PARERIGHT  EOM
if architecture  EQUAL  EQUAL  : EOM
model  EQUAL  KerasClassifier( PARERIGHT  EOM
grid_result  EQUAL  grid DOT fit( PARERIGHT  EOM
if save_file: EOM
grid_df  EQUAL  pd DOT DataFrame( PARERIGHT  EOM
grid_df[]  EQUAL  grid_result DOT cv_results_[] EOM
grid_df[]  EQUAL  grid_result DOT cv_results_[] EOM
grid_df DOT to_csv( PARERIGHT  EOM
returnimport keras EOM
import Data EOM
def Model1( PARERIGHT : EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM(input_shape*5 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def Model2( PARERIGHT : EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM(1 COMMA input_shape EQUAL ( PARERIGHT  COMMA recurrent_dropout EQUAL  COMMA dropout EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def Model3( PARERIGHT : EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
LSTM_num  EQUAL  5 EOM
model DOT add(keras DOT layers DOT LSTM(LSTM_num COMMA input_shape EQUAL ( PARERIGHT  COMMA recurrent_dropout EQUAL  COMMA dropout EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
import os EOM
import numpy as np EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from keras DOT layers import Dense COMMA  Input COMMA  Flatten COMMA  Dropout COMMA  Activation COMMA Masking COMMA Merge COMMA Lambda EOM
from keras DOT layers import Conv1D COMMA  MaxPooling1D COMMA  Embedding COMMA TimeDistributed COMMA AveragePooling1D EOM
from keras DOT models import Model EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  SimpleRNN COMMA  GRU COMMA Bidirectional EOM
from keras DOT callbacks import EarlyStopping EOM
import keras DOT backend as K EOM
from keras DOT utils import np_utils EOM
import get_data EOM
import sys EOM
MAX_LEN  EQUAL  79 EOM
WORD_DIM  EQUAL  50 EOM
def train_eoe_model_of_lstm( PARERIGHT : EOM
train_X COMMA train_Y COMMA test_X COMMA test_Y  EQUAL  get_data DOT return_eoa_data( PARERIGHT  EOM
mymodel  EQUAL  Sequential( PARERIGHT  EOM
mymodel DOT add(LSTM(100 COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
mymodel DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
mymodel DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
mymodel DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
mymodel DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
mymodel DOT summary( PARERIGHT  EOM
mymodel DOT compile( PARERIGHT  EOM
early_stopping  EQUAL  EarlyStopping( PARERIGHT  EOM
mymodel DOT fit( PARERIGHT  EOM
mymodel DOT save( PARERIGHT  EOM
def train_eoe_model_of_GRU( PARERIGHT : EOM
train_X COMMA  train_Y COMMA  test_X COMMA  test_Y  EQUAL  get_data DOT return_eoa_data( PARERIGHT  EOM
mymodel  EQUAL  Sequential( PARERIGHT  EOM
mymodel DOT add(GRU(100 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
mymodel DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
mymodel DOT add(GRU( PARERIGHT  PARERIGHT  EOM
mymodel DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
mymodel DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
mymodel DOT summary( PARERIGHT  EOM
mymodel DOT compile( PARERIGHT  EOM
early_stopping  EQUAL  EarlyStopping( PARERIGHT  EOM
mymodel DOT fit( PARERIGHT  EOM
mymodel DOT save( PARERIGHT  EOM
def train_eoe_model_of_Blstm( PARERIGHT : EOM
train_X COMMA  train_Y COMMA  test_X COMMA  test_Y  EQUAL  get_data DOT return_eoa_data( PARERIGHT  EOM
mymodel  EQUAL  Sequential( PARERIGHT  EOM
mymodel DOT add(Bidirectional(LSTM( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
mymodel DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
mymodel DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
mymodel DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
mymodel DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
mymodel DOT summary( PARERIGHT  EOM
mymodel DOT compile( PARERIGHT  EOM
early_stopping  EQUAL  EarlyStopping( PARERIGHT  EOM
mymodel DOT fit( PARERIGHT  EOM
mymodel DOT save( PARERIGHT  EOM
def train_eosc_model_of_lstm( PARERIGHT : EOM
train_X_F COMMA  train_X_B COMMA  train_Y COMMA  test_X_F COMMA  test_X_B COMMA  test_Y  EQUAL  get_data DOT get_eosc_data( PARERIGHT  EOM
encoder_a  EQUAL  Sequential( PARERIGHT  EOM
encoder_a DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
encoder_a DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
encoder_a DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
encoder_b  EQUAL  Sequential( PARERIGHT  EOM
encoder_b DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
encoder_b DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
encoder_b DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
decoder  EQUAL  Sequential( PARERIGHT  EOM
decoder DOT add(Merge( PARERIGHT  PARERIGHT  EOM
decoder DOT add(Dense( PARERIGHT  PARERIGHT  EOM
decoder DOT compile( PARERIGHT  EOM
early_stopping  EQUAL  EarlyStopping( PARERIGHT  EOM
decoder DOT fit( PARERIGHT  EOM
decoder DOT save( PARERIGHT  EOM
def train_eosc_model_of_Blstm( PARERIGHT : EOM
train_X_F COMMA  train_X_B COMMA  train_Y COMMA  test_X_F COMMA  test_X_B COMMA  test_Y  EQUAL  get_data DOT get_eosc_data( PARERIGHT  EOM
encoder_a  EQUAL  Sequential( PARERIGHT  EOM
encoder_a DOT add(Bidirectional(LSTM( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
encoder_a DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
encoder_a DOT add(Lambda(lambda x:K DOT mean( PARERIGHT  COMMA output_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
encoder_b  EQUAL  Sequential( PARERIGHT  EOM
encoder_b DOT add(Bidirectional(LSTM( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
encoder_b DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
encoder_b DOT add(Lambda(lambda x:K DOT mean( PARERIGHT  COMMA output_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
decoder  EQUAL  Sequential( PARERIGHT  EOM
decoder DOT add(Merge( PARERIGHT  PARERIGHT  EOM
decoder DOT add(Dense( PARERIGHT  PARERIGHT  EOM
decoder DOT compile( PARERIGHT  EOM
early_stopping  EQUAL  EarlyStopping( PARERIGHT  EOM
decoder DOT fit( PARERIGHT  EOM
decoder DOT save( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
train_eosc_model_of_Blstm( PARERIGHT import pickle EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT optimizers import RMSprop EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import GRU EOM
xtrain COMMA  xtest COMMA  ytrain COMMA  ytest  EQUAL  pickle DOT load(open( PARERIGHT  PARERIGHT  EOM
def lstm_modelization( PARERIGHT : EOM
num_words  EQUAL  10000 EOM
max_review_length  EQUAL  500 EOM
embedding_vecor_length  EQUAL  32 EOM
opt  EQUAL  RMSprop( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
return model EOM
def gru_modelization( PARERIGHT : EOM
num_words  EQUAL  10000 EOM
max_review_length  EQUAL  500 EOM
embedding_vecor_length  EQUAL  32 EOM
opt  EQUAL  RMSprop( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
return model EOM
def lstm_and_cnn_modelization( PARERIGHT : EOM
num_words  EQUAL  10000 EOM
max_review_length  EQUAL  500 EOM
embedding_vecor_length  EQUAL  32 EOM
opt  EQUAL  RMSprop( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
return model EOM
lstm_model  EQUAL  lstm_modelization( PARERIGHT  EOM
import pytest EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras import Input COMMA  Model EOM
from keras DOT layers import Conv2D COMMA  Bidirectional EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(2 COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
inner_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_lstm  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  name EQUAL  PARERIGHT ( PARERIGHT  EOM
encoder  EQUAL  Model( PARERIGHT  EOM
outer_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_encoder  EQUAL  TimeDistributed( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
preds  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
def test_plot_sequential_embedding( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT import os EOM
global_model_version  EQUAL  68 EOM
global_batch_size  EQUAL  128 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_11  EQUAL  Sequential( PARERIGHT  EOM
branch_11 DOT add( PARERIGHT  EOM
branch_11 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_11 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_11 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_11 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_11 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_11 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_13  EQUAL  Sequential( PARERIGHT  EOM
branch_13 DOT add( PARERIGHT  EOM
branch_13 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_13 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_13 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_13 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_13 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_13 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_15  EQUAL  Sequential( PARERIGHT  EOM
branch_15 DOT add( PARERIGHT  EOM
branch_15 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_15 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_15 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_15 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_15 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_15 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_17  EQUAL  Sequential( PARERIGHT  EOM
branch_17 DOT add( PARERIGHT  EOM
branch_17 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_17 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_17 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_17 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_17 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_17 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_19  EQUAL  Sequential( PARERIGHT  EOM
branch_19 DOT add( PARERIGHT  EOM
branch_19 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_19 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_19 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_19 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_19 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_19 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_21  EQUAL  Sequential( PARERIGHT  EOM
branch_21 DOT add( PARERIGHT  EOM
branch_21 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_21 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_21 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_21 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_21 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_21 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  keras DOT optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import numpy as np EOM
import keras EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Activation COMMA  Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dropout EOM
def build_model( PARERIGHT : EOM
model DOT add(LSTM(neurons COMMA  return_sequences  EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  activation  EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return modelfrom __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
import numpy as np EOM
from tensorflow DOT python DOT framework import test_util as tf_test_util EOM
from tensorflow DOT python DOT keras DOT _impl import keras EOM
from tensorflow DOT python DOT keras DOT _impl DOT keras import testing_utils EOM
from tensorflow DOT python DOT platform import test EOM
from tensorflow DOT python DOT training DOT rmsprop import RMSPropOptimizer EOM
class LSTMLayerTest( PARERIGHT : EOM
def test_return_sequences_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA return_sequences EOM
def test_static_shape_inference_LSTM( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
inputs  EQUAL  keras DOT layers DOT Dense(embedding_dim COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
outputs  EQUAL  model DOT layers[] DOT output EOM
self DOT assertEquals(outputs DOT get_shape( PARERIGHT  DOT as_list( PARERIGHT  COMMA  [] PARERIGHT  EOM
def test_dynamic_behavior_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
layer  EQUAL  keras DOT layers DOT LSTM(units COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile(RMSPropOptimizer( PARERIGHT  COMMA   PARERIGHT  EOM
x  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_dropout_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA dropout: 0 DOT 1} COMMA put_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
def test_implementation_mode_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
for mode in []: EOM
testing_utils DOT layer_test( PARERIGHT  EOM
def test_statefulness_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
with self DOT test_session( PARERIGHT : EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Embedding(4 COMMA embedding_dim COMMA mask_zero EQUAL  COMMA input_length EQUAL  COMMA atch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
layer  EQUAL  layer_class( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
out1  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertEqual(out1 DOT shape COMMA  ( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch(ones(( PARERIGHT  PARERIGHT  COMMA  np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
out2  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out1 DOT max( PARERIGHT  COMMA  out2 DOT max( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
out3  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out2 DOT max( PARERIGHT  COMMA  out3 DOT max( PARERIGHT  PARERIGHT  EOM
model DOT reset_states( PARERIGHT  EOM
out4  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertAllClose( PARERIGHT  EOM
out5  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out4 DOT max( PARERIGHT  COMMA  out5 DOT max( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
left_padded_input  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
left_padded_input[]  EQUAL  0 EOM
left_padded_input[]  EQUAL  0 EOM
out6  EQUAL  model DOT predict( PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
right_padded_input  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
right_padded_input[]  EQUAL  0 EOM
right_padded_input[]  EQUAL  0 EOM
out7  EQUAL  model DOT predict( PARERIGHT  EOM
self DOT assertAllClose( PARERIGHT  EOM
def test_regularizers_LSTM( PARERIGHT : EOM
embedding_dim  EQUAL  4 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
with self DOT test_session( PARERIGHT : EOM
layer  EQUAL  layer_class(5 COMMA return_sequences EQUAL  COMMA weights EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA recurrent_regularizer EQUAL ( PARERIGHT  COMMA bias_regularizer EQUAL  COMMA activity_regularizer EQUAL  PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
self DOT assertEqual(len( PARERIGHT  COMMA  3 PARERIGHT  EOM
x  EQUAL  keras DOT backend DOT variable(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
layer( PARERIGHT  EOM
self DOT assertEqual(len(layer DOT get_losses_for( PARERIGHT  PARERIGHT  COMMA  1 PARERIGHT  EOM
def test_constraints_LSTM( PARERIGHT : EOM
embedding_dim  EQUAL  4 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
with self DOT test_session( PARERIGHT : EOM
k_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
r_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
b_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
layer  EQUAL  layer_class(5 COMMA return_sequences EQUAL  COMMA weights EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA kernel_constraint EQUAL  COMMA recurrent_constraint EQUAL  COMMA bias_constraint EQUAL  PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
def test_with_masking_layer_LSTM( PARERIGHT : EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
with self DOT test_session( PARERIGHT : EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT abs(np DOT random DOT random(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
targets / EQUAL  targets DOT sum( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Masking(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(layer_class( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
def test_from_config_LSTM( PARERIGHT : EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
for stateful in ( PARERIGHT : EOM
l1  EQUAL  layer_class( PARERIGHT  EOM
l2  EQUAL  layer_class DOT from_config(l1 DOT get_config( PARERIGHT  PARERIGHT  EOM
assert l1 DOT get_config( PARERIGHT   EQUAL ( PARERIGHT  EOM
def test_specify_initial_state_keras_tensor( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
with self DOT test_session( PARERIGHT : EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
if len( PARERIGHT   EQUAL   : output  EQUAL  layer( PARERIGHT  EOM
else: EOM
output  EQUAL  layer( PARERIGHT  EOM
assert initial_state[] in layer DOT _inbound_nodes[] DOT input_tensors EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_specify_initial_state_non_keras_tensor( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
with self DOT test_session( PARERIGHT : EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
output  EQUAL  layer( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_reset_states_with_values( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
with self DOT test_session( PARERIGHT : EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
assert len( PARERIGHT   EQUAL       assert layer DOT states[] is not None EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA np DOT zeros(keras DOT backend DOT int_shape( PARERIGHT  PARERIGHT  COMMA atol EQUAL  PARERIGHT  EOM
state_shapes  EQUAL  [] EOM
values  EQUAL  [] EOM
if len( PARERIGHT   EQUAL         values  EQUAL  values[] EOM
layer DOT reset_states( PARERIGHT  EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA np DOT ones(keras DOT backend DOT int_shape( PARERIGHT  PARERIGHT  COMMA atol EQUAL  PARERIGHT  EOM
with self DOT assertRaises( PARERIGHT : EOM
layer DOT reset_states([] * (len( PARERIGHT  + 1 PARERIGHT  PARERIGHT  EOM
def test_specify_state_with_masking( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
with self DOT test_session( PARERIGHT : EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
_  EQUAL  keras DOT layers DOT Masking( PARERIGHT ( PARERIGHT  EOM
initial_state  EQUAL  [] EOM
output  EQUAL  keras DOT layers DOT LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_return_state( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
with self DOT test_session( PARERIGHT : EOM
inputs  EQUAL  keras DOT Input(batch_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
outputs  EQUAL  layer( PARERIGHT  EOM
state  EQUAL  outputs[] EOM
assert len( PARERIGHT   EQUAL       model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
state  EQUAL  model DOT predict( PARERIGHT  EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA  state COMMA  atol EQUAL  PARERIGHT  EOM
def test_state_reuse( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
with self DOT test_session( PARERIGHT : EOM
inputs  EQUAL  keras DOT Input(batch_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
outputs  EQUAL  layer( PARERIGHT  EOM
output COMMA  state  EQUAL  outputs[] COMMA  outputs[] EOM
output  EQUAL  keras DOT layers DOT LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
outputs  EQUAL  model DOT predict( PARERIGHT  EOM
def test_initial_states_as_other_inputs( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
num_states  EQUAL  2 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
with self DOT test_session( PARERIGHT : EOM
main_inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
inputs  EQUAL  [] + initial_state EOM
layer  EQUAL  layer_class( PARERIGHT  EOM
output  EQUAL  layer( PARERIGHT  EOM
assert initial_state[] in layer DOT _inbound_nodes[] DOT input_tensors EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
main_inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
test DOT main( PARERIGHT from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT pooling import MaxPooling1D COMMA  AveragePooling1D EOM
from keras DOT layers DOT recurrent import LSTM COMMA  GRU EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import SimpleRNN EOM
from keras DOT models import Sequential EOM
from keras import optimizers EOM
from keras import regularizers EOM
import numpy as np EOM
from numpy import newaxis EOM
def lstm_model( PARERIGHT : EOM
rmsprop  EQUAL  optimizers DOT RMSprop( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(BatchNormalization(input_shape  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(64 COMMA  1 COMMA  activation EQUAL  COMMA nel_regularizer  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(units  EQUAL  COMMA  return_sequences  EQUAL  COMMA  kernel_regularizer  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def gru_model( PARERIGHT : EOM
rmsprop  EQUAL  optimizers DOT RMSprop( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(GRU(units  EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA urn_sequences  EQUAL  COMMA  rnel_regularizer  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def rnn_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(SimpleRNN(units  EQUAL  COMMA  input_shape  EQUAL ( PARERIGHT  COMMA  _sequences  EQUAL  COMMA  kernel_regularizer  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def classifier( PARERIGHT : EOM
rmsprop  EQUAL  optimizers DOT RMSprop( PARERIGHT  EOM
sgd  EQUAL  optimizers DOT SGD( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dropout(0 DOT 2 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(32 COMMA  1 COMMA  activation EQUAL  COMMA  rnel_regularizer  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def predict( PARERIGHT : EOM
return y_pre EOM
def predict_sequence( PARERIGHT : EOM
for i in range( PARERIGHT : EOM
if i  EQUAL  EQUAL  0: EOM
y_pre DOT append(model DOT predict( PARERIGHT  PARERIGHT  EOM
else: EOM
y_pre DOT append(model DOT predict(np DOT insert( PARERIGHT  PARERIGHT  PARERIGHT  EOM
return np DOT array( PARERIGHT from __future__ import division COMMA  print_function EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Dropout COMMA  RepeatVector EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT recurrent import SimpleRNN EOM
from keras DOT layers DOT recurrent import GRU EOM
from keras DOT models import Sequential EOM
import os EOM
import helper EOM
from argparse import ArgumentParser EOM
parser  EQUAL  ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
args  EQUAL  parser DOT parse_args( PARERIGHT  EOM
TASK_NBR  EQUAL  5 EOM
EMBED_HIDDEN_SIZE  EQUAL  100 EOM
BATCH_SIZE  EQUAL  32 EOM
NBR_EPOCHS  EQUAL  50 EOM
train_file COMMA  test_file  EQUAL  helper DOT get_files_for_task( PARERIGHT  EOM
data_train  EQUAL  helper DOT get_stories(os DOT path DOT join( PARERIGHT  PARERIGHT  EOM
data_test  EQUAL  helper DOT get_stories(os DOT path DOT join( PARERIGHT  PARERIGHT  EOM
word2idx  EQUAL  helper DOT build_vocab( PARERIGHT  EOM
vocab_size  EQUAL  len( PARERIGHT  + 1 EOM
story_maxlen COMMA  question_maxlen  EQUAL  helper DOT get_maxlens( PARERIGHT  EOM
Xs_train COMMA  Xq_train COMMA  Y_train  EQUAL  helper DOT vectorize_dualLSTM( PARERIGHT  EOM
Xs_test COMMA  Xq_test COMMA  Y_test  EQUAL  helper DOT vectorize_dualLSTM( PARERIGHT  EOM
story_lstm_word  EQUAL  Sequential( PARERIGHT  EOM
story_lstm_word DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
story_lstm_word DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
story_lstm_sentence  EQUAL  Sequential( PARERIGHT  EOM
story_lstm_sentence DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
story_lstm_sentence DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
question_lstm  EQUAL  Sequential( PARERIGHT  EOM
question_lstm DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
question_lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
question_lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
question_lstm DOT add(RepeatVector( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
loss COMMA  acc  EQUAL  model DOT evaluate( PARERIGHT  EOM
global_model_version  EQUAL  66 EOM
global_batch_size  EQUAL  128 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  keras DOT optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from keras DOT models import Model COMMA  Sequential COMMA  load_model EOM
from keras DOT optimizers import Nadam COMMA  SGD COMMA  Adam EOM
from keras DOT layers import Conv2D COMMA  MaxPooling2D COMMA  Input COMMA  Conv1D COMMA  MaxPooling3D COMMA  Conv3D COMMA  ConvLSTM2D COMMA  LSTM COMMA  AveragePooling2D EOM
from keras DOT layers import Input COMMA  LSTM COMMA  Embedding COMMA  Dense COMMA  LeakyReLU COMMA  Flatten COMMA  Dropout COMMA  SeparableConv2D COMMA  GlobalAveragePooling3D EOM
from keras DOT layers import TimeDistributed COMMA  BatchNormalization EOM
from keras import optimizers EOM
from keras DOT callbacks import EarlyStopping EOM
from keras import regularizers EOM
class ResearchModels( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT frames  EQUAL  frames EOM
self DOT saved_model  EQUAL  saved_model EOM
self DOT image_dim  EQUAL  tuple( PARERIGHT  EOM
self DOT input_shape  EQUAL  ( PARERIGHT  + tuple( PARERIGHT  EOM
self DOT print_model  EQUAL  print_model EOM
metrics  EQUAL  [] EOM
if self DOT saved_model is not None: EOM
self DOT model  EQUAL  load_model( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  self DOT CNN_LSTM( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  self DOT SepCNN_LSTM( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  self DOT CONVLSTM( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  self DOT CONV3D( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  self DOT CONVLSTM_CONV3D( PARERIGHT  EOM
else: EOM
sys DOT exit( PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
if self DOT print_model  EQUAL  EQUAL  True: EOM
def CNN_LSTM( PARERIGHT : EOM
frames_input  EQUAL  Input( PARERIGHT  EOM
vision_model  EQUAL  Sequential( PARERIGHT  EOM
vision_model DOT add(Conv2D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  COMMA  padding EQUAL  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
vision_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
vision_model DOT add(MaxPooling2D(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vision_model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
vision_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
fc2  EQUAL  Dense(64 COMMA  activation EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
out  EQUAL  Flatten( PARERIGHT ( PARERIGHT  EOM
out  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
output  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
CNN_LSTM  EQUAL  Model( PARERIGHT  EOM
return CNN_LSTM EOM
def SepCNN_LSTM( PARERIGHT : EOM
frames_input  EQUAL  Input( PARERIGHT  EOM
vision_model  EQUAL  Sequential( PARERIGHT  EOM
vision_model DOT add(SeparableConv2D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  COMMA  padding EQUAL  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
vision_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
vision_model DOT add(MaxPooling2D(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vision_model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
vision_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
fc2  EQUAL  Dense(64 COMMA  activation EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
out  EQUAL  Flatten( PARERIGHT ( PARERIGHT  EOM
out  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
output  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
CNN_LSTM  EQUAL  Model( PARERIGHT  EOM
return CNN_LSTM EOM
def CONVLSTM( PARERIGHT : EOM
CONVLSTM  EQUAL  Sequential( PARERIGHT  EOM
CONVLSTM DOT add(ConvLSTM2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA input_shape EQUAL  COMMA adding EQUAL  COMMA  return_sequences EQUAL  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
CONVLSTM DOT add(ConvLSTM2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA adding EQUAL  COMMA  return_sequences EQUAL  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
CONVLSTM DOT add(ConvLSTM2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA adding EQUAL  COMMA  return_sequences EQUAL  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
CONVLSTM DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
CONVLSTM DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
CONVLSTM DOT add(Dense( PARERIGHT  PARERIGHT  EOM
CONVLSTM DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
CONVLSTM DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return CONVLSTM EOM
def CONV3D( PARERIGHT : EOM
CONV3D  EQUAL  Sequential( PARERIGHT  EOM
CONV3D DOT add(Conv3D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
CONV3D DOT add(Conv3D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
CONV3D DOT add(Conv3D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
CONV3D DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA border_mode EQUAL  PARERIGHT  PARERIGHT  EOM
CONV3D DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
CONV3D DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
CONV3D DOT add(Dense( PARERIGHT  PARERIGHT  EOM
CONV3D DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
CONV3D DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return CONV3D EOM
def CONVLSTM_CONV3D( PARERIGHT : EOM
CONVLSTM_CON3D  EQUAL  Sequential( PARERIGHT  EOM
CONVLSTM_CON3D DOT add(ConvLSTM2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA input_shape EQUAL  COMMA adding EQUAL  COMMA  return_sequences EQUAL  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
CONVLSTM_CON3D DOT add(ConvLSTM2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA adding EQUAL  COMMA  return_sequences EQUAL  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
CONVLSTM_CON3D DOT add(Conv3D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
CONVLSTM_CON3D DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
CONVLSTM_CON3D DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
CONVLSTM_CON3D DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
CONVLSTM_CON3D DOT add(Dense( PARERIGHT  PARERIGHT  EOM
CONVLSTM_CON3D DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
CONVLSTM_CON3D DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return CONVLSTM_CON3Dimport keras EOM
from keras DOT layers import * EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT optimizers import * EOM
import numpy as np EOM
import random EOM
from keras DOT regularizers import * EOM
Xs  EQUAL  np DOT load( PARERIGHT  EOM
n  EQUAL  300 EOM
def add_comp( PARERIGHT : EOM
return np DOT append( PARERIGHT  EOM
def add_dim( PARERIGHT : EOM
return map( PARERIGHT  EOM
Xs  EQUAL  map( PARERIGHT  EOM
def resize( PARERIGHT : EOM
if len( PARERIGHT  > n: EOM
return sample[] EOM
if len( PARERIGHT  < n: EOM
res  EQUAL  np DOT concatenate((sample COMMA  np DOT zeros((n-len( PARERIGHT  COMMA len( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
return res EOM
Xs  EQUAL  filter(lambda k : len( PARERIGHT  COMMA  Xs PARERIGHT  EOM
Xs  EQUAL  np DOT array(map( PARERIGHT  PARERIGHT  EOM
ys  EQUAL  np DOT load( PARERIGHT  EOM
Xs COMMA  ys  EQUAL  zip(*filter(lambda ( PARERIGHT  : j is not None COMMA  zip( PARERIGHT  PARERIGHT  PARERIGHT  EOM
Xs  EQUAL  np DOT array( PARERIGHT  EOM
ys  EQUAL  np DOT array( PARERIGHT  EOM
for i COMMA  thing in enumerate( PARERIGHT : EOM
assert np DOT shape( PARERIGHT   EQUAL ( PARERIGHT  EOM
n COMMA  l COMMA  d  EQUAL  np DOT shape( PARERIGHT  EOM
def test0( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Flatten(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(1 COMMA  activation EQUAL  COMMA  W_regularizer  EQUAL ( PARERIGHT  COMMA  b_regularizer  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
return model EOM
def test1( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def test3( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Flatten(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def test2( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  COMMA shape  EQUAL ( PARERIGHT  COMMA  merge_mode  EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def test2_( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  COMMA shape  EQUAL ( PARERIGHT  COMMA  merge_mode  EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
sizes DOT append( PARERIGHT  EOM
def bd_layer( PARERIGHT : EOM
fwd  EQUAL  GRU( PARERIGHT ( PARERIGHT  EOM
bck  EQUAL  GRU( PARERIGHT ( PARERIGHT  EOM
return Dropout( PARERIGHT (merge( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
next  EQUAL  inputs EOM
for i COMMA  size in enumerate( PARERIGHT : EOM
next  EQUAL  bd_layer( PARERIGHT  EOM
summary  EQUAL  Dense( PARERIGHT (Flatten( PARERIGHT ( PARERIGHT  PARERIGHT  EOM
pred  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
return Model( PARERIGHT  EOM
data  EQUAL  list(zip( PARERIGHT  PARERIGHT  EOM
random DOT shuffle( PARERIGHT  EOM
Xtr COMMA  ytr  EQUAL  map(np DOT array COMMA zip( PARERIGHT  PARERIGHT  EOM
Xte COMMA  yte  EQUAL  map(np DOT array COMMA zip( PARERIGHT  PARERIGHT  EOM
RMS  EQUAL  RMSprop( PARERIGHT  EOM
model  EQUAL  test4( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(Xtr COMMA  ytr COMMA  nb_epoch EQUAL  COMMA  batch_size EQUAL  COMMA  validation_data  EQUAL ( PARERIGHT  PARERIGHT from keras DOT models import load_model EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Merge EOM
from keras DOT layers DOT core import Dense EOM
from keras DOT layers DOT recurrent import LSTM EOM
import numpy as np EOM
class fifo_array( PARERIGHT : EOM
self DOT max_len  EQUAL  max_length EOM
self DOT arr  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
def add_element( PARERIGHT : EOM
self DOT arr2  EQUAL  np DOT delete( PARERIGHT  EOM
self DOT arr  EQUAL  np DOT reshape( PARERIGHT  EOM
def get_value( PARERIGHT : EOM
return self DOT arr EOM
def change_length( PARERIGHT : EOM
self DOT arr3  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
self DOT arr3[]  EQUAL  self DOT arr EOM
self DOT arr  EQUAL  self DOT arr3 EOM
self DOT max_len  EQUAL  new_length EOM
else: EOM
x  EQUAL  [] EOM
self DOT arr4  EQUAL  np DOT delete( PARERIGHT  EOM
self DOT arr  EQUAL  self DOT arr4 EOM
self DOT max_len  EQUAL  new_length EOM
class bcolors: EOM
UNDERLINE  EQUAL  from keras DOT datasets import imdb EOM
from keras DOT preprocessing import sequence EOM
max_features EQUAL 10000 EOM
maxlen  EQUAL  500 EOM
input_train EOM
input_test EOM
input_train DOT shape COMMA  input_test DOT shape EOM
x_train EQUAL sequence DOT pad_sequences( PARERIGHT  EOM
x_test EQUAL sequence DOT pad_sequences( PARERIGHT  EOM
x_train DOT shape COMMA x_test DOT shape EOM
from keras DOT models import Sequential EOM
from keras DOT layers import SimpleRNN COMMA  Dense COMMA  Embedding EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(SimpleRNN( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
history  EQUAL  model DOT fit( PARERIGHT  EOM
from keras DOT layers import LSTM EOM
model_lstm  EQUAL  Sequential( PARERIGHT  EOM
model_lstm DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_lstm DOT summary( PARERIGHT  EOM
model_lstm DOT compile( PARERIGHT  EOM
history  EQUAL  model_lstm DOT fit( PARERIGHT  EOM
import os EOM
global_model_version  EQUAL  64 EOM
global_batch_size  EQUAL  128 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  keras DOT optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import pytest EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras import Input COMMA  Model EOM
from keras DOT layers import Conv2D COMMA  Bidirectional EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(2 COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
inner_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_lstm  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  name EQUAL  PARERIGHT ( PARERIGHT  EOM
encoder  EQUAL  Model( PARERIGHT  EOM
outer_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_encoder  EQUAL  TimeDistributed( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
preds  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
def test_plot_sequential_embedding( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Embedding COMMA  LSTM COMMA  Bidirectional COMMA GRU COMMA SimpleRNN EOM
import logging EOM
from keras DOT callbacks import EarlyStopping EOM
def train( PARERIGHT : EOM
embedding_layer  EQUAL  Embedding( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(SimpleRNN( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
early_stopping  EQUAL  EarlyStopping( PARERIGHT  EOM
hist  EQUAL  model DOT fit(x_train COMMA  y_train COMMA batch_size EQUAL  COMMA epochs EQUAL  COMMA lidation_data EQUAL ( PARERIGHT  COMMA  callbacks EQUAL [] PARERIGHT  EOM
log_format  EQUAL  EOM
logging DOT basicConfig( PARERIGHT  EOM
logging DOT warning( PARERIGHT  EOM
for i in range(len( PARERIGHT  PARERIGHT : EOM
logging DOT warning( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
def train2( PARERIGHT : EOM
embedding_layer  EQUAL  Embedding( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
early_stopping  EQUAL  EarlyStopping( PARERIGHT  EOM
hist  EQUAL  model DOT fit(x_train COMMA  y_train COMMA batch_size EQUAL  COMMA epochs EQUAL  COMMA lidation_data EQUAL ( PARERIGHT  COMMA  callbacks EQUAL [] PARERIGHT  EOM
log_format  EQUAL  EOM
logging DOT basicConfig( PARERIGHT  EOM
logging DOT warning( PARERIGHT  EOM
for i in range(len( PARERIGHT  PARERIGHT : EOM
strlog EQUAL str( PARERIGHT +++str( PARERIGHT ++str( PARERIGHT ++str( PARERIGHT ++str( PARERIGHT  EOM
logging DOT warning( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
def train3( PARERIGHT : EOM
embedding_layer  EQUAL  Embedding( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(Bidirectional(GRU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
early_stopping  EQUAL  EarlyStopping( PARERIGHT  EOM
hist  EQUAL  model DOT fit(x_train COMMA  y_train COMMA batch_size EQUAL  COMMA epochs EQUAL  COMMA lidation_data EQUAL ( PARERIGHT  COMMA  callbacks EQUAL [] PARERIGHT  EOM
log_format  EQUAL  EOM
logging DOT basicConfig( PARERIGHT  EOM
logging DOT warning( PARERIGHT  EOM
for i in range(len( PARERIGHT  PARERIGHT : EOM
logging DOT warning( PARERIGHT  EOM
model DOT save( PARERIGHT import os EOM
global_model_version  EQUAL  43 EOM
global_batch_size  EQUAL  16 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_2  EQUAL  Sequential( PARERIGHT  EOM
branch_2 DOT add( PARERIGHT  EOM
branch_2 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_6  EQUAL  Sequential( PARERIGHT  EOM
branch_6 DOT add( PARERIGHT  EOM
branch_6 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT layers import RepeatVector COMMA  Input EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT callbacks import EarlyStopping COMMA  History COMMA  TensorBoard EOM
from keras DOT optimizers import Adam EOM
from keras DOT models import Model EOM
def createModel( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(RepeatVector( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def createModelEncDec( PARERIGHT : EOM
inputs1  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
lstm1  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
batchNorm  EQUAL  BatchNormalization( PARERIGHT ( PARERIGHT  EOM
dropout  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
denseor  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
lstm2 COMMA  state_h COMMA  state_c  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
encoder_states  EQUAL  [] EOM
decIn  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
lstm3  EQUAL  LSTM( PARERIGHT  EOM
lstmOut COMMA  _ COMMA  _  EQUAL  lstm3( PARERIGHT  EOM
outDense  EQUAL  TimeDistributed(Dense( PARERIGHT  PARERIGHT  EOM
decoder_outputs  EQUAL  outDense( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers import Embedding COMMA  Conv1D COMMA  Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT core import Flatten EOM
def get_simple_cnn( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(input_dim EQUAL  COMMA output_dim EQUAL  COMMA embeddings_initializer EQUAL  COMMA trainable EQUAL  COMMA put_shape  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def get_RNN( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
from keras DOT engine import Input EOM
from keras import backend as K EOM
from keras DOT layers import Concatenate EOM
from keras DOT models import Model EOM
def mix_cnn_rnn( PARERIGHT : EOM
input_text  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
embedding_vec  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
cnn_config EQUAL [] EOM
data_aug  EQUAL  [] EOM
for i COMMA  c_conf in enumerate( PARERIGHT : EOM
data_aug DOT append(Conv1D(kernel_size  EQUAL [] COMMA lters  EQUAL [] COMMA dding  EQUAL [] COMMA name EQUAL ( PARERIGHT  PARERIGHT ( PARERIGHT  PARERIGHT  EOM
concat_data  EQUAL  Concatenate( PARERIGHT ( PARERIGHT  EOM
rnn_result  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
rnn_result  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
logist  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten COMMA  TimeDistributed COMMA  RepeatVector EOM
from keras DOT layers import LSTM as lstm EOM
from keras DOT optimizers import Adam EOM
from keras DOT callbacks import EarlyStopping COMMA  TensorBoard EOM
from keras DOT models import load_model EOM
from keras import regularizers EOM
import pickle EOM
class LSTM: EOM
def buildModel( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
for l in range( PARERIGHT : EOM
if l  EQUAL  EQUAL  0: EOM
this_shape  EQUAL  ( PARERIGHT  EOM
else: EOM
this_shape  EQUAL  ( PARERIGHT  EOM
if l  EQUAL  EQUAL  lstm_layers - 1: EOM
this_return  EQUAL  False EOM
else: EOM
this_return  EQUAL  True EOM
model DOT add(lstm( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
for l in range( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def train( PARERIGHT : EOM
callback_earlystop  EQUAL  EarlyStopping( PARERIGHT  EOM
callback_tensorboard  EQUAL  TensorBoard(log_dir EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit(x_train COMMA  y_train COMMA  epochs EQUAL  COMMA  batch_size EQUAL  COMMA   validation_data EQUAL ( PARERIGHT  COMMA  callbacks EQUAL [] PARERIGHT  EOM
return model EOM
def saveModel( PARERIGHT : EOM
model DOT save( PARERIGHT  EOM
def loadModel( PARERIGHT : EOM
return load_model( PARERIGHT  EOM
import os EOM
global_model_version  EQUAL  58 EOM
global_batch_size  EQUAL  128 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  keras DOT optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Dense EOM
import numpy as np EOM
import time EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout COMMA  Merge EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
from keras DOT utils DOT visualize_util import plot COMMA  to_graph EOM
from keras DOT regularizers import l2 COMMA  activity_l2 EOM
import copy EOM
def design_model( PARERIGHT : EOM
model_A  EQUAL  Sequential( PARERIGHT  EOM
model_B  EQUAL  Sequential( PARERIGHT  EOM
model_Combine  EQUAL  Sequential( PARERIGHT  EOM
lstm_hidden_size  EQUAL  [] EOM
drop_out_rate  EQUAL  [] EOM
reg  EQUAL  [] EOM
areg  EQUAL  [] EOM
model_A DOT add(LSTM(lstm_hidden_size[] COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_A DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_A DOT add(Dense(1 COMMA  activation EQUAL  COMMA  W_regularizer EQUAL ( PARERIGHT  COMMA  activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
nn_hidden_size  EQUAL  [] EOM
nn_drop_rate  EQUAL  [] EOM
nn_reg  EQUAL  [] EOM
nn_areg  EQUAL  [] EOM
model_B DOT add(Dense(nn_hidden_size[] COMMA  input_dim EQUAL  COMMA  W_regularizer EQUAL ( PARERIGHT  COMMA  activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense(nn_hidden_size[] COMMA  W_regularizer EQUAL ( PARERIGHT  COMMA  activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense(1 COMMA  activation EQUAL  COMMA  W_regularizer EQUAL ( PARERIGHT  COMMA  activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_Combine DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model_Combine DOT add(Dense( PARERIGHT  PARERIGHT  EOM
graph  EQUAL  to_graph( PARERIGHT  EOM
graph DOT write_png( PARERIGHT  EOM
return model_Combine EOM
def design_model_nn( PARERIGHT : EOM
model_B  EQUAL  Sequential( PARERIGHT  EOM
nn_hidden_size  EQUAL  [] EOM
nn_drop_rate  EQUAL  [] EOM
nn_reg  EQUAL  [] EOM
nn_areg  EQUAL  [] EOM
model_B DOT add(Dense(nn_hidden_size[] COMMA  input_dim EQUAL  COMMA  W_regularizer EQUAL ( PARERIGHT  COMMA  activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense(nn_hidden_size[] COMMA  W_regularizer EQUAL ( PARERIGHT  COMMA  activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense(1 COMMA  activation EQUAL  COMMA  W_regularizer EQUAL ( PARERIGHT  COMMA  activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
graph  EQUAL  to_graph( PARERIGHT  EOM
graph DOT write_png( PARERIGHT  EOM
return model_B EOM
def design_model_lstm( PARERIGHT : EOM
model_A  EQUAL  Sequential( PARERIGHT  EOM
lstm_hidden_size  EQUAL  [] EOM
drop_out_rate  EQUAL  [] EOM
reg  EQUAL  [] EOM
areg  EQUAL  [] EOM
model_A DOT add(LSTM(lstm_hidden_size[] COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_A DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_A DOT add(Dense(1 COMMA  activation EQUAL  COMMA  W_regularizer EQUAL ( PARERIGHT  COMMA  activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
graph  EQUAL  to_graph( PARERIGHT  EOM
graph DOT write_png( PARERIGHT  EOM
return model_Afrom keras DOT models import Sequential EOM
from keras DOT preprocessing DOT image import ImageDataGenerator EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten EOM
from keras DOT layers DOT advanced_activations import PReLU EOM
from keras DOT layers DOT convolutional import Convolution2D COMMA  MaxPooling2D EOM
from keras DOT optimizers import SGD COMMA  Adadelta COMMA  Adagrad EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM COMMA  SimpleRNN COMMA  GRU EOM
from keras DOT layers import Merge EOM
from phcx import * EOM
import numpy as np EOM
import os EOM
from keras DOT utils import np_utils COMMA  generic_utils EOM
def lenet5( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Convolution2D(4 COMMA  5 COMMA  5 COMMA  border_mode EQUAL  COMMA put_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D(8 COMMA  3 COMMA  3 COMMA  subsample EQUAL ( PARERIGHT  COMMA border_mode EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D(16 COMMA  3 COMMA  3 COMMA  subsample EQUAL ( PARERIGHT  COMMA  border_mode EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
return model EOM
def get_data( PARERIGHT : EOM
if mode  EQUAL  EQUAL  : EOM
pulsar_file_base  EQUAL  filePath + EOM
rfi_file_base  EQUAL  filePath + EOM
else: EOM
pulsar_file_base  EQUAL  filePath + EOM
rfi_file_base  EQUAL  filePath + EOM
pulsar_files  EQUAL  os DOT listdir( PARERIGHT  EOM
rfi_files  EQUAL  os DOT listdir( PARERIGHT  EOM
cnn_input  EQUAL  np DOT empty((len( PARERIGHT +len( PARERIGHT  COMMA  1 COMMA  16 COMMA  64 PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
lstm_input  EQUAL  np DOT empty((len( PARERIGHT +len( PARERIGHT  COMMA  18 COMMA  64 PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
train_label  EQUAL  []*len( PARERIGHT  EOM
train_label DOT extend([]*len( PARERIGHT  PARERIGHT  EOM
trainlabel  EQUAL  np_utils DOT to_categorical( PARERIGHT  EOM
train_num  EQUAL  0 EOM
for filename in pulsar_files: EOM
cand  EQUAL  Candidate( PARERIGHT  EOM
cnn_input[]  EQUAL  np DOT resize(cand DOT subbands COMMA ( PARERIGHT  PARERIGHT  EOM
lstm_input[]  EQUAL  np DOT resize(cand DOT subints COMMA ( PARERIGHT  PARERIGHT  EOM
train_num + EQUAL 1 EOM
for filename in rfi_files: EOM
cand  EQUAL  Candidate( PARERIGHT  EOM
cnn_input[]  EQUAL  np DOT resize(cand DOT subbands COMMA ( PARERIGHT  PARERIGHT  EOM
lstm_input[]  EQUAL  np DOT resize(cand DOT subints COMMA ( PARERIGHT  PARERIGHT  EOM
train_num + EQUAL 1 EOM
return cnn_input COMMA lstm_input COMMA trainlabel EOM
def main( PARERIGHT : EOM
model_cnn  EQUAL  lenet5( PARERIGHT  EOM
model_lstm  EQUAL  Sequential( PARERIGHT  EOM
model_lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
merged  EQUAL  Merge( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
optimizer_ins  EQUAL  SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model_lstm DOT summary( PARERIGHT  EOM
filePath  EQUAL  EOM
train_data_cnn COMMA train_data_lstm COMMA train_label  EQUAL  get_data( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
test_data_cnn COMMA test_data_lstm COMMA test_label  EQUAL  get_data( PARERIGHT  EOM
model DOT evaluate( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
main( PARERIGHT from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout EOM
from keras DOT layers import LSTM COMMA  Concatenate COMMA  Dense COMMA  Input EOM
def VQA_MODEL( PARERIGHT : EOM
image_feature_size  EQUAL  4096 EOM
word_feature_size  EQUAL  300 EOM
number_of_LSTM  EQUAL  3 EOM
number_of_hidden_units_LSTM  EQUAL  512 EOM
max_length_questions  EQUAL  30 EOM
number_of_dense_layers  EQUAL  3 EOM
number_of_hidden_units  EQUAL  1024 EOM
activation_function  EQUAL  EOM
dropout_pct  EQUAL  0 DOT 5 EOM
in1  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
in2  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
a  EQUAL  Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
b  EQUAL  LSTM(number_of_hidden_units_LSTM COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
b  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
b  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Concatenate( PARERIGHT ( PARERIGHT  EOM
for _ in range( PARERIGHT : EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Activation( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
out  EQUAL  Activation( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
return model EOM
import os EOM
import re EOM
import csv EOM
import codecs EOM
import numpy as np EOM
import pandas as pd EOM
from nltk DOT corpus import stopwords EOM
from nltk DOT stem import SnowballStemmer EOM
from string import punctuation EOM
from gensim DOT models import KeyedVectors EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from keras DOT layers import Dense COMMA  Input COMMA  LSTM COMMA  Embedding COMMA  Dropout COMMA  Activation COMMA  Merge EOM
from keras DOT layers DOT merge import concatenate EOM
from keras DOT layers import Embedding COMMA  Dense COMMA  Dropout COMMA  Reshape COMMA  Merge COMMA  BatchNormalization COMMA  TimeDistributed COMMA  Lambda COMMA  Activation COMMA  LSTM COMMA  Flatten COMMA  Convolution1D COMMA  GRU COMMA  MaxPooling1D EOM
from keras DOT models import Model EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT callbacks import EarlyStopping COMMA  ModelCheckpoint EOM
from keras DOT models import Sequential EOM
import sys EOM
from keras DOT regularizers import l2 EOM
from keras DOT callbacks import Callback COMMA  ModelCheckpoint COMMA  EarlyStopping EOM
from keras import initializers EOM
from keras import backend as K EOM
from keras DOT optimizers import SGD EOM
from collections import defaultdict EOM
reload( PARERIGHT  EOM
sys DOT setdefaultencoding( PARERIGHT  EOM
BASE_DIR  EQUAL  EOM
EMBEDDING_FILE  EQUAL  BASE_DIR + EOM
TRAIN_DATA_FILE  EQUAL  EOM
TEST_DATA_FILE  EQUAL  EOM
MAX_SEQUENCE_LENGTH  EQUAL  50 EOM
MAX_NB_WORDS  EQUAL  200000 EOM
EMBEDDING_DIM  EQUAL  300 EOM
VALIDATION_SPLIT  EQUAL  0 DOT 1 EOM
num_lstm  EQUAL  250 EOM
num_dense  EQUAL  150 EOM
rate_drop_lstm  EQUAL  0 DOT 25 EOM
rate_drop_dense  EQUAL  0 DOT 25 EOM
word2vec  EQUAL  KeyedVectors DOT load_word2vec_format( PARERIGHT  EOM
def text_to_wordlist( PARERIGHT : EOM
text  EQUAL  text DOT lower( PARERIGHT  DOT split( PARERIGHT  EOM
if remove_stopwords: EOM
stops  EQUAL  set(stopwords DOT words( PARERIGHT  PARERIGHT  EOM
text  EQUAL  [] EOM
text  EQUAL   DOT join( PARERIGHT  EOM
text  EQUAL  re DOT sub( PARERIGHT  EOM
if stem_words: EOM
text  EQUAL  text DOT split( PARERIGHT  EOM
stemmer  EQUAL  SnowballStemmer( PARERIGHT  EOM
stemmed_words  EQUAL  [] EOM
text  EQUAL   DOT join( PARERIGHT  EOM
return( PARERIGHT  EOM
texts_1  EQUAL  [] EOM
texts_2  EQUAL  [] EOM
labels  EQUAL  [] EOM
f1  EQUAL  [] EOM
f2  EQUAL  [] EOM
f3  EQUAL  [] EOM
f4  EQUAL  [] EOM
f5  EQUAL  [] EOM
f6  EQUAL  [] EOM
f7  EQUAL  [] EOM
f8  EQUAL  [] EOM
f9  EQUAL [] EOM
f10  EQUAL  [] EOM
f11 EQUAL [] EOM
f12  EQUAL  [] EOM
f13  EQUAL  [] EOM
f14  EQUAL  [] EOM
f15  EQUAL  [] EOM
with codecs DOT open( PARERIGHT  as f: EOM
reader  EQUAL  csv DOT reader( PARERIGHT  EOM
header  EQUAL  next( PARERIGHT  EOM
for values in reader: EOM
texts_1 DOT append(text_to_wordlist( PARERIGHT  PARERIGHT  EOM
texts_2 DOT append(text_to_wordlist( PARERIGHT  PARERIGHT  EOM
labels DOT append(int( PARERIGHT  PARERIGHT  EOM
f1 DOT append(float( PARERIGHT  PARERIGHT  EOM
f2 DOT append(float( PARERIGHT  PARERIGHT  EOM
f3 DOT append(float( PARERIGHT  PARERIGHT  EOM
f4 DOT append(float( PARERIGHT  PARERIGHT  EOM
f5 DOT append(float( PARERIGHT  PARERIGHT  EOM
f6 DOT append(float( PARERIGHT  PARERIGHT  EOM
f7 DOT append(float( PARERIGHT  PARERIGHT  EOM
f8 DOT append(float( PARERIGHT  PARERIGHT  EOM
f9 DOT append(float( PARERIGHT  PARERIGHT  EOM
f10 DOT append(float( PARERIGHT  PARERIGHT  EOM
f11 DOT append(float( PARERIGHT  PARERIGHT  EOM
f12 DOT append(float( PARERIGHT  PARERIGHT  EOM
f13 DOT append(float( PARERIGHT  PARERIGHT  EOM
f14 DOT append(float( PARERIGHT  PARERIGHT  EOM
f15 DOT append(float( PARERIGHT  PARERIGHT  EOM
test_texts_1  EQUAL  [] EOM
test_texts_2  EQUAL  [] EOM
test_ids  EQUAL  [] EOM
tf1  EQUAL  [] EOM
tf2  EQUAL  [] EOM
tf3  EQUAL  [] EOM
tf4  EQUAL  [] EOM
tf5  EQUAL  [] EOM
tf6  EQUAL  [] EOM
tf7  EQUAL  [] EOM
tf8  EQUAL  [] EOM
tf9  EQUAL [] EOM
tf10  EQUAL  [] EOM
tf11 EQUAL [] EOM
tf12  EQUAL  [] EOM
tf13  EQUAL  [] EOM
tf14  EQUAL  [] EOM
tf15  EQUAL  [] EOM
with codecs DOT open( PARERIGHT  as f: EOM
reader  EQUAL  csv DOT reader( PARERIGHT  EOM
header  EQUAL  next( PARERIGHT  EOM
for values in reader: EOM
test_texts_1 DOT append(text_to_wordlist( PARERIGHT  PARERIGHT  EOM
test_texts_2 DOT append(text_to_wordlist( PARERIGHT  PARERIGHT  EOM
test_ids DOT append( PARERIGHT  EOM
tf1 DOT append(float( PARERIGHT  PARERIGHT  EOM
tf2 DOT append(float( PARERIGHT  PARERIGHT  EOM
tf3 DOT append(float( PARERIGHT  PARERIGHT  EOM
tf4 DOT append(float( PARERIGHT  PARERIGHT  EOM
tf5 DOT append(float( PARERIGHT  PARERIGHT  EOM
tf6 DOT append(float( PARERIGHT  PARERIGHT  EOM
tf7 DOT append(float( PARERIGHT  PARERIGHT  EOM
tf8 DOT append(float( PARERIGHT  PARERIGHT  EOM
tf9 DOT append(float( PARERIGHT  PARERIGHT  EOM
tf10 DOT append(float( PARERIGHT  PARERIGHT  EOM
tf11 DOT append(float( PARERIGHT  PARERIGHT  EOM
tf12 DOT append(float( PARERIGHT  PARERIGHT  EOM
tf13 DOT append(float( PARERIGHT  PARERIGHT  EOM
tf14 DOT append(float( PARERIGHT  PARERIGHT  EOM
tf15 DOT append(float( PARERIGHT  PARERIGHT  EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts( PARERIGHT  EOM
sequences_1  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
sequences_2  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
test_sequences_1  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
test_sequences_2  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
word_index  EQUAL  tokenizer DOT word_index EOM
data_1  EQUAL  pad_sequences( PARERIGHT  EOM
data_2  EQUAL  pad_sequences( PARERIGHT  EOM
labels  EQUAL  np DOT array( PARERIGHT  EOM
test_data_1  EQUAL  pad_sequences( PARERIGHT  EOM
test_data_2  EQUAL  pad_sequences( PARERIGHT  EOM
test_ids  EQUAL  np DOT array( PARERIGHT  EOM
f_tr  EQUAL  [] EOM
for i1 COMMA i2 COMMA i3 COMMA i4 COMMA i5 COMMA i6 COMMA i7 COMMA i8 COMMA i9 COMMA i10 COMMA i11 COMMA i12 COMMA i13 COMMA i14 COMMA i15 in zip( PARERIGHT : EOM
f_tr DOT append( PARERIGHT  EOM
f_te  EQUAL  [] EOM
for i1 COMMA i2 COMMA i3 COMMA i4 COMMA i5 COMMA i6 COMMA i7 COMMA i8 COMMA i9 COMMA i10 COMMA i11 COMMA i12 COMMA i13 COMMA i14 COMMA i15 in zip( PARERIGHT : EOM
f_te DOT append( PARERIGHT  EOM
f_tr  EQUAL  np DOT array( PARERIGHT  EOM
f_te  EQUAL  np DOT array( PARERIGHT  EOM
nb_words  EQUAL  min(MAX_NB_WORDS COMMA  len( PARERIGHT  PARERIGHT +1 EOM
gembeddings_index  EQUAL  {} EOM
with codecs DOT open( PARERIGHT  as f: EOM
for line in f: EOM
values  EQUAL  line DOT split( PARERIGHT  EOM
word  EQUAL  values[] EOM
gembedding  EQUAL  np DOT asarray( PARERIGHT  EOM
gembeddings_index[]  EQUAL  gembedding EOM
f DOT close( PARERIGHT  EOM
nb_words  EQUAL  len( PARERIGHT  EOM
g_word_embedding_matrix  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
for word COMMA  i in word_index DOT items( PARERIGHT : EOM
gembedding_vector  EQUAL  gembeddings_index DOT get( PARERIGHT  EOM
if gembedding_vector is not None: EOM
g_word_embedding_matrix[]  EQUAL  gembedding_vector EOM
embedding_matrix  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
for word COMMA  i in word_index DOT items( PARERIGHT : EOM
if word in word2vec DOT vocab: EOM
embedding_matrix[]  EQUAL  word2vec DOT word_vec( PARERIGHT  EOM
perm  EQUAL  np DOT random DOT permutation(len( PARERIGHT  PARERIGHT  EOM
idx_train  EQUAL  perm[] EOM
idx_val  EQUAL  perm[] EOM
data_1_train  EQUAL  np DOT vstack(( PARERIGHT  PARERIGHT  EOM
data_2_train  EQUAL  np DOT vstack(( PARERIGHT  PARERIGHT  EOM
labels_train  EQUAL  np DOT concatenate(( PARERIGHT  PARERIGHT  EOM
f_tr1  EQUAL  np DOT vstack(( PARERIGHT  PARERIGHT  EOM
data_1_val  EQUAL  np DOT vstack(( PARERIGHT  PARERIGHT  EOM
data_2_val  EQUAL  np DOT vstack(( PARERIGHT  PARERIGHT  EOM
labels_val  EQUAL  np DOT concatenate(( PARERIGHT  PARERIGHT  EOM
f_v  EQUAL  np DOT vstack(( PARERIGHT  PARERIGHT  EOM
weight_val  EQUAL  np DOT ones(len( PARERIGHT  PARERIGHT  EOM
if re_weight: EOM
weight_val * EQUAL  0 DOT 472001959 EOM
weight_val[]  EQUAL  1 DOT 309028344 EOM
weights  EQUAL  initializers DOT TruncatedNormal( PARERIGHT  EOM
bias  EQUAL  bias_initializer EQUAL  EOM
embedding_dim  EQUAL  EMBEDDING_DIM EOM
max_question_len  EQUAL  MAX_SEQUENCE_LENGTH EOM
model1  EQUAL  Sequential( PARERIGHT  EOM
model1 DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model1 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model2  EQUAL  Sequential( PARERIGHT  EOM
model2 DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model3  EQUAL  Sequential( PARERIGHT  EOM
model3 DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model4  EQUAL  Sequential( PARERIGHT  EOM
model4 DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model5  EQUAL  Sequential( PARERIGHT  EOM
model5 DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model5 DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model5 DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model5 DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model6  EQUAL  Sequential( PARERIGHT  EOM
model6 DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model6 DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model6 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model6 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model6 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model6 DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model6 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model6 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model6 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model6 DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model7  EQUAL  Sequential( PARERIGHT  EOM
model7 DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model7 DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model7 DOT add(Lambda(lambda x: K DOT max( PARERIGHT  COMMA  output_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model8  EQUAL  Sequential( PARERIGHT  EOM
model8 DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model8 DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model8 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model8 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model8 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model8 DOT add(Lambda(lambda x: K DOT max( PARERIGHT  COMMA  output_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model9  EQUAL  Sequential( PARERIGHT  EOM
model9 DOT add(Dense(num_dense COMMA  input_shape EQUAL ( PARERIGHT  COMMA  kernel_initializer EQUAL  COMMA  bias_initializer EQUAL  PARERIGHT  PARERIGHT  EOM
model9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
modela  EQUAL  Sequential( PARERIGHT  EOM
modela DOT add(Merge( PARERIGHT  PARERIGHT  EOM
modela DOT add(Dense( PARERIGHT  PARERIGHT  EOM
modela DOT add(Activation( PARERIGHT  PARERIGHT  EOM
modela DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
modela DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
modelb  EQUAL  Sequential( PARERIGHT  EOM
modelb DOT add(Merge( PARERIGHT  PARERIGHT  EOM
modelb DOT add(Dense( PARERIGHT  PARERIGHT  EOM
modelb DOT add(Activation( PARERIGHT  PARERIGHT  EOM
modelb DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
modelb DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
modelc  EQUAL  Sequential( PARERIGHT  EOM
modelc DOT add(Merge( PARERIGHT  PARERIGHT  EOM
modelc DOT add(Dense( PARERIGHT  PARERIGHT  EOM
modelc DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
modelc DOT add(Activation( PARERIGHT  PARERIGHT  EOM
modelc DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
modeld  EQUAL  Sequential( PARERIGHT  EOM
modeld DOT add(Merge( PARERIGHT  PARERIGHT  EOM
modeld DOT add(Dense( PARERIGHT  PARERIGHT  EOM
modeld DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
modeld DOT add(Activation( PARERIGHT  PARERIGHT  EOM
modeld DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
if re_weight: EOM
class_weight  EQUAL  {0: 1 DOT 309028344 COMMA  1: 0 DOT 472001959} EOM
else: EOM
class_weight  EQUAL  None EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
early_stopping  EQUAL EarlyStopping( PARERIGHT  EOM
bst_model_path  EQUAL  STAMP + EOM
model_checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
hist  EQUAL  model DOT fit([] COMMA  labels_train COMMA  \ata EQUAL ( PARERIGHT  COMMA  \chs EQUAL  COMMA  batch_size EQUAL  COMMA  shuffle EQUAL  COMMA  \ass_weight EQUAL  COMMA  callbacks EQUAL [] PARERIGHT  EOM
model DOT load_weights( PARERIGHT  EOM
bst_val_score  EQUAL  min( PARERIGHT  EOM
preds  EQUAL  model DOT predict( PARERIGHT  EOM
preds + EQUAL  model DOT predict( PARERIGHT  EOM
preds / EQUAL  2 EOM
submission  EQUAL  pd DOT DataFrame({:test_ids COMMA  :preds DOT ravel( PARERIGHT } PARERIGHT  EOM
submission DOT to_csv( PARERIGHT from keras DOT models import Sequential EOM
from keras import layers EOM
import numpy as np EOM
from six DOT moves import range EOM
import sys EOM
import os EOM
from keras DOT models import load_model EOM
import keras EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dense EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT layers import Bidirectional EOM
class SenseModel( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT lstmunits  EQUAL lstmunits EOM
self DOT lstmLayerNum  EQUAL  lstmLayerNum EOM
self DOT DenseUnits  EQUAL  DenseUnits EOM
self DOT charlenth  EQUAL  charlenth EOM
self DOT datalenth  EQUAL  datalenth EOM
self DOT buildmodel( PARERIGHT  EOM
def buildmodel( PARERIGHT : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add(layers DOT LSTM(self DOT lstmunits COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
self DOT model DOT add(Bidirectional(layers DOT LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Bidirectional(layers DOT LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
self DOT model DOT summary( PARERIGHT  EOM
def trainModel( PARERIGHT : EOM
for cur in range( PARERIGHT : EOM
self DOT model DOT fit( PARERIGHT  EOM
mdname EQUAL savename++str( PARERIGHT  EOM
self DOT model DOT save( PARERIGHT  EOM
if __name__  EQUAL  EQUAL : EOM
a  EQUAL  SenseModel( PARERIGHT from keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Dense EOM
import numpy as np EOM
import matplotlib DOT pyplot as plt EOM
import numpy as np EOM
import time EOM
import csv EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout COMMA Merge EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
import copy EOM
data_dim  EQUAL  1 EOM
timesteps  EQUAL  13 EOM
model_A  EQUAL  Sequential( PARERIGHT  EOM
model_B  EQUAL  Sequential( PARERIGHT  EOM
model_Combine  EQUAL  Sequential( PARERIGHT  EOM
lstm_hidden_size  EQUAL  [] EOM
drop_out_rate  EQUAL  [] EOM
model_A DOT add(LSTM(lstm_hidden_size[] COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_A DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_A DOT add(Dense( PARERIGHT  PARERIGHT  EOM
in_dimension  EQUAL  3 EOM
nn_hidden_size  EQUAL  [] EOM
nn_drop_rate  EQUAL  [] EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_Combine DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model_Combine DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_Combine DOT compile( PARERIGHT  EOM
from keras DOT utils DOT visualize_util import plot COMMA  to_graph EOM
graph  EQUAL  to_graph( PARERIGHT  EOM
graph DOT write_png( PARERIGHT import keras EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT optimizers import SGD EOM
import numpy as np EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  keras DOT utils DOT to_categorical(np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  COMMA  num_classes EQUAL  PARERIGHT  EOM
x_test  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_test  EQUAL  keras DOT utils DOT to_categorical(np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  COMMA  num_classes EQUAL  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
sgd  EQUAL  SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Conv1D COMMA  GlobalAveragePooling1D COMMA  MaxPooling1D EOM
seq_length  EQUAL  64 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D(64 COMMA  3 COMMA  activation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(GlobalAveragePooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Dense EOM
import numpy as np EOM
data_dim  EQUAL  16 EOM
timesteps  EQUAL  8 EOM
num_classes  EQUAL  10 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
from keras DOT preprocessing import sequence EOM
from keras DOT optimizers import SGD COMMA  RMSprop COMMA  Adagrad EOM
from keras DOT utils import np_utils EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Input EOM
from keras DOT models import Model EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import LSTM COMMA  GRU EOM
from keras DOT constraints import unitnorm EOM
from keras DOT layers DOT core import Reshape COMMA  Flatten COMMA  Merge EOM
from keras DOT layers DOT convolutional import Convolution2D COMMA  MaxPooling2D COMMA  Convolution1D COMMA  MaxPooling1D EOM
from sklearn DOT cross_validation import KFold EOM
from keras DOT callbacks import EarlyStopping EOM
from keras DOT regularizers import l2 EOM
import numpy as np EOM
from sklearn import cross_validation EOM
import math EOM
from keras_input_data import make_idx_data EOM
from load_vai import loadVAI EOM
import _pickle as cPickle EOM
from metrics import continuous_metrics EOM
def lstm_cnn( PARERIGHT : EOM
nb_filter  EQUAL  100 EOM
filter_length  EQUAL  5 EOM
pool_length  EQUAL  2 EOM
lstm_output_size  EQUAL  100 EOM
p  EQUAL  0 DOT 25 EOM
region_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
x  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
lstm_output  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
region_conv  EQUAL  Convolution1D( PARERIGHT ( PARERIGHT  EOM
region_max  EQUAL  MaxPooling1D( PARERIGHT ( PARERIGHT  EOM
region_vector  EQUAL  Flatten( PARERIGHT ( PARERIGHT  EOM
textvector  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
predictions  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
final_model  EQUAL  Model( PARERIGHT  EOM
model EQUAL final_model EOM
return model EOM
if __name__  EQUAL  EQUAL  : EOM
x  EQUAL  cPickle DOT load(open( PARERIGHT  PARERIGHT  EOM
revs COMMA  W COMMA  W2 COMMA  word_idx_map COMMA  vocab  EQUAL  x[] COMMA  x[] COMMA  x[] COMMA  x[] COMMA  x[] EOM
sentences EQUAL [] EOM
for rev in revs: EOM
sentence  EQUAL  rev[] EOM
sentences DOT append( PARERIGHT  EOM
idx_data  EQUAL  make_idx_data( PARERIGHT  EOM
column  EQUAL  loadVAI( PARERIGHT  EOM
irony EQUAL column EOM
batch_size  EQUAL  8 EOM
Y  EQUAL  np DOT array( PARERIGHT  EOM
Y  EQUAL  [] EOM
n_MAE EQUAL 0 EOM
n_Pearson_r EQUAL 0 EOM
n_Spearman_r EQUAL 0 EOM
n_MSE EQUAL 0 EOM
n_R2 EQUAL 0 EOM
n_MSE_sqrt EQUAL 0 EOM
SEED  EQUAL  42 EOM
for i in range( PARERIGHT : EOM
X_train COMMA  X_test COMMA  y_train COMMA  y_test  EQUAL  cross_validation DOT train_test_split( PARERIGHT  EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL lstm_cnn( PARERIGHT  EOM
early_stopping  EQUAL  EarlyStopping( PARERIGHT  EOM
result  EQUAL  model DOT fit(X_train COMMA  y_train COMMA  batch_size EQUAL  COMMA  nb_epoch EQUAL  COMMA validation_data EQUAL ( PARERIGHT  COMMA callbacks EQUAL [] PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
predict  EQUAL  model DOT predict( PARERIGHT  DOT reshape((1 COMMA  len( PARERIGHT  PARERIGHT  PARERIGHT [] EOM
estimate EQUAL continuous_metrics( PARERIGHT  EOM
n_MSE + EQUAL  estimate[] EOM
n_MAE + EQUAL  estimate[] EOM
n_Pearson_r + EQUAL  estimate[] EOM
n_R2 + EQUAL  estimate[] EOM
n_Spearman_r + EQUAL  estimate[] EOM
n_MSE_sqrt + EQUAL  estimate[] EOM
ndigit EQUAL 3 EOM
avg_MSE  EQUAL   round( PARERIGHT  EOM
avg_MAE  EQUAL   round( PARERIGHT  EOM
avg_Pearson_r  EQUAL   round( PARERIGHT  EOM
avg_R2  EQUAL   round( PARERIGHT  EOM
avg_Spearman_r  EQUAL   round( PARERIGHT  EOM
avg_MSE_sqrt  EQUAL   round( PARERIGHT  EOM
from visualize import plot_keras COMMA  draw_hist EOM
import keras EOM
from keras DOT utils import np_utils EOM
from trainer import Trainer EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense EOM
from keras DOT layers DOT core import Dropout EOM
from keras DOT layers DOT core import Activation EOM
from keras DOT layers DOT recurrent import LSTM EOM
class Validator( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT mdfile  EQUAL  EOM
self DOT t  EQUAL  Trainer( PARERIGHT  EOM
def accuracy( PARERIGHT : EOM
xv COMMA  yv  EQUAL  self DOT t DOT genValiData( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(256 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT load_weights( PARERIGHT  EOM
classes  EQUAL  model DOT predict_classes( PARERIGHT  EOM
acc  EQUAL  np_utils DOT accuracy( PARERIGHT  EOM
return acc EOM
if __name__  EQUAL  EQUAL  : EOM
v  EQUAL  Validator( PARERIGHT  EOM
v DOT accuracy( PARERIGHT import os EOM
global_model_version  EQUAL  35 EOM
global_batch_size  EQUAL  32 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_2  EQUAL  Sequential( PARERIGHT  EOM
branch_2 DOT add( PARERIGHT  EOM
branch_2 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_6  EQUAL  Sequential( PARERIGHT  EOM
branch_6 DOT add( PARERIGHT  EOM
branch_6 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
from __future__ import unicode_literals EOM
import logging EOM
from rasa_core DOT policies DOT keras_policy import KerasPolicy EOM
logger  EQUAL  logging DOT getLogger( PARERIGHT  EOM
class RestaurantPolicy( PARERIGHT : EOM
def model_architecture( PARERIGHT : EOM
from keras DOT layers import LSTM COMMA  Activation COMMA  Masking COMMA  Dense EOM
from keras DOT models import Sequential EOM
from keras DOT models import Sequential EOM
from keras DOT layers import \ EOM
Masking COMMA  LSTM COMMA  Dense COMMA  TimeDistributed COMMA  Activation EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if len( PARERIGHT   EQUAL             model DOT add(Masking( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             model DOT add(Masking(mask_value EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
raise ValueError(th of output_shape  EQUAL (len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
logger DOT debug(model DOT summary( PARERIGHT  PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Activation EOM
model  EQUAL  Sequential([] PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(32 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(32 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(32 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(32 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
from keras DOT layers import Merge EOM
left_branch  EQUAL  Sequential( PARERIGHT  EOM
left_branch DOT add(Dense( PARERIGHT  PARERIGHT  EOM
right_branch  EQUAL  Sequential( PARERIGHT  EOM
right_branch DOT add(Dense( PARERIGHT  PARERIGHT  EOM
final_model  EQUAL  Sequential( PARERIGHT  EOM
final_model DOT add( PARERIGHT  EOM
final_model DOT add(Dense( PARERIGHT  PARERIGHT from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout EOM
from keras DOT layers import LSTM COMMA  Merge COMMA  Dense EOM
def VQA_MODEL( PARERIGHT : EOM
image_feature_size  EQUAL  4096 EOM
word_feature_size  EQUAL  300 EOM
number_of_LSTM  EQUAL  3 EOM
number_of_hidden_units_LSTM  EQUAL  512 EOM
max_length_questions  EQUAL  30 EOM
number_of_dense_layers  EQUAL  3 EOM
number_of_hidden_units  EQUAL  1024 EOM
activation_function  EQUAL  EOM
dropout_pct  EQUAL  0 DOT 5 EOM
model_image  EQUAL  Sequential( PARERIGHT  EOM
model_image DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language  EQUAL  Sequential( PARERIGHT  EOM
model_language DOT add(LSTM(number_of_hidden_units_LSTM COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
for _ in xrange( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
from keras import Sequential EOM
from keras DOT constraints import nonneg EOM
from keras DOT layers import LSTM COMMA  Dropout COMMA  Dense COMMA  Conv1D COMMA  MaxPooling1D COMMA  GaussianNoise EOM
from keras DOT models import model_from_json EOM
def save_model( PARERIGHT : EOM
model_json  EQUAL  model DOT to_json( PARERIGHT  EOM
with open( PARERIGHT  as json_file: EOM
json_file DOT write( PARERIGHT  EOM
model DOT save_weights( PARERIGHT  EOM
def load_model( PARERIGHT : EOM
json_file  EQUAL  open( PARERIGHT  EOM
loaded_model_json  EQUAL  json_file DOT read( PARERIGHT  EOM
json_file DOT close( PARERIGHT  EOM
loaded_model  EQUAL  model_from_json( PARERIGHT  EOM
loaded_model DOT load_weights( PARERIGHT  EOM
return loaded_model EOM
def lstm_sequence_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(150 COMMA nput_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  PARERIGHT  PARERIGHT  EOM
model DOT add(GaussianNoise( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm_simple_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(75 COMMA nput_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(1 COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def stateful_lstm_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(75 COMMA nput_shape EQUAL ( PARERIGHT  COMMA batch_size EQUAL  COMMA stateful EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(1 COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def regular_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(150 COMMA activation EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def conv_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D(filters EQUAL  COMMA kernel_size EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT applications DOT vgg19 import VGG19 EOM
from keras DOT preprocessing import image EOM
from keras DOT applications DOT vgg19 import preprocess_input COMMA  decode_predictions EOM
from keras DOT models import Model EOM
import numpy as np EOM
from keras DOT models import load_model EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Embedding EOM
from keras DOT layers import Convolution2D COMMA  MaxPooling2D COMMA  TimeDistributed EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten COMMA  TimeDistributedDense EOM
preds  EQUAL  np DOT zeros(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(TimeDistributed(Convolution2D( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT   COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Activation( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Convolution2D( PARERIGHT  COMMA   name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Activation( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dropout( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Convolution2D( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Activation( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Convolution2D( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Activation( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dropout( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Flatten( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Activation( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dropout( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT load_weights( PARERIGHT  EOM
cnn_model  EQUAL  load_model( PARERIGHT  EOM
for l in model DOT layers: EOM
X_train  EQUAL  np DOT random DOT rand( PARERIGHT  EOM
y_train  EQUAL  np DOT random DOT rand( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten EOM
from keras DOT layers import Convolution2D COMMA  MaxPooling2D EOM
from keras DOT layers import LSTM COMMA  TimeDistributed COMMA  Embedding EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  LSTM EOM
tsteps  EQUAL  1 EOM
batch_size  EQUAL  1 EOM
lstm_embedding_size  EQUAL  64 EOM
lstm_target_size  EQUAL  2 EOM
lstm_model  EQUAL  Sequential( PARERIGHT  EOM
lstm_model DOT add(Embedding(40*60 COMMA  128 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(LSTM(lstm_embedding_size COMMA tch_input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA stateful EQUAL  PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
lstm_model DOT compile( PARERIGHT  EOM
from keras DOT applications DOT resnet50 import ResNet50 EOM
from keras DOT applications DOT resnet50 import preprocess_input COMMA  decode_predictions EOM
img_path  EQUAL  EOM
img  EQUAL  image DOT load_img(img_path COMMA  target_size EQUAL ( PARERIGHT  PARERIGHT  EOM
x  EQUAL  image DOT img_to_array( PARERIGHT  EOM
x  EQUAL  np DOT expand_dims( PARERIGHT  EOM
x  EQUAL  preprocess_input( PARERIGHT  EOM
base_model  EQUAL  ResNet50( PARERIGHT  EOM
extract_model  EQUAL  Model(input EQUAL  COMMA  output EQUAL ( PARERIGHT  DOT output PARERIGHT  EOM
preds  EQUAL  extract_model DOT predict( PARERIGHT  EOM
for layer in base_model DOT layers: EOM
from keras DOT models import Model COMMA  Sequential EOM
from keras import layers EOM
from keras import backend as K EOM
from keras DOT callbacks import ModelCheckpoint EOM
from keras import callbacks EOM
from keras DOT callbacks import TensorBoard EOM
from keras import metrics EOM
from keras import optimizers EOM
def model_v34( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(52 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v35( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(52 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v38( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(52 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v39( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v40( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v41( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v42( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v43( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v44( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v45( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v46( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v47( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v48( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v49( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v50( PARERIGHT : EOM
model  EQUAL  model_v49( PARERIGHT  EOM
return model EOM
def model_v51( PARERIGHT : EOM
model  EQUAL  model_v49( PARERIGHT  EOM
return model EOM
def model_v52( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v53( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(256 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v54( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(256 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return modelfrom keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras import backend as K EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Conv1D COMMA  MaxPooling1D EOM
from keras DOT datasets import imdb EOM
import numpy as np EOM
def __init__( PARERIGHT : EOM
self DOT max_features  EQUAL  20000 EOM
self DOT maxlen  EQUAL  5 EOM
self DOT embedding_size  EQUAL  128 EOM
self DOT kernel_size  EQUAL  5 EOM
self DOT filters  EQUAL  64 EOM
self DOT pool_size  EQUAL  4 EOM
self DOT lstm_output_size  EQUAL  70 EOM
self DOT batch_size  EQUAL  30 EOM
self DOT epochs  EQUAL  2 EOM
def make_array( PARERIGHT : EOM
x_input  EQUAL  np DOT array( PARERIGHT  EOM
x_input  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
output_array  EQUAL  model DOT predict( PARERIGHT  EOM
def run( PARERIGHT : EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D(10 COMMA  3 COMMA  strides EQUAL  COMMA  activation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
result_  EQUAL  model DOT predict( PARERIGHT  EOM
from keras import backend as K EOM
layer_output_0  EQUAL  K DOT function( PARERIGHT  EOM
layer_output  EQUAL  layer_output_0( PARERIGHT  EOM
layer_output_0  EQUAL  K DOT function( PARERIGHT  EOM
layer_output  EQUAL  layer_output_0( PARERIGHT  EOM
layer_output_0  EQUAL  K DOT function( PARERIGHT  EOM
layer_output  EQUAL  layer_output_0( PARERIGHT  EOM
layer_output_0  EQUAL  K DOT function( PARERIGHT  EOM
layer_output  EQUAL  layer_output_0( PARERIGHT  EOM
def run1( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
def build_model2( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(nput_shape EQUAL ( PARERIGHT  COMMA output_dim EQUAL [] COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def build_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(4 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Embedding COMMA  Activation EOM
from keras DOT layers import LSTM COMMA  Bidirectional EOM
from theano DOT scalar import float32 EOM
import numpy as np EOM
def lstm_embedding_empty( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm_embedding_pretrained( PARERIGHT : EOM
embedding_dimension  EQUAL  len( PARERIGHT  EOM
number_of_words  EQUAL  len(index_to_embedding_mapping DOT keys( PARERIGHT  PARERIGHT  EOM
embedding_matrix  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
for index COMMA  embedding in index_to_embedding_mapping DOT items( PARERIGHT : EOM
embedding_matrix[]  EQUAL  embedding EOM
model  EQUAL  Sequential( PARERIGHT  EOM
embedding_layer  EQUAL  Embedding( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lst_stacked( PARERIGHT : EOM
embedding_dimension  EQUAL  len( PARERIGHT  EOM
number_of_words  EQUAL  len(index_to_embedding_mapping DOT keys( PARERIGHT  PARERIGHT  EOM
embedding_matrix  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
for index COMMA  embedding in index_to_embedding_mapping DOT items( PARERIGHT : EOM
embedding_matrix[]  EQUAL  embedding EOM
model  EQUAL  Sequential( PARERIGHT  EOM
embedding_layer  EQUAL  Embedding( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def blstm( PARERIGHT : EOM
embedding_dimension  EQUAL  len( PARERIGHT  EOM
number_of_words  EQUAL  len(index_to_embedding_mapping DOT keys( PARERIGHT  PARERIGHT  EOM
embedding_matrix  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
for index COMMA  embedding in index_to_embedding_mapping DOT items( PARERIGHT : EOM
embedding_matrix[]  EQUAL  embedding EOM
model  EQUAL  Sequential( PARERIGHT  EOM
embedding_layer  EQUAL  Embedding( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
import Clustering EOM
import Prediction EOM
import numpy as np EOM
from sklearn import preprocessing EOM
from keras DOT wrappers DOT scikit_learn import  KerasClassifier EOM
from keras DOT utils import np_utils EOM
from sklearn DOT cross_validation import train_test_split EOM
import numpy EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
import keras EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT optimizers import SGD EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
epochs  EQUAL  15 EOM
batch_size  EQUAL  100 EOM
latent_dim  EQUAL  50 EOM
classes  EQUAL  Clustering DOT unique_labels EOM
input_dim  EQUAL  Prediction DOT num_input_features EOM
def baseline_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(100 COMMA  activation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(len( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
x_train  EQUAL  np DOT asarray( PARERIGHT  EOM
y_train  EQUAL  Clustering DOT labels EOM
encoder  EQUAL  preprocessing DOT LabelEncoder( PARERIGHT  EOM
encoder DOT fit( PARERIGHT  EOM
encoder_Y  EQUAL  encoder DOT transform( PARERIGHT  EOM
dummy_y  EQUAL  np_utils DOT to_categorical( PARERIGHT  EOM
estimator  EQUAL  KerasClassifier( PARERIGHT  EOM
X_train COMMA  X_test COMMA  Y_train COMMA  Y_test  EQUAL  train_test_split( PARERIGHT  EOM
estimator DOT fit( PARERIGHT  EOM
from typing import List COMMA  Tuple EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from keras DOT layers import Embedding COMMA  Dense COMMA  Dropout EOM
from keras DOT layers import LSTM as KLSTM EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
from keras DOT models import Sequential EOM
import keras DOT utils as ku EOM
import keras EOM
import pathlib EOM
import numpy as np EOM
class LSTM: EOM
def __init__( PARERIGHT : EOM
self DOT dataset_preperation( PARERIGHT  EOM
self DOT tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
self DOT model: keras DOT engine DOT sequential DOT Sequential  EQUAL  None EOM
self DOT predictors: List[]]  EQUAL  None EOM
self DOT label: List[]  EQUAL  None EOM
self DOT max_sequence_len: int  EQUAL  None EOM
self DOT total_words: int  EQUAL  None EOM
def load_corpus( PARERIGHT  -> str: EOM
corpus_path  EQUAL  pathlib DOT Path( PARERIGHT  EOM
with corpus_path DOT open( PARERIGHT  as corpus_file: EOM
corpus  EQUAL  corpus_file DOT read( PARERIGHT  EOM
return corpus EOM
def dataset_preperation( PARERIGHT  -> Tuple[]] COMMA  List[] COMMA  EOM
int COMMA  int]: EOM
corpus  EQUAL  self DOT load_corpus( PARERIGHT  EOM
corpus  EQUAL  corpus DOT lower( PARERIGHT  DOT split( PARERIGHT  EOM
self DOT tokenizer DOT fit_on_texts( PARERIGHT  EOM
total_words  EQUAL  len( PARERIGHT  + 1 EOM
input_sequences  EQUAL  list( PARERIGHT  EOM
for line in corpus: EOM
token_list  EQUAL  self DOT tokenizer DOT texts_to_sequences( PARERIGHT [] EOM
for i in range(1 COMMA  len( PARERIGHT  PARERIGHT : EOM
n_gram_sequence  EQUAL  token_list[] EOM
input_sequences DOT append( PARERIGHT  EOM
max_sequence_len  EQUAL  max([] PARERIGHT  EOM
input_sequences  EQUAL  np DOT array(pad_sequences( PARERIGHT  PARERIGHT  EOM
predictors COMMA  label  EQUAL  input_sequences[] COMMA  input_sequences[] EOM
label  EQUAL  ku DOT to_categorical( PARERIGHT  EOM
self DOT predictors  EQUAL  predictors EOM
self DOT label  EQUAL  label EOM
self DOT max_sequence_len  EQUAL  max_sequence_len EOM
self DOT total_words  EQUAL  total_words EOM
return predictors COMMA  label COMMA  max_sequence_len COMMA  total_words EOM
def create_model( PARERIGHT  -> keras DOT engine DOT sequential DOT Sequential: EOM
input_len  EQUAL  self DOT max_sequence_len - 1 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(KLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT model  EQUAL  model EOM
model_json  EQUAL  model DOT to_json( PARERIGHT  EOM
json_path  EQUAL  EOM
with open(str( PARERIGHT  COMMA   PARERIGHT  as json_file: EOM
json_file DOT write( PARERIGHT  EOM
weights_path  EQUAL  EOM
model DOT save_weights(str( PARERIGHT  PARERIGHT  EOM
model_path  EQUAL  EOM
model DOT save(str( PARERIGHT  PARERIGHT  EOM
other_data  EQUAL  EOM
with open( PARERIGHT  as data_file: EOM
data_file DOT write( PARERIGHT  EOM
data_file DOT write( PARERIGHT  EOM
def train( PARERIGHT  -> None: EOM
self DOT model DOT fit( PARERIGHT  EOM
def generate_text( PARERIGHT : EOM
for j in range( PARERIGHT : EOM
token_list  EQUAL  self DOT tokenizer DOT texts_to_sequences( PARERIGHT [] EOM
token_list  EQUAL  pad_sequences( PARERIGHT  EOM
predicted  EQUAL  self DOT model DOT predict_classes( PARERIGHT  EOM
output_word  EQUAL  EOM
for word COMMA  index in self DOT tokenizer DOT word_index DOT items( PARERIGHT : EOM
if index  EQUAL  EQUAL  predicted: EOM
output_word  EQUAL  word EOM
break EOM
seed_text + EQUAL   + output_word EOM
return seed_text EOM
if __name__  EQUAL  EQUAL  : EOM
corpus_path  EQUAL  pathlib DOT Path( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT  EOM
lstm DOT dataset_preperation( PARERIGHT  EOM
lstm DOT create_model( PARERIGHT  EOM
text  EQUAL  lstm DOT generate_text( PARERIGHT  EOM
text  EQUAL  lstm DOT generate_text( PARERIGHT  EOM
text  EQUAL  lstm DOT generate_text( PARERIGHT  EOM
text  EQUAL  lstm DOT generate_text( PARERIGHT  EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dropout EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers import GlobalAveragePooling1D EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
return model EOM
def LSTM_Dropout_Sentence_Classifier( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
return model EOM
def CNN_LSTM_Sentence_Classifier( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
return model EOM
def CNN_Sentence_Classifier( PARERIGHT : EOM
seq_length  EQUAL  max_review_length EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(64 COMMA  3 COMMA  activation EQUAL  COMMA  padding EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(GlobalAveragePooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
return model EOM
def Stacked_LSTM_Sentence_Classifier( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
from __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
from __future__ import unicode_literals EOM
import logging EOM
from rasa_core DOT policies DOT keras_policy import KerasPolicy EOM
logger  EQUAL  logging DOT getLogger( PARERIGHT  EOM
class RestaurantPolicy( PARERIGHT : EOM
def model_architecture( PARERIGHT : EOM
from keras DOT layers import LSTM COMMA  Activation COMMA  Masking COMMA  Dense EOM
from keras DOT models import Sequential EOM
from keras DOT models import Sequential EOM
from keras DOT layers import \ EOM
Masking COMMA  LSTM COMMA  Dense COMMA  TimeDistributed COMMA  Activation EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if len( PARERIGHT   EQUAL             model DOT add(Masking( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             model DOT add(Masking(mask_value EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
raise ValueError(th of output_shape  EQUAL (len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
logger DOT debug(model DOT summary( PARERIGHT  PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM COMMA  Bidirectional EOM
from keras DOT callbacks import ModelCheckpoint EOM
from keras DOT utils import np_utils EOM
from keras DOT optimizers import SGD COMMA  Nadam EOM
def get_lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(64 COMMA  return_sequences EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  Nadam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model COMMA optfrom __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
from __future__ import unicode_literals EOM
import logging EOM
from rasa_core DOT policies DOT keras_policy import KerasPolicy EOM
logger  EQUAL  logging DOT getLogger( PARERIGHT  EOM
class nuRobotPolicy( PARERIGHT : EOM
def model_architecture( PARERIGHT : EOM
from keras DOT layers import LSTM COMMA  Activation COMMA  Masking COMMA  Dense EOM
from keras DOT models import Sequential EOM
from keras DOT models import Sequential EOM
from keras DOT layers import \ EOM
Masking COMMA  LSTM COMMA  Dense COMMA  TimeDistributed COMMA  Activation EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if len( PARERIGHT   EQUAL             model DOT add(Masking( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             model DOT add(Masking(mask_value EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
raise ValueError(th of output_shape  EQUAL (len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
logger DOT debug(model DOT summary( PARERIGHT  PARERIGHT  EOM
return model EOM
from keras DOT layers import Embedding COMMA  LSTM COMMA  TimeDistributed COMMA  Dense COMMA  Dropout EOM
from keras DOT layers DOT wrappers import Bidirectional EOM
from keras DOT optimizers import Adam EOM
from keras DOT models import load_model as keras_load_model EOM
from  DOT  import constant EOM
class Model( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT  EOM
model DOT add(Bidirectional( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT  EOM
model DOT add(Bidirectional( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT  EOM
model DOT add(Bidirectional( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT model  EQUAL  model EOM
def save_model( PARERIGHT : EOM
model DOT save( PARERIGHT  EOM
def load_model( PARERIGHT : EOM
return keras_load_model( PARERIGHT from keras DOT models import Model COMMA  Sequential COMMA  load_model EOM
from keras DOT optimizers import Nadam COMMA  SGD COMMA  Adam EOM
from keras DOT layers import Conv2D COMMA  MaxPooling2D COMMA  Input COMMA  Conv1D COMMA  MaxPooling3D COMMA  Conv3D COMMA  ConvLSTM2D COMMA  LSTM COMMA  AveragePooling2D EOM
from keras DOT layers import Input COMMA  LSTM COMMA  Embedding COMMA  Dense COMMA  LeakyReLU COMMA  Flatten COMMA  Dropout COMMA  SeparableConv2D COMMA  GlobalAveragePooling3D EOM
from keras DOT layers import TimeDistributed COMMA  BatchNormalization EOM
from keras import optimizers EOM
from keras DOT callbacks import EarlyStopping EOM
from keras import regularizers EOM
class ResearchModels( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT frames  EQUAL  frames EOM
self DOT saved_model  EQUAL  saved_model EOM
self DOT image_dim  EQUAL  tuple( PARERIGHT  EOM
self DOT input_shape  EQUAL  ( PARERIGHT  + tuple( PARERIGHT  EOM
self DOT print_model  EQUAL  print_model EOM
metrics  EQUAL  [] EOM
if self DOT saved_model is not None: EOM
self DOT model  EQUAL  load_model( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  self DOT CNN_LSTM( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  self DOT SepCNN_LSTM( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  self DOT CONVLSTM( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  self DOT CONV3D( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  self DOT CONVLSTM_CONV3D( PARERIGHT  EOM
else: EOM
sys DOT exit( PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
if self DOT print_model  EQUAL  EQUAL  True: EOM
def CNN_LSTM( PARERIGHT : EOM
frames_input  EQUAL  Input( PARERIGHT  EOM
vision_model  EQUAL  Sequential( PARERIGHT  EOM
vision_model DOT add(Conv2D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  COMMA  padding EQUAL  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
vision_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
vision_model DOT add(MaxPooling2D(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vision_model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
vision_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
fc2  EQUAL  Dense(64 COMMA  activation EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
out  EQUAL  Flatten( PARERIGHT ( PARERIGHT  EOM
out  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
output  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
CNN_LSTM  EQUAL  Model( PARERIGHT  EOM
return CNN_LSTM EOM
def SepCNN_LSTM( PARERIGHT : EOM
frames_input  EQUAL  Input( PARERIGHT  EOM
vision_model  EQUAL  Sequential( PARERIGHT  EOM
vision_model DOT add(SeparableConv2D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  COMMA  padding EQUAL  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
vision_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
vision_model DOT add(MaxPooling2D(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vision_model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
vision_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
fc2  EQUAL  Dense(64 COMMA  activation EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
out  EQUAL  Flatten( PARERIGHT ( PARERIGHT  EOM
out  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
output  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
CNN_LSTM  EQUAL  Model( PARERIGHT  EOM
return CNN_LSTM EOM
def CONVLSTM( PARERIGHT : EOM
CONVLSTM  EQUAL  Sequential( PARERIGHT  EOM
CONVLSTM DOT add(ConvLSTM2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA input_shape EQUAL  COMMA adding EQUAL  COMMA  return_sequences EQUAL  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
CONVLSTM DOT add(ConvLSTM2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA adding EQUAL  COMMA  return_sequences EQUAL  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
CONVLSTM DOT add(ConvLSTM2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA adding EQUAL  COMMA  return_sequences EQUAL  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
CONVLSTM DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
CONVLSTM DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
CONVLSTM DOT add(Dense( PARERIGHT  PARERIGHT  EOM
CONVLSTM DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
CONVLSTM DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return CONVLSTM EOM
def CONV3D( PARERIGHT : EOM
CONV3D  EQUAL  Sequential( PARERIGHT  EOM
CONV3D DOT add(Conv3D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
CONV3D DOT add(Conv3D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
CONV3D DOT add(Conv3D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
CONV3D DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA border_mode EQUAL  PARERIGHT  PARERIGHT  EOM
CONV3D DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
CONV3D DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
CONV3D DOT add(Dense( PARERIGHT  PARERIGHT  EOM
CONV3D DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
CONV3D DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return CONV3D EOM
def CONVLSTM_CONV3D( PARERIGHT : EOM
CONVLSTM_CON3D  EQUAL  Sequential( PARERIGHT  EOM
CONVLSTM_CON3D DOT add(ConvLSTM2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA input_shape EQUAL  COMMA adding EQUAL  COMMA  return_sequences EQUAL  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
CONVLSTM_CON3D DOT add(ConvLSTM2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA adding EQUAL  COMMA  return_sequences EQUAL  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
CONVLSTM_CON3D DOT add(Conv3D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
CONVLSTM_CON3D DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
CONVLSTM_CON3D DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
CONVLSTM_CON3D DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
CONVLSTM_CON3D DOT add(Dense( PARERIGHT  PARERIGHT  EOM
CONVLSTM_CON3D DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
CONVLSTM_CON3D DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return CONVLSTM_CON3Dfrom keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
def lstm_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(input_shape EQUAL ( PARERIGHT  COMMA  units EQUAL  COMMA  return_sequences  EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return modelimport os EOM
global_model_version  EQUAL  56 EOM
global_batch_size  EQUAL  128 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  keras DOT optimizers DOT SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import tensorflow as tf EOM
import keras EOM
from keras DOT utils import to_categorical EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Flatten EOM
from keras DOT callbacks import ModelCheckpoint EOM
from keras DOT callbacks import TensorBoard EOM
from keras import regularizers EOM
from keras import backend as KTF EOM
from sklearn DOT model_selection import train_test_split EOM
import numpy as np EOM
import pandas as pd EOM
class model( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT X  EQUAL  np DOT load( PARERIGHT  EOM
self DOT Y  EQUAL  np DOT load( PARERIGHT  EOM
self DOT X  EQUAL  self DOT X[] EOM
self DOT Y  EQUAL  self DOT Y[] EOM
self DOT lstm_size  EQUAL  lstm_size EOM
self DOT dropout  EQUAL  dropout EOM
self DOT batch_size  EQUAL  batch_size EOM
self DOT epochs  EQUAL  epochs EOM
self DOT train_X COMMA  self DOT val_X COMMA  self DOT train_Y COMMA  self DOT val_Y  EQUAL  train_test_split( PARERIGHT  EOM
self DOT n_words  EQUAL  791771 EOM
def model_architecture( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(self DOT n_words COMMA  activation EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
tensorboard  EQUAL  TensorBoard( PARERIGHT  EOM
filepath  EQUAL  EOM
checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
model DOT fit(self DOT train_X COMMA  self DOT train_Y COMMA  epochs EQUAL  COMMA  batch_size EQUAL  COMMA allbacks EQUAL [] COMMA  validation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
model  EQUAL  model( PARERIGHT  EOM
model DOT model_architecture( PARERIGHT from keras DOT models import Sequential EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import RepeatVector EOM
from keras DOT layers import TimeDistributed EOM
def define_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(RepeatVector( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT preprocessing DOT image import ImageDataGenerator EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten EOM
from keras DOT layers DOT advanced_activations import PReLU EOM
from keras DOT layers DOT convolutional import Convolution2D COMMA  MaxPooling2D EOM
from keras DOT optimizers import SGD COMMA  Adadelta COMMA  Adagrad EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
from keras DOT layers import LSTM COMMA  SimpleRNN COMMA  GRU EOM
from keras DOT layers import Merge EOM
from phcx import * EOM
import numpy as np EOM
import os EOM
from keras DOT utils import np_utils COMMA  generic_utils EOM
def lenet5( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Convolution2D(4 COMMA  5 COMMA  5 COMMA  border_mode EQUAL  COMMA put_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D(8 COMMA  3 COMMA  3 COMMA  subsample EQUAL ( PARERIGHT  COMMA border_mode EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D(16 COMMA  3 COMMA  3 COMMA  subsample EQUAL ( PARERIGHT  COMMA  border_mode EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(128 COMMA  input_dim EQUAL ( PARERIGHT  COMMA  init EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def get_data( PARERIGHT : EOM
if mode  EQUAL  EQUAL  : EOM
pulsar_file_base  EQUAL  filePath + EOM
rfi_file_base  EQUAL  filePath + EOM
else: EOM
pulsar_file_base  EQUAL  filePath + EOM
rfi_file_base  EQUAL  filePath + EOM
pulsar_files  EQUAL  os DOT listdir( PARERIGHT  EOM
rfi_files  EQUAL  os DOT listdir( PARERIGHT  EOM
cnn_input  EQUAL  np DOT empty((len( PARERIGHT +len( PARERIGHT  COMMA  1 COMMA  16 COMMA  64 PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
lstm_input  EQUAL  np DOT empty((len( PARERIGHT +len( PARERIGHT  COMMA  18 COMMA  64 PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
train_label  EQUAL  []*len( PARERIGHT  EOM
train_label DOT extend([]*len( PARERIGHT  PARERIGHT  EOM
trainlabel  EQUAL  np_utils DOT to_categorical( PARERIGHT  EOM
train_num  EQUAL  0 EOM
for filename in pulsar_files: EOM
cand  EQUAL  Candidate( PARERIGHT  EOM
cnn_input[]  EQUAL  np DOT resize(cand DOT subbands COMMA ( PARERIGHT  PARERIGHT  EOM
lstm_input[]  EQUAL  np DOT resize(cand DOT subints COMMA ( PARERIGHT  PARERIGHT  EOM
train_num + EQUAL 1 EOM
for filename in rfi_files: EOM
cand  EQUAL  Candidate( PARERIGHT  EOM
cnn_input[]  EQUAL  np DOT resize(cand DOT subbands COMMA ( PARERIGHT  PARERIGHT  EOM
lstm_input[]  EQUAL  np DOT resize(cand DOT subints COMMA ( PARERIGHT  PARERIGHT  EOM
train_num + EQUAL 1 EOM
return cnn_input COMMA lstm_input COMMA trainlabel EOM
def main( PARERIGHT : EOM
model_cnn  EQUAL  lenet5( PARERIGHT  EOM
model_lstm  EQUAL  Sequential( PARERIGHT  EOM
model_lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
merged  EQUAL  Merge( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
optimizer_ins  EQUAL  SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model_lstm DOT summary( PARERIGHT  EOM
filePath  EQUAL  EOM
train_data_cnn COMMA train_data_lstm COMMA train_label  EQUAL  get_data( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
test_data_cnn COMMA test_data_lstm COMMA test_label  EQUAL  get_data( PARERIGHT  EOM
model DOT evaluate( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
main( PARERIGHT from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
X_train COMMA  y_train COMMA  X_test COMMA  y_test COMMA p  EQUAL  lstm DOT load_data( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
start  EQUAL  time DOT time( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
predictions  EQUAL  lstm DOT predict_sequences_multiple( PARERIGHT  EOM
lstm DOT plot_results_multiple( PARERIGHT  EOM
import numpy EOM
from sys import argv EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT callbacks import ModelCheckpoint EOM
from keras DOT utils import np_utils EOM
SEQ_LEN  EQUAL  12 EOM
class PasswordLSTM: EOM
def __init__( PARERIGHT : EOM
self DOT SEQ_LEN  EQUAL  SEQ_LEN EOM
self DOT X  EQUAL  X EOM
self DOT y  EQUAL  y EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT filepath EQUAL  % ( PARERIGHT  EOM
self DOT epochs  EQUAL  50 EOM
self DOT batch_size  EQUAL  50 EOM
self DOT monitor  EQUAL  EOM
self DOT verbose  EQUAL  1 EOM
self DOT save_best_only EQUAL True EOM
self DOT mode EQUAL  EOM
self DOT checkpoint  EQUAL  None EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model_built  EQUAL  False EOM
def build_model( PARERIGHT : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
self DOT model_built  EQUAL  True EOM
def predict( PARERIGHT : EOM
return self DOT model DOT predict( PARERIGHT  EOM
def load_weights( PARERIGHT : EOM
if ( PARERIGHT : EOM
self DOT build_model( PARERIGHT  EOM
self DOT model DOT load_weights( PARERIGHT  EOM
def fit( PARERIGHT : EOM
self DOT checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
self DOT model DOT fit( PARERIGHT from keras import backend as K EOM
from keras import layers EOM
from keras import regularizers EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT models import load_model EOM
from keras DOT models import Sequential EOM
from keras DOT utils import plot_model EOM
def lstmModel( PARERIGHT : EOM
name  EQUAL   + activation EOM
lstm  EQUAL  LSTM(n_channels COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
folder    EQUAL  EOM
name_h5   EQUAL  folder + name + EOM
name_png  EQUAL  folder + name + EOM
plot_model( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
return model COMMA  name EOM
from keras DOT utils import np_utils EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Convolution1D COMMA  MaxPooling1D EOM
from keras DOT layers import LSTM COMMA  GRU COMMA  SimpleRNN EOM
from keras DOT layers import Input COMMA  Bidirectional EOM
def build_lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def build_cnn( PARERIGHT  : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def build_cnn_lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def build_bidirectional_lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return modelfrom __future__ import print_function EOM
import numpy as np EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Lambda EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Convolution1D COMMA MaxPooling1D COMMA  Flatten EOM
from keras DOT datasets import imdb EOM
from keras import backend as K EOM
from sklearn DOT cross_validation import train_test_split EOM
import pandas as pd EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from sklearn DOT preprocessing import Normalizer EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Convolution1D COMMA  Dense COMMA  Dropout COMMA  Flatten COMMA  MaxPooling1D EOM
from keras DOT utils import np_utils EOM
import numpy as np EOM
import h5py EOM
from keras import callbacks EOM
from keras DOT layers import LSTM COMMA  GRU COMMA  SimpleRNN EOM
from keras DOT callbacks import CSVLogger EOM
from keras DOT callbacks import ModelCheckpoint COMMA  EarlyStopping COMMA  ReduceLROnPlateau COMMA  CSVLogger EOM
import csv EOM
from sklearn DOT cross_validation import StratifiedKFold EOM
from sklearn DOT cross_validation import cross_val_score EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
with open( PARERIGHT  as f: EOM
reader  EQUAL  csv DOT reader( PARERIGHT  EOM
your_list  EQUAL  list( PARERIGHT  EOM
trainX  EQUAL  np DOT array( PARERIGHT  EOM
traindata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
Y  EQUAL  traindata DOT iloc[] EOM
y_train1  EQUAL  np DOT array( PARERIGHT  EOM
y_train EQUAL  to_categorical( PARERIGHT  EOM
maxlen  EQUAL  44100 EOM
trainX  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_train  EQUAL  np DOT reshape(trainX COMMA  ( PARERIGHT  PARERIGHT  EOM
batch_size  EQUAL  5 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
checkpointer  EQUAL  callbacks DOT ModelCheckpoint( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras import layers EOM
import numpy as np EOM
from six DOT moves import range EOM
import sys EOM
import os EOM
from keras DOT models import load_model EOM
import keras EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dense EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT layers import Bidirectional EOM
from keras DOT utils import plot_model EOM
class SenseModel( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT lstmunits  EQUAL lstmunits EOM
self DOT lstmLayerNum  EQUAL  lstmLayerNum EOM
self DOT DenseUnits  EQUAL  DenseUnits EOM
self DOT charlenth  EQUAL  charlenth EOM
self DOT datalenth  EQUAL  datalenth EOM
self DOT buildmodel( PARERIGHT  EOM
def buildmodel( PARERIGHT : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add(Dense(self DOT DenseUnits COMMA input_shape EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
self DOT model DOT add(Bidirectional(layers DOT LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Bidirectional(layers DOT LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
self DOT model DOT summary( PARERIGHT  EOM
def trainModel( PARERIGHT : EOM
for cur in range( PARERIGHT : EOM
log EQUAL self DOT model DOT fit( PARERIGHT  EOM
mdname  EQUAL  savename +  + str( PARERIGHT  EOM
self DOT model DOT save( PARERIGHT  EOM
if __name__  EQUAL  EQUAL : EOM
a  EQUAL  SenseModel( PARERIGHT  EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT optimizers import RMSprop EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT callbacks import Callback EOM
class LossHistory( PARERIGHT : EOM
def on_train_begin( PARERIGHT : EOM
self DOT losses  EQUAL  [] EOM
def on_batch_end( PARERIGHT : EOM
self DOT losses DOT append(logs DOT get( PARERIGHT  PARERIGHT  EOM
def neural_net( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(rams[] COMMA  init EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
rms  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if load: EOM
model DOT load_weights( PARERIGHT  EOM
return model EOM
def lstm_net( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelimport numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT recurrent import SimpleRNN  COMMA  LSTM EOM
from keras DOT optimizers import SGD  COMMA  Adagrad EOM
def keras_model( PARERIGHT : EOM
LSTM_layers  EQUAL  1 EOM
LSTM_units   EQUAL  300 EOM
DNN_units    EQUAL  [] EOM
question_LSTM  EQUAL  Sequential( PARERIGHT  EOM
layer_Mask_q  EQUAL  Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
question_LSTM DOT add( PARERIGHT  EOM
question_LSTM DOT add( PARERIGHT  EOM
opt_LSTM_1  EQUAL  Sequential( PARERIGHT  EOM
layer_Mask_1  EQUAL  Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer_LSTM_1  EQUAL  LSTM( PARERIGHT  EOM
opt_LSTM_1 DOT add( PARERIGHT  EOM
opt_LSTM_1 DOT add( PARERIGHT  EOM
opt_LSTM_2  EQUAL  Sequential( PARERIGHT  EOM
layer_Mask_2  EQUAL  Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer_LSTM_2  EQUAL  LSTM( PARERIGHT  EOM
opt_LSTM_2 DOT add( PARERIGHT  EOM
opt_LSTM_2 DOT add( PARERIGHT  EOM
opt_LSTM_3  EQUAL  Sequential( PARERIGHT  EOM
layer_Mask_3  EQUAL  Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer_LSTM_3  EQUAL  LSTM( PARERIGHT  EOM
opt_LSTM_3 DOT add( PARERIGHT  EOM
opt_LSTM_3 DOT add( PARERIGHT  EOM
opt_LSTM_4  EQUAL  Sequential( PARERIGHT  EOM
layer_Mask_4  EQUAL  Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer_LSTM_4  EQUAL  LSTM( PARERIGHT  EOM
opt_LSTM_4 DOT add( PARERIGHT  EOM
opt_LSTM_4 DOT add( PARERIGHT  EOM
opt_LSTM_5  EQUAL  Sequential( PARERIGHT  EOM
layer_Mask_5  EQUAL  Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer_LSTM_5  EQUAL  LSTM( PARERIGHT  EOM
opt_LSTM_5 DOT add( PARERIGHT  EOM
opt_LSTM_5 DOT add( PARERIGHT  EOM
image_model  EQUAL  Sequential( PARERIGHT  EOM
image_model DOT add(Reshape(input_shape  EQUAL ( PARERIGHT  COMMA  dims  EQUAL ( PARERIGHT   PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
layer_pre_DNN  EQUAL  Dense( PARERIGHT  EOM
layer_pre_DNN_act  EQUAL  Activation( PARERIGHT  EOM
layer_pre_DNN_dro  EQUAL  Dropout( PARERIGHT  EOM
layer_DNN_1  EQUAL  Dense( PARERIGHT  EOM
layer_DNN_1_act  EQUAL  Activation( PARERIGHT  EOM
layer_DNN_1_dro  EQUAL  Dropout( PARERIGHT  EOM
layer_softmax  EQUAL  Activation( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
X  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
Y  EQUAL  np DOT array( PARERIGHT  EOM
my_model  EQUAL  keras_model( PARERIGHT  EOM
from tensorflow DOT keras import backend as K EOM
from tensorflow DOT keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA Embedding COMMA Flatten COMMA LSTM COMMA Bidirectional COMMA GlobalAveragePooling1D EOM
from keras DOT layers import Dropout EOM
from keras import regularizers EOM
from keras DOT layers import Input EOM
from keras DOT models import Model EOM
from Attention_keras import Attention COMMA Position_Embedding EOM
class WRNNModel: EOM
def Average( PARERIGHT : EOM
for i in range(1 COMMA  len( PARERIGHT  PARERIGHT : EOM
output + EQUAL  inputs_list[] * weight_array[] EOM
return output EOM
def buildnet( PARERIGHT : EOM
sequence  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
embedded  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
blstm  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  merge_mode EQUAL  PARERIGHT ( PARERIGHT  EOM
blstm  EQUAL  Bidirectional(LSTM( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
output  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
Main_model  EQUAL  Model( PARERIGHT  EOM
return Main_model EOM
class DNNModel: EOM
def Average( PARERIGHT : EOM
for i in range(1 COMMA  len( PARERIGHT  PARERIGHT : EOM
output + EQUAL  inputs_list[] * weight_array[] EOM
return output EOM
def buildnet( PARERIGHT : EOM
Main_model  EQUAL  Sequential( PARERIGHT  EOM
Main_model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
lstm_hid_size  EQUAL  128 EOM
l2_rate  EQUAL  0 DOT 05 EOM
Main_model DOT add(Dense(units EQUAL  COMMA  input_dim EQUAL  COMMA kernel_initializer EQUAL  COMMA activation EQUAL  COMMA use_bias EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
Main_model DOT add(Dense(units EQUAL  COMMA  input_dim EQUAL  COMMA kernel_initializer EQUAL  COMMA activation EQUAL  COMMA use_bias EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
Main_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
Main_model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
from __future__ import print_function EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Conv1D COMMA  MaxPooling1D EOM
from keras DOT datasets import imdb EOM
top_words  EQUAL  20000 EOM
maxlen  EQUAL  100 EOM
embedding_size  EQUAL  128 EOM
kernel_size  EQUAL  5 EOM
filters  EQUAL  64 EOM
pool_size  EQUAL  4 EOM
lstm_output_size  EQUAL  70 EOM
batch_size  EQUAL  30 EOM
epochs  EQUAL  2 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
x_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
x_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(x_train COMMA  y_train COMMA batch_size EQUAL  COMMA epochs EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  LSTM COMMA  Dropout EOM
from keras DOT layers DOT advanced_activations import LeakyReLU EOM
from sklearn DOT preprocessing import MinMaxScaler EOM
from keras DOT callbacks import EarlyStopping EOM
from sklearn DOT preprocessing import LabelBinarizer EOM
from public_tool DOT bagging_balance_weight import bagging_balance_weight EOM
from keras DOT layers import BatchNormalization EOM
from keras DOT optimizers import SGD EOM
from public_tool DOT form_index import form_index EOM
from public_tool DOT random_cut import random_cut EOM
from public_tool DOT form_accuracy import form_accuracy EOM
from keras DOT models import load_model EOM
import pickle EOM
def form_LSTM_dataset( PARERIGHT : EOM
result_X  EQUAL  [] EOM
result_y  EQUAL  [] EOM
for i in range(len( PARERIGHT  PARERIGHT : EOM
begin_index COMMA  end_index  EQUAL  form_index( PARERIGHT  EOM
now_X  EQUAL  X[] EOM
now_y  EQUAL  y[] EOM
for j in range(len( PARERIGHT  - T PARERIGHT : EOM
result_X DOT append( PARERIGHT  EOM
result_y DOT append( PARERIGHT  EOM
result_X  EQUAL  np DOT array( PARERIGHT  EOM
return result_X COMMA  result_y EOM
def self_LSTM( PARERIGHT : EOM
mms  EQUAL  MinMaxScaler( PARERIGHT  EOM
X  EQUAL  mms DOT fit_transform( PARERIGHT  EOM
T  EQUAL  10 EOM
X_LSTM COMMA  y_LSTM  EQUAL  form_LSTM_dataset( PARERIGHT  EOM
lb  EQUAL  LabelBinarizer( PARERIGHT  EOM
y_LSTM  EQUAL  lb DOT fit_transform( PARERIGHT  EOM
X_train COMMA  y_train COMMA  X_valid COMMA  y_valid  EQUAL  random_cut( PARERIGHT  EOM
X_train COMMA  y_train  EQUAL  bagging_balance_weight( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(LeakyReLU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(LeakyReLU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
sgd  EQUAL  SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(X_train COMMA y_train COMMA tch_size EQUAL ( PARERIGHT  COMMA epochs EQUAL  COMMA verbose EQUAL  COMMA validation_split EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  COMMA shuffle EQUAL  COMMA class_weight EQUAL  COMMA sample_weight EQUAL  COMMA initial_epoch EQUAL  COMMA callbacks EQUAL [] PARERIGHT  EOM
mms_file_name  EQUAL   + file_name + EOM
pickle DOT dump(mms COMMA  open( PARERIGHT  PARERIGHT  EOM
model_file_name  EQUAL   + file_name + EOM
model DOT save( PARERIGHT import matplotlib DOT pyplot as plt EOM
import pandas EOM
import numpy as np EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributedDense EOM
from keras DOT models import Sequential EOM
from keras DOT optimizers import SGD EOM
from keras DOT utils DOT np_utils import to_categorical EOM
def train_simple_lstm( PARERIGHT : EOM
max_features  EQUAL  kwargs DOT get( COMMA  Xtrain DOT max( PARERIGHT  + 1 PARERIGHT  EOM
embedding_size  EQUAL  kwargs DOT get( PARERIGHT  EOM
dense_size  EQUAL  kwargs DOT get( PARERIGHT  EOM
n_epoch  EQUAL  kwargs DOT get( PARERIGHT  EOM
Ytrain  EQUAL  to_categorical(Ytrain DOT reshape( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
return model EOM
dataset  EQUAL  np DOT loadtxt( PARERIGHT  EOM
trainX  EQUAL  dataset[] EOM
trainY  EQUAL  dataset[] DOT astype( PARERIGHT  EOM
train_simple_lstm( PARERIGHT  EOM
from keras DOT layers import Dense COMMA  Flatten COMMA  Dropout COMMA  ZeroPadding3D EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential COMMA  load_model EOM
from keras DOT optimizers import Adam COMMA  RMSprop EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
from keras DOT layers DOT convolutional import ( PARERIGHT  EOM
from collections import deque EOM
import sys EOM
class ResearchModels( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT seq_length  EQUAL  seq_length EOM
self DOT load_model  EQUAL  load_model EOM
self DOT saved_model  EQUAL  saved_model EOM
self DOT nb_classes  EQUAL  nb_classes EOM
self DOT feature_queue  EQUAL  deque( PARERIGHT  EOM
metrics  EQUAL  [] EOM
if self DOT nb_classes > EQUAL  10: EOM
metrics DOT append( PARERIGHT  EOM
if self DOT saved_model is not None: EOM
self DOT model  EQUAL  load_model( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT lstm( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT lrcn( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT conv_3d( PARERIGHT  EOM
else: EOM
sys DOT exit( PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
def lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def lrcn( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(32 COMMA  ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA tivation EQUAL  COMMA  padding EQUAL  PARERIGHT  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(32 COMMA  ( PARERIGHT  COMMA ernel_initializer EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(64 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(64 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(128 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(128 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(256 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(256 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(512 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(512 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Flatten( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def conv_3d( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv3D( ( PARERIGHT  COMMA  activation EQUAL  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(128 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(128 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(256 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(256 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return modelfrom __future__ import print_function EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Embedding COMMA  LSTM COMMA  GRU COMMA  Dense COMMA  Dropout COMMA  Bidirectional COMMA  TimeDistributed COMMA  Flatten EOM
from keras DOT callbacks import EarlyStopping COMMA  ModelCheckpoint EOM
from sklearn DOT metrics import mean_squared_error EOM
from keras DOT utils import np_utils EOM
import os EOM
import pickle EOM
import sys COMMA  argparse COMMA  os EOM
import keras EOM
import _pickle as pk EOM
import readline EOM
import numpy as np EOM
from keras import regularizers EOM
from keras DOT models import Model COMMA  load_model EOM
from keras DOT layers import Input COMMA  GRU COMMA  LSTM COMMA  Dense COMMA  Dropout COMMA  Bidirectional EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT optimizers import Adam EOM
from keras DOT callbacks import EarlyStopping COMMA  ModelCheckpoint EOM
import keras DOT backend DOT tensorflow_backend as K EOM
import tensorflow as tf EOM
import pandas as pd EOM
import os EOM
import sys EOM
from sklearn DOT linear_model import LinearRegression COMMA  LogisticRegression EOM
from sklearn DOT svm import SVC EOM
from sklearn DOT tree import DecisionTreeClassifier EOM
from sklearn DOT neural_network import MLPClassifier EOM
from sklearn DOT ensemble import RandomForestClassifier EOM
from sklearn DOT cluster import KMeans EOM
from sklearn DOT naive_bayes import GaussianNB EOM
from sklearn DOT model_selection import train_test_split EOM
from sklearn DOT metrics import accuracy_score COMMA  precision_recall_fscore_support COMMA  mean_squared_error COMMA  confusion_matrix EOM
from sklearn DOT preprocessing import StandardScaler EOM
from plot import plot_conf_matrix EOM
import numpy as np EOM
import pandas as pd EOM
import pickle EOM
import os EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Embedding COMMA  LSTM COMMA  GRU COMMA  Dense COMMA  Dropout COMMA  Bidirectional COMMA  TimeDistributed COMMA  Flatten EOM
from keras DOT callbacks import EarlyStopping COMMA  ModelCheckpoint EOM
from sklearn DOT metrics import mean_squared_error EOM
import os EOM
import pickle EOM
os DOT environ[]  EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
args  EQUAL  parser DOT parse_args( PARERIGHT  EOM
trainX_path  EQUAL   + args DOT window + EOM
trainY_path  EQUAL   + args DOT window + EOM
testY_path  EQUAL     + args DOT window + EOM
mode  EQUAL  args DOT action EOM
def RT_lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(args DOT hidden_size COMMA  input_shape EQUAL (int( PARERIGHT  COMMA 4 PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
if mode  EQUAL  EQUAL  : EOM
model DOT add(Dense( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
else: EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def RT_gru( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(GRU(args DOT hidden_size COMMA  input_shape EQUAL (int( PARERIGHT  COMMA 4 PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
if mode  EQUAL  EQUAL  : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
else: EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def RF_lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(args DOT hidden_size COMMA  return_sequences EQUAL  COMMA input_shape EQUAL (int( PARERIGHT  COMMA 4 PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
if mode  EQUAL  EQUAL  : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
else: EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def RF_gru( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(GRU(args DOT hidden_size COMMA  return_sequences EQUAL  COMMA input_shape EQUAL (int( PARERIGHT  COMMA 4 PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
if mode  EQUAL  EQUAL  : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
else: EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def main( PARERIGHT : EOM
index  EQUAL  args DOT index EOM
bin_size  EQUAL  args DOT bin_size EOM
acc COMMA  pre COMMA  rec COMMA  f_score  EQUAL  [] COMMA  [] COMMA  [] COMMA  [] EOM
from keras DOT backend DOT tensorflow_backend import set_session EOM
config  EQUAL  tf DOT ConfigProto( PARERIGHT  EOM
config DOT gpu_options DOT allow_growth EQUAL True EOM
set_session(tf DOT Session( PARERIGHT  PARERIGHT  EOM
save_path  EQUAL  os DOT path DOT join( PARERIGHT  EOM
if args DOT load_model is not None: EOM
load_path  EQUAL  os DOT path DOT join( PARERIGHT  EOM
from util import * EOM
dm  EQUAL  DataManager( PARERIGHT  EOM
dm DOT add_data( PARERIGHT  EOM
data COMMA  label COMMA  Z  EQUAL  dm DOT get_data( PARERIGHT  EOM
x_train COMMA  x_test COMMA  y_train COMMA  y_test  EQUAL  train_test_split( PARERIGHT  EOM
x_train  EQUAL  np DOT load( PARERIGHT  DOT astype( PARERIGHT  EOM
y_train  EQUAL  np DOT load( PARERIGHT  DOT astype( PARERIGHT  EOM
x_test  EQUAL  np DOT load( PARERIGHT  DOT astype( PARERIGHT  EOM
y_test  EQUAL  np DOT load( PARERIGHT  DOT astype( PARERIGHT  EOM
x_train1  EQUAL  x_train[] DOT reshape( PARERIGHT  EOM
x_train2  EQUAL  x_train[] DOT reshape( PARERIGHT  EOM
x_train1  EQUAL  np DOT concatenate(( PARERIGHT  COMMA  axis  EQUAL  PARERIGHT  EOM
mean_x  EQUAL  np DOT mean( PARERIGHT  EOM
std_x  EQUAL  np DOT std( PARERIGHT  EOM
x_1  EQUAL  ( PARERIGHT  / std_x EOM
x_test1  EQUAL  x_test[] DOT reshape( PARERIGHT  EOM
x_test2  EQUAL  x_train[] DOT reshape( PARERIGHT  EOM
x_t1  EQUAL  ( PARERIGHT  / std_x EOM
mean_y  EQUAL  np DOT mean( PARERIGHT  EOM
std_y  EQUAL  np DOT std( PARERIGHT  EOM
y  EQUAL  ( PARERIGHT  / std_y EOM
y_t1  EQUAL  ( PARERIGHT  / std_y EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  COMMA  ( PARERIGHT  EOM
if args DOT action  EQUAL  EQUAL  : EOM
if args DOT model_type  EQUAL  EQUAL  : EOM
model  EQUAL  RT_lstm( PARERIGHT  EOM
elif args DOT model_type  EQUAL  EQUAL  : EOM
model  EQUAL  RT_gru( PARERIGHT  EOM
elif args DOT model_type  EQUAL  EQUAL  : EOM
model  EQUAL  RF_lstm( PARERIGHT  EOM
elif args DOT model_type  EQUAL  EQUAL  : EOM
model  EQUAL  RF_gru( PARERIGHT  EOM
earlystopping  EQUAL  EarlyStopping( PARERIGHT  EOM
save_path  EQUAL  os DOT path DOT join( PARERIGHT  EOM
checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
history  EQUAL  model DOT fit( PARERIGHT  EOM
dict_history  EQUAL  pd DOT DataFrame( PARERIGHT  EOM
dict_history DOT to_csv( PARERIGHT  EOM
elif args DOT action  EQUAL  EQUAL   : EOM
model  EQUAL  load_model( PARERIGHT  EOM
test_y  EQUAL  model DOT predict( PARERIGHT  EOM
test_y  EQUAL  test_y * std_y EOM
test_y  EQUAL  test_y + mean_y EOM
np DOT save( PARERIGHT  EOM
elif args DOT action  EQUAL  EQUAL  : EOM
( PARERIGHT   EQUAL ( PARERIGHT  EOM
min_val  EQUAL  min( PARERIGHT  EOM
max_val  EQUAL  max( PARERIGHT  EOM
bins  EQUAL  [] EOM
labels  EQUAL  range( PARERIGHT  EOM
train_label  EQUAL  pd DOT cut( PARERIGHT  EOM
test_label  EQUAL  pd DOT cut( PARERIGHT  EOM
for i in range(len( PARERIGHT  PARERIGHT : EOM
if train_label[] ! EQUAL  train_label[]: EOM
train_label[]  EQUAL  0 EOM
for i in range(len( PARERIGHT  PARERIGHT : EOM
if test_label[] ! EQUAL  test_label[]: EOM
test_label[]  EQUAL  0 EOM
Y_train  EQUAL  np_utils DOT to_categorical( PARERIGHT  EOM
Y_test  EQUAL  np_utils DOT to_categorical( PARERIGHT  EOM
if args DOT model_type  EQUAL  EQUAL  : EOM
model  EQUAL  RT_lstm( PARERIGHT  EOM
elif args DOT model_type  EQUAL  EQUAL  : EOM
model  EQUAL  RT_gru( PARERIGHT  EOM
elif args DOT model_type  EQUAL  EQUAL  : EOM
model  EQUAL  RF_lstm( PARERIGHT  EOM
elif args DOT model_type  EQUAL  EQUAL  : EOM
model  EQUAL  RF_gru( PARERIGHT  EOM
earlystopping  EQUAL  EarlyStopping( PARERIGHT  EOM
save_path  EQUAL  os DOT path DOT join( PARERIGHT  EOM
checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
history  EQUAL  model DOT fit( PARERIGHT  EOM
dict_history  EQUAL  pd DOT DataFrame( PARERIGHT  EOM
dict_history DOT to_csv( PARERIGHT  EOM
test_y  EQUAL  model DOT predict( PARERIGHT  EOM
predict  EQUAL  [] EOM
for i in range(len( PARERIGHT  PARERIGHT : EOM
p  EQUAL  np DOT argmax( PARERIGHT  EOM
predict DOT append( PARERIGHT  EOM
predict  EQUAL  np DOT array( PARERIGHT  EOM
conf_matrix  EQUAL  confusion_matrix( PARERIGHT  EOM
figdir  EQUAL  EOM
figpath  EQUAL  os DOT path DOT join(figdir COMMA   DOT format( PARERIGHT  PARERIGHT  EOM
plot_conf_matrix( PARERIGHT  EOM
accuracy  EQUAL  accuracy_score( PARERIGHT  EOM
precision COMMA  recall COMMA  f COMMA  _  EQUAL  precision_recall_fscore_support( PARERIGHT  EOM
acc DOT append( PARERIGHT  EOM
pre DOT append( PARERIGHT  EOM
rec DOT append( PARERIGHT  EOM
f_score DOT append( PARERIGHT  EOM
if mode  EQUAL  EQUAL  : EOM
with open( + args DOT model +  + str( PARERIGHT  +  COMMA   PARERIGHT  as f: EOM
f DOT write( PARERIGHT  EOM
for idx in range(len( PARERIGHT  PARERIGHT : EOM
f DOT write( DOT format( PARERIGHT  PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
main( PARERIGHT import keras EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten COMMA  Embedding EOM
from keras DOT layers import Conv2D COMMA  MaxPooling2D COMMA  LSTM EOM
def get_mnist_net( PARERIGHT : EOM
if model_name  EQUAL  EQUAL  : EOM
return get_mnist_stdnet( PARERIGHT  EOM
elif model_name  EQUAL  EQUAL  : EOM
return get_mnist_convnet( PARERIGHT  EOM
else: EOM
from keras DOT models import Sequential EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT layers import TimeDistributed COMMA  Dense COMMA  Dropout COMMA Activation EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT optimizers import RMSprop COMMA  Adam EOM
import numpy as np EOM
def one_layer_lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
layers  EQUAL  {: inp COMMA  : hidden COMMA  : outp} EOM
model DOT add(LSTM(layers[] COMMA nput_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
layers  EQUAL  {: 48 COMMA  : 64 COMMA   : 128 COMMA  : 1} EOM
model DOT add(LSTM(layers[] COMMA nput_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model  from keras DOT layers import LSTM COMMA  Dense COMMA  Input COMMA  InputLayer COMMA  Permute COMMA  BatchNormalization COMMA  \ EOM
from keras DOT models import Sequential COMMA  save_model EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
from sklearn DOT model_selection import GridSearchCV EOM
from src DOT const import * EOM
from src DOT utils import * EOM
INPUT_SHAPE  EQUAL  ( PARERIGHT  EOM
LSTM_SIZE  EQUAL  50 EOM
def get_model( PARERIGHT : EOM
lstm_model  EQUAL  Sequential( PARERIGHT  EOM
lstm_model DOT add(InputLayer( PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(Permute(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
lstm_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
lstm_model DOT summary( PARERIGHT  EOM
lstm_model DOT compile( PARERIGHT  EOM
return lstm_model EOM
if __name__  EQUAL  EQUAL  : EOM
csv_dict  EQUAL  read_csv_sequence( PARERIGHT  EOM
players_dict COMMA  val_players_dict  EQUAL  split_training_set( PARERIGHT  EOM
batch_input COMMA  batch_input_other_info COMMA  batch_output COMMA  player_id_to_name_dict \ EOM
 EQUAL  csv_sequence_set_to_keras_batch( PARERIGHT  EOM
val_batch_input COMMA  val_batch_input_other_info COMMA  val_batch_output COMMA  _ \ EOM
 EQUAL  csv_sequence_set_to_keras_batch( PARERIGHT  EOM
model  EQUAL  get_model( PARERIGHT  EOM
model DOT fit(x EQUAL  COMMA y EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  COMMA epochs EQUAL  COMMA batch_size EQUAL  COMMA verbose EQUAL  PARERIGHT  EOM
save_model( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Dense EOM
import numpy as np EOM
import matplotlib DOT pyplot as plt EOM
import numpy as np EOM
import time EOM
import csv EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout COMMA Merge EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
import copy EOM
data_dim  EQUAL  1 EOM
timesteps  EQUAL  13 EOM
model_A  EQUAL  Sequential( PARERIGHT  EOM
model_B  EQUAL  Sequential( PARERIGHT  EOM
model_Combine  EQUAL  Sequential( PARERIGHT  EOM
lstm_hidden_size  EQUAL  [] EOM
drop_out_rate  EQUAL  [] EOM
model_A DOT add(LSTM(lstm_hidden_size[] COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_A DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_A DOT add(Dense( PARERIGHT  PARERIGHT  EOM
in_dimension  EQUAL  3 EOM
nn_hidden_size  EQUAL  [] EOM
nn_drop_rate  EQUAL  [] EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_Combine DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model_Combine DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_Combine DOT compile( PARERIGHT  EOM
from keras DOT utils DOT visualize_util import plot COMMA  to_graph EOM
graph  EQUAL  to_graph( PARERIGHT  EOM
graph DOT write_png( PARERIGHT LAB_VTX  EQUAL DATASET_TRK  EQUAL  [] EOM
LAB_TRK  EQUAL  EOM
ROOTFILE  EQUAL  EOM
def load_data( PARERIGHT : EOM
import uproot EOM
import pandas EOM
import numpy as np EOM
f  EQUAL  uproot DOT open( PARERIGHT  EOM
tree  EQUAL  f[] EOM
dataset  EQUAL  tree DOT pandas DOT df( PARERIGHT  EOM
features  EQUAL  dataset DOT loc[] DOT values EOM
labels  EQUAL  dataset DOT loc[] DOT values EOM
features  EQUAL  np DOT resize(features COMMA  ( PARERIGHT  PARERIGHT  EOM
labels  EQUAL  np DOT resize(labels COMMA  ( PARERIGHT  PARERIGHT  EOM
return features COMMA  labels EOM
def vertex_model( PARERIGHT : EOM
import keras EOM
from keras import layers COMMA  models EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout EOM
from keras DOT activations import sigmoid COMMA  tanh EOM
from keras DOT optimizers import Adam COMMA  Nadam COMMA  sgd EOM
from keras DOT activations import softmax COMMA  sigmoid COMMA  relu COMMA  tanh COMMA  elu COMMA  selu EOM
from keras DOT losses import categorical_crossentropy COMMA  logcosh COMMA  binary_crossentropy EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def tracks_model( PARERIGHT : EOM
import keras EOM
from keras import layers COMMA  models EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout EOM
from keras DOT activations import sigmoid COMMA  tanh EOM
from keras DOT optimizers import Adam COMMA  Nadam COMMA  sgd EOM
from keras DOT activations import softmax COMMA  sigmoid COMMA  relu COMMA  tanh COMMA  elu COMMA  selu EOM
from keras DOT losses import categorical_crossentropy COMMA  logcosh COMMA  binary_crossentropy EOM
from keras DOT callbacks import TensorBoard EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def LSTM_model( PARERIGHT : EOM
import keras EOM
from keras import layers COMMA  models EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  LSTM EOM
from keras DOT activations import sigmoid EOM
from keras DOT optimizers import Adam EOM
from keras DOT losses import binary_crossentropy EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( 1024 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( 1024 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( 256 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def train_model( PARERIGHT : EOM
import keras EOM
from keras import layers COMMA  models EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout EOM
from keras DOT activations import sigmoid COMMA  tanh EOM
from keras DOT optimizers import Adam COMMA  Nadam COMMA  sgd EOM
from keras DOT activations import softmax COMMA  sigmoid COMMA  relu COMMA  tanh COMMA  elu COMMA  selu EOM
from keras DOT losses import categorical_crossentropy COMMA  logcosh COMMA  binary_crossentropy EOM
from keras DOT callbacks import TensorBoard EOM
from sklearn DOT model_selection import train_test_split EOM
X_train COMMA  X_test COMMA  y_train COMMA  y_test  EQUAL  train_test_split( PARERIGHT  EOM
history  EQUAL  model DOT fit(X_train COMMA  y_train COMMA pochs EQUAL  COMMA  lidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
return history COMMA  scores COMMA  X_test COMMA  y_test COMMA  model EOM
def conc_method( PARERIGHT : EOM
import uproot EOM
import pandas EOM
import numpy as np EOM
import keras EOM
from keras import layers COMMA  models EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Input COMMA  LSTM EOM
from keras DOT activations import sigmoid COMMA  tanh EOM
from keras DOT optimizers import Adam COMMA  Nadam COMMA  sgd EOM
from keras DOT activations import softmax COMMA  sigmoid COMMA  relu COMMA  tanh COMMA  elu COMMA  selu EOM
from keras DOT losses import categorical_crossentropy COMMA  logcosh COMMA  binary_crossentropy EOM
from keras DOT layers DOT merge import concatenate EOM
vertex_input  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
out  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
out_trk  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
tracks_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  EOM
x  EQUAL  concatenate( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
main_out  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
history  EQUAL  model DOT fit( PARERIGHT  EOM
pred_labels  EQUAL  model DOT predict( PARERIGHT  EOM
def prediction( PARERIGHT : EOM
result  EQUAL  model DOT predict( PARERIGHT  EOM
probs  EQUAL  model DOT predict_proba( PARERIGHT  EOM
probs1D  EQUAL  probs DOT flatten( PARERIGHT  EOM
return result COMMA  probs COMMA  probs1D EOM
def execute( PARERIGHT : EOM
import InDetVtxClassPlot as plot EOM
import Utils as utl EOM
import os EOM
form  EQUAL  EOM
feat_vtx COMMA  lab_vtx  EQUAL  load_data( PARERIGHT  EOM
feat_trk COMMA  lab_trk  EQUAL  load_data( PARERIGHT  EOM
vtx_mod  EQUAL  vertex_model( PARERIGHT  EOM
trk_mod  EQUAL  tracks_model( PARERIGHT  EOM
lstm_vtx_mod  EQUAL  LSTM_model( PARERIGHT  EOM
lstm_trk_mod  EQUAL  LSTM_model( PARERIGHT  EOM
vrs  EQUAL  EOM
vhs  EQUAL  EOM
vps  EQUAL  EOM
vtx_roc_str  EQUAL  os DOT path DOT join( PARERIGHT  EOM
vtx_hst_str  EQUAL  os DOT path DOT join( PARERIGHT  EOM
vtx_prob_str  EQUAL  os DOT path DOT join( PARERIGHT  EOM
vtx_history COMMA  vtx_scores COMMA  x_vtx_test COMMA  y_vtx_test COMMA  out_vtx_mod  EQUAL  train_model( PARERIGHT  EOM
vtx_result COMMA  vtx_probs COMMA  vtx_probs1D  EQUAL  prediction( PARERIGHT  EOM
plot DOT plot_roc( PARERIGHT  EOM
plot DOT plot_history( PARERIGHT  EOM
plot DOT plot_probs( PARERIGHT  EOM
trs  EQUAL  EOM
ths  EQUAL  EOM
tps  EQUAL  EOM
trk_roc_str  EQUAL  os DOT path DOT join( PARERIGHT  EOM
trk_hst_str  EQUAL  os DOT path DOT join( PARERIGHT  EOM
trk_prob_str  EQUAL  os DOT path DOT join( PARERIGHT  EOM
trk_history COMMA  trk_scores COMMA  x_trk_test COMMA  y_trk_test COMMA  out_trk_mod  EQUAL  train_model( PARERIGHT  EOM
trk_result COMMA  trk_probs COMMA  trk_probs1D  EQUAL  prediction( PARERIGHT  EOM
plot DOT plot_roc( PARERIGHT  EOM
plot DOT plot_history( PARERIGHT  EOM
plot DOT plot_probs( PARERIGHT  EOM
vlhs  EQUAL  EOM
vlps  EQUAL  EOM
vtx_lstm_hst_str  EQUAL  os DOT path DOT join( PARERIGHT  EOM
vtx_lstm_prob_str  EQUAL  os DOT path DOT join( PARERIGHT  EOM
feat_vtx_3D COMMA  lab_vtx_3D  EQUAL  utl DOT twoD_to_3D( PARERIGHT  EOM
lstm_vtx_hist COMMA  lstm_vtx_scores COMMA  lstm_vtx_x_test COMMA  lstm_vtx_y_test COMMA  lstm_vtx_mod  EQUAL  train_model( PARERIGHT  EOM
lstm_vtx_result COMMA  lstm_vtx_probs COMMA  lstm_vtx_probs1D  EQUAL  prediction( PARERIGHT  EOM
lstm_x_test_2D  EQUAL  utl DOT threeD_to2D( PARERIGHT  EOM
lstm_y_test_2D  EQUAL  utl DOT threeD_to2D( PARERIGHT  EOM
plot DOT plot_history( PARERIGHT  EOM
plot DOT plot_probs( PARERIGHT  EOM
tlhs  EQUAL  EOM
tlps  EQUAL  EOM
trk_lstm_hst_str  EQUAL  os DOT path DOT join( PARERIGHT  EOM
trk_lstm_prob_str  EQUAL  os DOT path DOT join( PARERIGHT  EOM
feat_trk_3D COMMA  lab_trk_3D  EQUAL  utl DOT twoD_to_3D( PARERIGHT  EOM
lstm_trk_hist COMMA  lstm_trk_scores COMMA  lstm_trk_x_test COMMA  lstm_trk_y_test COMMA  lstm_trk_mod  EQUAL  train_model( PARERIGHT  EOM
lstm_trk_result COMMA  lstm_trk_probs COMMA  lstm_trk_probs1D  EQUAL  prediction( PARERIGHT  EOM
lstm_x_test_2D  EQUAL  utl DOT threeD_to2D( PARERIGHT  EOM
lstm_y_test_2D  EQUAL  utl DOT threeD_to2D( PARERIGHT  EOM
plot DOT plot_history( PARERIGHT  EOM
plot DOT plot_probs( PARERIGHT  EOM
con_roc_vtx_str  EQUAL  EOM
con_roc_trk_str  EQUAL  EOM
chs  EQUAL  EOM
con_prob_str  EQUAL  EOM
con_hst_str  EQUAL  os DOT path DOT join( PARERIGHT  EOM
out_con_mod COMMA  conc_history COMMA  conc_scores COMMA  pred COMMA  con_probs COMMA  con_probs1D  EQUAL  conc_method( PARERIGHT  EOM
out_con_mod COMMA  conc_history COMMA  conc_scores COMMA  pred  EQUAL  conc_method( PARERIGHT  EOM
plot DOT plot_conc_history( PARERIGHT  EOM
plot DOT plot_roc( PARERIGHT  EOM
plot DOT plot_roc( PARERIGHT  EOM
plot DOT plot_probs( PARERIGHT  EOM
return None EOM
def main( PARERIGHT : EOM
nSamples  EQUAL  EOM
test_size  EQUAL  6000 EOM
epochs  EQUAL  10 EOM
epochs_name  EQUAL  EOM
path  EQUAL  EOM
execute( PARERIGHT  EOM
return None EOM
main( PARERIGHT  EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
def build_improved_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(nput_shape EQUAL ( PARERIGHT  COMMA units EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def build_basic_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(nput_shape EQUAL ( PARERIGHT  COMMA units EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
import os DOT path EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import load_model COMMA  Sequential EOM
def get_model( PARERIGHT : EOM
model_name  EQUAL  Config[] EOM
has_model  EQUAL  os DOT path DOT isfile( PARERIGHT  EOM
if has_model: EOM
return load_model( PARERIGHT  EOM
else: EOM
LSTM_size  EQUAL  Config[] EOM
LSTM_count  EQUAL  Config[] EOM
LSTM_STATEFUL  EQUAL  Config[] EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(LSTM_size COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL (maxlen COMMA  len( PARERIGHT  PARERIGHT  COMMA  batch_size EQUAL [] COMMA  stateful EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelimport numpy as np EOM
import pprint EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Convolution2D COMMA  Dense COMMA  Flatten COMMA  Activation COMMA  MaxPooling2D COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT advanced_activations import ELU EOM
from keras DOT layers DOT embeddings import Embedding EOM
from kerasify import export_model EOM
np DOT set_printoptions( PARERIGHT  EOM
def c_array( PARERIGHT : EOM
s  EQUAL  pprint DOT pformat(a DOT flatten( PARERIGHT  PARERIGHT  EOM
s  EQUAL  s DOT replace( PARERIGHT  DOT replace( PARERIGHT  DOT replace( PARERIGHT  DOT replace( PARERIGHT  DOT replace( PARERIGHT  EOM
shape  EQUAL  EOM
if a DOT shape  EQUAL  EQUAL  ( PARERIGHT : EOM
s  EQUAL   % s EOM
shape  EQUAL  EOM
else: EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Reshape COMMA  Merge COMMA  Dropout COMMA  Input EOM
from keras DOT layers import LSTM as keras_lstm EOM
from keras DOT layers DOT embeddings import Embedding EOM
from dictionary import Dictionary EOM
from constants import * EOM
from model_base import ModelBase EOM
class LSTM( PARERIGHT : EOM
lstm_hidden_units  EQUAL  None EOM
dropout  EQUAL  None EOM
recurrent_dropout  EQUAL  None EOM
number_stacked_lstms  EQUAL  None EOM
mlp_hidden_units  EQUAL  None EOM
adding_mlp  EQUAL  None EOM
def __init__( PARERIGHT : EOM
super( PARERIGHT  DOT __init__( PARERIGHT  EOM
self DOT lstm_hidden_units  EQUAL  lstm_hidden_units EOM
self DOT dropout  EQUAL  dropout EOM
self DOT recurrent_dropout  EQUAL  recurrent_dropout EOM
self DOT number_stacked_lstms  EQUAL  number_stacked_lstms EOM
self DOT model_name  EQUAL   + str( PARERIGHT  +  + str( PARERIGHT  +  \ EOM
self DOT model_type  EQUAL  EOM
self DOT adding_mlp  EQUAL  adding_mlp EOM
self DOT mlp_hidden_units  EQUAL  number_mlp_units EOM
def build_visual_model( PARERIGHT : EOM
image_model  EQUAL  Sequential( PARERIGHT  EOM
image_dimension  EQUAL  self DOT dictionary DOT pp_data DOT calculateImageDimension( PARERIGHT  EOM
image_model DOT add(Reshape(( PARERIGHT  COMMA  input_shape  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
language_model  EQUAL  Sequential( PARERIGHT  EOM
language_model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
language_model DOT add(keras_lstm( PARERIGHT  PARERIGHT  EOM
language_model DOT add(keras_lstm( PARERIGHT  PARERIGHT  EOM
if self DOT adding_mlp: EOM
language_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
language_model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(len( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def build_language_model( PARERIGHT : EOM
language_model  EQUAL  Sequential( PARERIGHT  EOM
language_model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
language_model DOT add(ras_lstm( PARERIGHT  PARERIGHT  EOM
language_model DOT add(ras_lstm( PARERIGHT  PARERIGHT  EOM
if self DOT adding_mlp: EOM
language_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
language_model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
language_model DOT add(Dense(len( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
language_model DOT compile( PARERIGHT  EOM
return language_modelfrom sentifmdetect import featurizer EOM
from sentifmdetect import util EOM
import os EOM
import keras EOM
from keras DOT optimizers import Adam EOM
from keras import backend EOM
from keras DOT layers import Dense COMMA  Input COMMA  Flatten COMMA  Dropout COMMA  Merge COMMA  BatchNormalization EOM
from keras DOT layers import Conv1D COMMA  MaxPooling1D COMMA  Embedding COMMA  LSTM COMMA  Bidirectional EOM
from keras DOT models import Model COMMA  Sequential EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
from sklearn DOT model_selection import train_test_split COMMA  RandomizedSearchCV EOM
from sklearn DOT metrics import precision_recall_fscore_support COMMA  classification_report COMMA  f1_score COMMA  precision_score COMMA \ EOM
recall_score COMMA  roc_auc_score EOM
import numpy as np EOM
def create_emb_lstm(bidirectional EQUAL  COMMA lstm_units EQUAL  COMMA lstm_dropout EQUAL  COMMA lstm_recurrent_dropout EQUAL  COMMA ptimizer EQUAL ( PARERIGHT  COMMA metrics EQUAL [] PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
embeddings_index  EQUAL  featurizer DOT load_emb( PARERIGHT  EOM
EMBEDDINGS_MATRIX  EQUAL  featurizer DOT make_embedding_matrix( PARERIGHT  EOM
EMB_DIM  EQUAL  EMBEDDINGS_MATRIX DOT shape[] EOM
model DOT add(edding( PARERIGHT  PARERIGHT  EOM
elif isinstance( PARERIGHT : EOM
EMB_DIM  EQUAL  wvec EOM
model DOT add(bedding( PARERIGHT  PARERIGHT  EOM
else: EOM
logging DOT error( PARERIGHT  EOM
if bidirectional: EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA  optimizer EQUAL []( PARERIGHT  COMMA  metrics EQUAL  PARERIGHT  EOM
return model EOM
class KerasClassifierCustom( PARERIGHT : EOM
return self DOT model DOT predict( PARERIGHT  EOM
class GlobalMetrics( PARERIGHT : EOM
self DOT from_categorical  EQUAL  True EOM
if isinstance( PARERIGHT : EOM
self DOT global_metrics  EQUAL  metrics EOM
else: EOM
raise TypeError( PARERIGHT  EOM
self DOT global_scores  EQUAL  {} EOM
def on_epoch_end( PARERIGHT : EOM
predict  EQUAL  np DOT asarray(self DOT model DOT predict( PARERIGHT  PARERIGHT  EOM
targ  EQUAL  self DOT validation_data[] EOM
if self DOT from_categorical: EOM
predict  EQUAL  predict DOT argmax( PARERIGHT  EOM
targ  EQUAL  targ DOT argmax( PARERIGHT  EOM
for metric COMMA  kwargs in self DOT global_metrics: EOM
self DOT global_scores[]  EQUAL  metric( PARERIGHT  EOM
return EOM
class KerasRandomizedSearchCV( PARERIGHT : EOM
pred  EQUAL  super( PARERIGHT  DOT predict( PARERIGHT  EOM
backend DOT clear_session( PARERIGHT  EOM
return pred EOM
if __name__  EQUAL  EQUAL  : EOM
from sklearn DOT datasets import make_moons EOM
from sklearn DOT model_selection import RandomizedSearchCV EOM
from keras DOT regularizers import l2 EOM
dataset  EQUAL  make_moons( PARERIGHT  EOM
def build_fn( PARERIGHT : EOM
result_model  EQUAL  Sequential( PARERIGHT  EOM
result_model DOT add(Dense(first_layer_size COMMA input_dim EQUAL  COMMA activation EQUAL  COMMA W_regularizer EQUAL ( PARERIGHT  COMMA activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
current_layer_size  EQUAL  int( PARERIGHT  + 1 EOM
for index_of_layer in range( PARERIGHT : EOM
result_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
result_model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
result_model DOT add(Dense(current_layer_size COMMA W_regularizer EQUAL ( PARERIGHT  COMMA activation EQUAL  COMMA activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
current_layer_size  EQUAL  int( PARERIGHT  + 1 EOM
result_model DOT add(Dense(1 COMMA activation EQUAL  COMMA W_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
result_model DOT compile( PARERIGHT  EOM
return result_model EOM
NeuralNet  EQUAL  KerasClassifier( PARERIGHT from keras DOT datasets import imdb EOM
from keras DOT preprocessing import sequence EOM
from keras DOT layers import Dense COMMA  Embedding COMMA  LSTM EOM
from keras DOT models import Sequential EOM
max_features  EQUAL  10000 EOM
maxlen  EQUAL  500 EOM
batch_size  EQUAL  32 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
input_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
input_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
history  EQUAL  model DOT fit( PARERIGHT  EOM
from keras DOT datasets import imdb EOM
from keras DOT preprocessing import sequence EOM
from keras DOT layers import Dense COMMA  Embedding COMMA  LSTM EOM
from keras DOT models import Sequential EOM
max_features  EQUAL  10000 EOM
maxlen  EQUAL  500 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
x_train  EQUAL  [] for x in x_train] EOM
x_test  EQUAL  [] for x in x_test] EOM
x_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
x_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
history  EQUAL  model DOT fit( PARERIGHT  EOM
from keras DOT datasets import imdb EOM
from keras DOT preprocessing import sequence EOM
from keras DOT layers import Dense COMMA  Embedding COMMA  LSTM EOM
from keras DOT models import Sequential EOM
max_features  EQUAL  10000 EOM
maxlen  EQUAL  500 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
x_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
x_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(layers DOT Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Bidirectional(layers DOT LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
history  EQUAL  model DOT fit(x_train COMMA _train COMMA  epochs EQUAL  COMMA batch_size EQUAL  COMMA validation_split EQUAL import pytest EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras import Input COMMA  Model EOM
from keras DOT layers import Conv2D COMMA  Bidirectional EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(2 COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
inner_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_lstm  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  name EQUAL  PARERIGHT ( PARERIGHT  EOM
encoder  EQUAL  Model( PARERIGHT  EOM
outer_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_encoder  EQUAL  TimeDistributed( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
preds  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
def test_plot_sequential_embedding( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT import numpy as np EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Embedding EOM
from keras DOT layers import LSTM COMMA  SimpleRNN EOM
from keras DOT datasets import imdb EOM
from keras DOT utils DOT vis_utils import plot_model EOM
batch_size  EQUAL  100 EOM
nb_epoch  EQUAL  1 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
plot_model( PARERIGHT  EOM
model DOT fit(X_train COMMA  y_train COMMA  batch_size EQUAL  COMMA  nb_epoch EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
score COMMA  acc  EQUAL  model DOT evaluate( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(X_train COMMA  y_train COMMA  batch_size EQUAL  COMMA  nb_epoch EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
score COMMA  acc  EQUAL  model DOT evaluate( PARERIGHT  EOM
import copy EOM
import time EOM
import re EOM
import os EOM
import pandas as pd EOM
import numpy as np EOM
import matplotlib DOT pyplot as plt EOM
from sklearn DOT decomposition import PCA EOM
from sklearn DOT metrics import f1_score COMMA  accuracy_score EOM
from sklearn DOT model_selection import cross_val_score COMMA  KFold EOM
import keras EOM
import tensorflow as tf EOM
os DOT environ[] EQUAL  EOM
from keras DOT preprocessing import sequence EOM
from keras DOT preprocessing DOT text import Tokenizer COMMA  text_to_word_sequence EOM
from keras DOT models import Sequential COMMA  load_model EOM
from keras import regularizers EOM
from keras DOT optimizers import SGD COMMA  Adam EOM
from keras DOT initializers import he_normal EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Embedding COMMA  LSTM COMMA  Bidirectional COMMA  BatchNormalization COMMA  Activation EOM
from keras DOT callbacks import History COMMA  CSVLogger COMMA  EarlyStopping COMMA  LearningRateScheduler COMMA  TensorBoard COMMA  ModelCheckpoint EOM
from keras DOT utils import to_categorical EOM
config  EQUAL  tf DOT ConfigProto( PARERIGHT  EOM
sess  EQUAL  tf DOT Session( PARERIGHT  EOM
keras DOT backend DOT set_session( PARERIGHT  EOM
from tensorflow DOT python DOT client import device_lib EOM
from keras import backend as K EOM
kfold EQUAL KFold( PARERIGHT  EOM
VOCAB_SIZE  EQUAL  50000 EOM
EMBEDDING_DIM  EQUAL  300 EOM
MAX_DOC_LEN  EQUAL  40 EOM
def plot_explained_variance( PARERIGHT : EOM
pca  EQUAL  PCA( PARERIGHT  EOM
pca_full  EQUAL  pca DOT fit( PARERIGHT  EOM
plt DOT plot(np DOT cumsum( PARERIGHT  PARERIGHT  EOM
plt DOT xlabel( PARERIGHT  EOM
plt DOT ylabel( PARERIGHT  EOM
plt DOT grid( PARERIGHT  EOM
plt DOT show( PARERIGHT  EOM
def preprocess_pca( PARERIGHT : EOM
pca  EQUAL  PCA( PARERIGHT  EOM
X_train_pca  EQUAL  pca DOT fit_transform( PARERIGHT  EOM
X_test_pca  EQUAL  pca DOT transform( PARERIGHT  EOM
return X_train_pca COMMA  X_test_pca EOM
def skill_predictor( PARERIGHT : EOM
l2_reg  EQUAL  regularizers DOT l2( PARERIGHT  EOM
embedding_layer  EQUAL  Embedding( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
history  EQUAL  History( PARERIGHT  EOM
logfile  EQUAL   DOT format( PARERIGHT  EOM
csv_logger  EQUAL  CSVLogger( PARERIGHT  EOM
scheduler  EQUAL  LearningRateScheduler(lambda x: learning_rate*10**( PARERIGHT  COMMA  verbose EQUAL  PARERIGHT  EOM
t1  EQUAL  time DOT time( PARERIGHT  EOM
model DOT fit(train_seq COMMA train_labels DOT astype( PARERIGHT  COMMA batch_size EQUAL  COMMA epochs EQUAL  COMMA validation_data EQUAL  COMMA shuffle EQUAL  COMMA callbacks EQUAL [] COMMA verbose EQUAL  PARERIGHT  EOM
t2  EQUAL  time DOT time( PARERIGHT  EOM
model DOT save( DOT format( PARERIGHT  PARERIGHT  EOM
with open( DOT format( PARERIGHT  COMMA   PARERIGHT  as res_file: EOM
res_file DOT write(str( PARERIGHT  PARERIGHT  EOM
return model COMMA  historyimport numpy as np EOM
import pickle EOM
import sys EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM COMMA  SimpleRNN EOM
from keras DOT callbacks import ModelCheckpoint EOM
from keras DOT utils import np_utils EOM
from keras DOT models import load_model EOM
with open( PARERIGHT  as input: EOM
cached_data  EQUAL  pickle DOT load( PARERIGHT  EOM
char_to_int  EQUAL  cached_data[] EOM
int_to_char  EQUAL  cached_data[] EOM
X  EQUAL  cached_data[] EOM
y  EQUAL  cached_data[] EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(100 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
filepath EQUAL  EOM
checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
callbacks_list  EQUAL  [] EOM
model DOT fit( PARERIGHT  EOM
model DOT save( PARERIGHT from keras import backend as K EOM
from keras DOT layers import Dense COMMA  Lambda EOM
from keras DOT models import Sequential COMMA  Graph EOM
def get_item_subgraph( PARERIGHT : EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Flatten COMMA  Dropout EOM
number_of_time_stamps  EQUAL  200 EOM
number_of_in_channels  EQUAL  55 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Flatten(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def get_item_lstm_subgraph( PARERIGHT : EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Flatten COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM COMMA  GRU EOM
from keras DOT regularizers import l2 EOM
_num_of_hidden_units  EQUAL  100 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def get_user_subgraph( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def per_char_loss( PARERIGHT : EOM
alls  EQUAL  X DOT values( PARERIGHT  EOM
concatenated  EQUAL  K DOT concatenate( PARERIGHT  EOM
reshaped  EQUAL  K DOT mean(K DOT reshape(concatenated COMMA  (K DOT shape( PARERIGHT [] COMMA  3 COMMA  30 PARERIGHT  PARERIGHT  COMMA  axis EQUAL  PARERIGHT  EOM
return K DOT softmax(K DOT reshape(reshaped COMMA  ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
def identity_loss( PARERIGHT : EOM
def get_graph( PARERIGHT : EOM
batch_input_shape  EQUAL  ( PARERIGHT  EOM
magic_num  EQUAL  90 EOM
model  EQUAL  Graph( PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT add_input( DOT format( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  batch_input_shape EQUAL  PARERIGHT  EOM
model DOT add_shared_node(get_item_subgraph(( PARERIGHT  COMMA  latent_dim PARERIGHT  COMMA name EQUAL  COMMA ts EQUAL [] COMMA merge_mode EQUAL  PARERIGHT  EOM
model DOT add_node(Lambda( PARERIGHT  COMMA name EQUAL  COMMA input EQUAL  PARERIGHT  EOM
model DOT add_output( PARERIGHT  EOM
return model EOM
def get_graph_lstm( PARERIGHT : EOM
batch_input_shape  EQUAL  ( PARERIGHT  EOM
magic_num  EQUAL  90 EOM
model  EQUAL  Graph( PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT add_input( DOT format( PARERIGHT  COMMA  batch_input_shape EQUAL  PARERIGHT  EOM
model DOT add_shared_node(get_item_lstm_subgraph( PARERIGHT  COMMA name EQUAL  COMMA ts EQUAL [] COMMA merge_mode EQUAL  PARERIGHT  EOM
model DOT add_node(Lambda( PARERIGHT  COMMA name EQUAL  COMMA input EQUAL  PARERIGHT  EOM
model DOT add_output( PARERIGHT  EOM
return modelfrom keras DOT layers import Dense COMMA  Activation EOM
from keras DOT layers import LSTM EOM
from keras DOT models import Sequential EOM
from keras DOT optimizers import RMSprop EOM
from text_model import * EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(512 COMMA  batch_input_shape EQUAL (batch_size COMMA maxlen COMMA  len( PARERIGHT  PARERIGHT  COMMA  return_sequences EQUAL  COMMA  stateful EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
from keras import backend as K EOM
from keras import layers EOM
from keras import regularizers EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT models import load_model EOM
from keras DOT models import Sequential EOM
from keras DOT utils import plot_model EOM
def lstmModel( PARERIGHT : EOM
name  EQUAL   + activation EOM
lstm  EQUAL  LSTM(n_channels COMMA nput_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA go_backwards EQUAL  COMMA unroll EQUAL  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
folder    EQUAL  EOM
name_h5   EQUAL  folder + name + EOM
name_png  EQUAL  folder + name + EOM
plot_model( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
return model COMMA  name EOM
import os EOM
import time EOM
import numpy as np EOM
from functools import wraps EOM
from sklearn DOT externals import joblib EOM
from sklearn DOT preprocessing import LabelBinarizer EOM
from sklearn DOT model_selection import cross_val_score EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT models import load_model COMMA  Sequential EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  LSTM EOM
N_FEATURES  EQUAL  10000 EOM
DOC_LEN  EQUAL  60 EOM
N_CLASSES  EQUAL  2 EOM
def timeit( PARERIGHT : EOM
def wrapper( PARERIGHT : EOM
start  EQUAL  time DOT time( PARERIGHT  EOM
result  EQUAL  func( PARERIGHT  EOM
return result COMMA  time DOT time( PARERIGHT  - start EOM
return wrapper EOM
def documents( PARERIGHT : EOM
return list(corpus DOT reviews( PARERIGHT  PARERIGHT  EOM
def continuous( PARERIGHT : EOM
return list(corpus DOT scores( PARERIGHT  PARERIGHT  EOM
def make_categorical( PARERIGHT : EOM
return np DOT digitize(continuous( PARERIGHT  COMMA  [] PARERIGHT  EOM
def binarize( PARERIGHT : EOM
return np DOT digitize(continuous( PARERIGHT  COMMA  [] PARERIGHT  EOM
def build_nn( PARERIGHT : EOM
nn DOT add(Dense(500 COMMA  activation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
nn DOT add(Dense( PARERIGHT  PARERIGHT  EOM
nn DOT add(Dense( PARERIGHT  PARERIGHT  EOM
nn DOT compile( PARERIGHT  EOM
return nn EOM
def build_lstm( PARERIGHT : EOM
lstm  EQUAL  Sequential( PARERIGHT  EOM
lstm DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
lstm DOT compile( PARERIGHT  EOM
return lstm EOM
def train_model( PARERIGHT : EOM
corpus  EQUAL  PickledAmazonReviewsReader( PARERIGHT  EOM
X  EQUAL  documents( PARERIGHT  EOM
y  EQUAL  binarize( PARERIGHT  EOM
scores  EQUAL  cross_val_score( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
if saveto: EOM
model DOT steps[][] DOT model DOT save( PARERIGHT  EOM
model DOT steps DOT pop( PARERIGHT  EOM
joblib DOT dump( PARERIGHT  EOM
return scores EOM
if __name__  EQUAL  EQUAL  : EOM
from sklearn DOT pipeline import Pipeline EOM
from sklearn DOT feature_extraction DOT text import TfidfVectorizer EOM
from reader import PickledReviewsReader EOM
from am_reader import PickledAmazonReviewsReader EOM
from transformer import TextNormalizer COMMA  GensimDoc2Vectorizer EOM
from transformer import KeyphraseExtractor COMMA  GensimTfidfVectorizer EOM
cpath  EQUAL  EOM
mpath  EQUAL  {: COMMA :} EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential COMMA  load_model EOM
from keras DOT optimizers import Adam COMMA  RMSprop EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
from keras DOT layers DOT convolutional import ( PARERIGHT  EOM
from collections import deque EOM
import sys EOM
class ResearchModels( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT seq_length  EQUAL  seq_length EOM
self DOT load_model  EQUAL  load_model EOM
self DOT saved_model  EQUAL  saved_model EOM
self DOT nb_classes  EQUAL  nb_classes EOM
self DOT feature_queue  EQUAL  deque( PARERIGHT  EOM
metrics  EQUAL  [] EOM
if self DOT nb_classes > EQUAL  10: EOM
metrics DOT append( PARERIGHT  EOM
if self DOT saved_model is not None: EOM
self DOT model  EQUAL  load_model( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT lstm( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT lrcn( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT mlp( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT conv_3d( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT c3d( PARERIGHT  EOM
else: EOM
sys DOT exit( PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
def lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def lrcn( PARERIGHT : EOM
model DOT add(TimeDistributed(Conv2D(32 COMMA  ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA tivation EQUAL  COMMA  padding EQUAL  PARERIGHT  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(32 COMMA  ( PARERIGHT  COMMA ernel_initializer EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(64 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(64 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(128 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(128 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(256 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(256 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(512 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(512 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Flatten( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def mlp( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def conv_3d( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv3D( ( PARERIGHT  COMMA  activation EQUAL  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(128 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(128 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(256 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(256 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def c3d( PARERIGHT : EOM
model DOT add(Conv3D(64 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  COMMA input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA order_mode EQUAL  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(128 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA order_mode EQUAL  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(256 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(256 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA order_mode EQUAL  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(512 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(512 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA order_mode EQUAL  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(512 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(512 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(ZeroPadding3D(padding EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA order_mode EQUAL  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return modelimport keras EOM
from keras DOT models import Sequential COMMA  save_model EOM
from keras DOT layers import LSTM EOM
import keras DOT backend as K EOM
base_path  EQUAL  EOM
backend  EQUAL  K DOT backend( PARERIGHT  EOM
version  EQUAL  keras DOT __version__ EOM
major_version  EQUAL  int( PARERIGHT  EOM
n_in  EQUAL  4 EOM
n_out  EQUAL  6 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(n_out COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT save( DOT format( PARERIGHT  PARERIGHT from keras DOT models import Sequential EOM
from keras import layers EOM
import numpy as np EOM
from six DOT moves import range EOM
import sys EOM
import os EOM
from keras DOT models import load_model EOM
import keras EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dense EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT layers import Bidirectional EOM
class SenseModel( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT lstmunits  EQUAL lstmunits EOM
self DOT lstmLayerNum  EQUAL  lstmLayerNum EOM
self DOT DenseUnits  EQUAL  DenseUnits EOM
self DOT charlenth  EQUAL  charlenth EOM
self DOT datalenth  EQUAL  datalenth EOM
self DOT buildmodel( PARERIGHT  EOM
def buildmodel( PARERIGHT : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add(Dense(self DOT DenseUnits COMMA input_shape EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
self DOT model DOT add(Bidirectional(layers DOT LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Bidirectional(layers DOT LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
self DOT model DOT summary( PARERIGHT  EOM
def trainModel( PARERIGHT : EOM
for cur in range( PARERIGHT : EOM
self DOT model DOT fit( PARERIGHT  EOM
mdname EQUAL savename++str( PARERIGHT  EOM
self DOT model DOT save( PARERIGHT  EOM
if __name__  EQUAL  EQUAL : EOM
a  EQUAL  SenseModel( PARERIGHT  EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Input EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
import numpy as np EOM
import keras DOT preprocessing DOT text as prep EOM
import keras DOT preprocessing DOT sequence as seq EOM
from keras import backend as K EOM
root EQUAL  EOM
corpusFile EQUAL root+ EOM
labelsFile EQUAL root+ EOM
text EQUAL file DOT readlines( PARERIGHT  EOM
toknizer DOT fit_on_texts( PARERIGHT  EOM
data EQUAL toknizer DOT texts_to_sequences( PARERIGHT  EOM
data EQUAL np DOT asanyarray( PARERIGHT  EOM
maxlen EQUAL [] EOM
maxlen EQUAL maxlen[] EOM
vocabSize  EQUAL  toknizer DOT word_index DOT __len__( PARERIGHT +2 EOM
data EQUAL seq DOT pad_sequences( PARERIGHT  EOM
file DOT close( PARERIGHT  EOM
file EQUAL open( PARERIGHT  EOM
labels EQUAL [] for i in file DOT readlines( PARERIGHT ] EOM
X_train EQUAL data EOM
Y_train EQUAL labels EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(labels[] DOT __len__( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
get_lstm_layer_output  EQUAL  K DOT function([] DOT input] COMMA [] PARERIGHT  EOM
lstmout EQUAL get_lstm_layer_output( PARERIGHT [] EOM
file EQUAL open( PARERIGHT  EOM
for i in lstmout: EOM
tmp EQUAL str( PARERIGHT  DOT replace( PARERIGHT  DOT replace( PARERIGHT  DOT replace( PARERIGHT  DOT strip( PARERIGHT  EOM
file DOT write( PARERIGHT  EOM
file DOT close( PARERIGHT  EOM
from __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
from absl DOT testing import parameterized EOM
import numpy as np EOM
from tensorflow DOT python import keras EOM
from tensorflow DOT python DOT eager import context EOM
from tensorflow DOT python DOT keras import keras_parameterized EOM
from tensorflow DOT python DOT keras import testing_utils EOM
from tensorflow DOT python DOT platform import test EOM
from tensorflow DOT python DOT training import adam EOM
from tensorflow DOT python DOT training import gradient_descent EOM
class LSTMLayerTest( PARERIGHT : EOM
def test_return_sequences_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA return_sequences EOM
def test_static_shape_inference_LSTM( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
inputs  EQUAL  keras DOT layers DOT Dense(embedding_dim COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
outputs  EQUAL  model DOT layers[] DOT output EOM
self DOT assertEqual(outputs DOT shape DOT as_list( PARERIGHT  COMMA  [] PARERIGHT  EOM
def test_dynamic_behavior_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
layer  EQUAL  keras DOT layers DOT LSTM(units COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile(mspropmse EOM
x  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_dropout_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA dropout: 0 DOT 1} COMMA put_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
def test_implementation_mode_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA implementation EOM
def test_constraints_LSTM( PARERIGHT : EOM
embedding_dim  EQUAL  4 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
k_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
r_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
b_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
layer  EQUAL  layer_class(5 COMMA return_sequences EQUAL  COMMA weights EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA kernel_constraint EQUAL  COMMA recurrent_constraint EQUAL  COMMA bias_constraint EQUAL  PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
def test_with_masking_layer_LSTM( PARERIGHT : EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT abs(np DOT random DOT random(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
targets / EQUAL  targets DOT sum( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Masking(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(layer_class( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL  COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
def test_masking_with_stacking_LSTM( PARERIGHT : EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT abs(np DOT random DOT random(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
targets / EQUAL  targets DOT sum( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Masking(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
lstm_cells  EQUAL  [] EOM
model DOT add(keras DOT layers DOT RNN( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL  COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
def test_from_config_LSTM( PARERIGHT : EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
for stateful in ( PARERIGHT : EOM
l1  EQUAL  layer_class( PARERIGHT  EOM
l2  EQUAL  layer_class DOT from_config(l1 DOT get_config( PARERIGHT  PARERIGHT  EOM
assert l1 DOT get_config( PARERIGHT   EQUAL ( PARERIGHT  EOM
def test_specify_initial_state_keras_tensor( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
if len( PARERIGHT   EQUAL       output  EQUAL  layer( PARERIGHT  EOM
else: EOM
output  EQUAL  layer( PARERIGHT  EOM
assert initial_state[] in layer DOT _inbound_nodes[] DOT input_tensors EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_specify_initial_state_non_keras_tensor( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [keras DOT backend DOT random_normal_variable( PARERIGHT  COMMA  0 COMMA  1 PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
output  EQUAL  layer( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_reset_states_with_values( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
assert len( PARERIGHT   EQUAL     assert layer DOT states[] is not None EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA np DOT zeros(keras DOT backend DOT int_shape( PARERIGHT  PARERIGHT  COMMA atol EQUAL  PARERIGHT  EOM
state_shapes  EQUAL  [] EOM
values  EQUAL  [] EOM
if len( PARERIGHT   EQUAL       values  EQUAL  values[] EOM
layer DOT reset_states( PARERIGHT  EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA np DOT ones(keras DOT backend DOT int_shape( PARERIGHT  PARERIGHT  COMMA atol EQUAL  PARERIGHT  EOM
with self DOT assertRaises( PARERIGHT : EOM
layer DOT reset_states([] * (len( PARERIGHT  + 1 PARERIGHT  PARERIGHT  EOM
def test_specify_state_with_masking( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
_  EQUAL  keras DOT layers DOT Masking( PARERIGHT ( PARERIGHT  EOM
initial_state  EQUAL  [] EOM
output  EQUAL  keras DOT layers DOT LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL  COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_return_state( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(batch_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
outputs  EQUAL  layer( PARERIGHT  EOM
state  EQUAL  outputs[] EOM
assert len( PARERIGHT   EQUAL     model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
state  EQUAL  model DOT predict( PARERIGHT  EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA  state COMMA  atol EQUAL  PARERIGHT  EOM
def test_state_reuse( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(batch_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
outputs  EQUAL  layer( PARERIGHT  EOM
output COMMA  state  EQUAL  outputs[] COMMA  outputs[] EOM
output  EQUAL  keras DOT layers DOT LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
outputs  EQUAL  model DOT predict( PARERIGHT  EOM
def test_initial_states_as_other_inputs( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
num_states  EQUAL  2 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
main_inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
inputs  EQUAL  [] + initial_state EOM
layer  EQUAL  layer_class( PARERIGHT  EOM
output  EQUAL  layer( PARERIGHT  EOM
assert initial_state[] in layer DOT _inbound_nodes[] DOT input_tensors EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
main_inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_regularizers_LSTM( PARERIGHT : EOM
embedding_dim  EQUAL  4 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
layer  EQUAL  layer_class(5 COMMA return_sequences EQUAL  COMMA weights EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA recurrent_regularizer EQUAL ( PARERIGHT  COMMA bias_regularizer EQUAL  COMMA activity_regularizer EQUAL  PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
self DOT assertEqual(len( PARERIGHT  COMMA  3 PARERIGHT  EOM
x  EQUAL  keras DOT backend DOT variable(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
layer( PARERIGHT  EOM
if context DOT executing_eagerly( PARERIGHT : EOM
self DOT assertEqual(len( PARERIGHT  COMMA  4 PARERIGHT  EOM
else: EOM
self DOT assertEqual(len(layer DOT get_losses_for( PARERIGHT  PARERIGHT  COMMA  1 PARERIGHT  EOM
def test_statefulness_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Embedding(4 COMMA embedding_dim COMMA mask_zero EQUAL  COMMA input_length EQUAL  COMMA atch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
layer  EQUAL  layer_class( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile(optimizer EQUAL ( PARERIGHT  COMMA oss EQUAL  COMMA  run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
out1  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertEqual(out1 DOT shape COMMA  ( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch(ones(( PARERIGHT  PARERIGHT  COMMA  np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
out2  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out1 DOT max( PARERIGHT  COMMA  out2 DOT max( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
out3  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out2 DOT max( PARERIGHT  COMMA  out3 DOT max( PARERIGHT  PARERIGHT  EOM
model DOT reset_states( PARERIGHT  EOM
out4  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertAllClose( PARERIGHT  EOM
out5  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out4 DOT max( PARERIGHT  COMMA  out5 DOT max( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
left_padded_input  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
left_padded_input[]  EQUAL  0 EOM
left_padded_input[]  EQUAL  0 EOM
out6  EQUAL  model DOT predict( PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
right_padded_input  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
right_padded_input[]  EQUAL  0 EOM
right_padded_input[]  EQUAL  0 EOM
out7  EQUAL  model DOT predict( PARERIGHT  EOM
self DOT assertAllClose( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
test DOT main( PARERIGHT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
import numpy as np EOM
data  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
labels  EQUAL  np DOT random DOT randint(2 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
import numpy as np EOM
data  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
labels  EQUAL  np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  EOM
one_hot_labels  EQUAL  keras DOT utils DOT to_categorical( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT optimizers import SGD EOM
import numpy as np EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  keras DOT utils DOT to_categorical(np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  COMMA  num_classes EQUAL  PARERIGHT  EOM
x_test  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_test  EQUAL  keras DOT utils DOT to_categorical(np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  COMMA  num_classes EQUAL  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
sgd  EQUAL  SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  np DOT random DOT randint(2 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  EOM
x_test  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_test  EQUAL  np DOT random DOT randint(2 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
import keras EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers import Conv2D COMMA  MaxPooling2D EOM
from keras DOT optimizers import SGD EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  keras DOT utils DOT to_categorical(np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  COMMA  num_classes EQUAL  PARERIGHT  EOM
x_test  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_test  EQUAL  keras DOT utils DOT to_categorical(np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  COMMA  num_classes EQUAL  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(32 COMMA  ( PARERIGHT  COMMA  activation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(32 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
sgd  EQUAL  SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT layers import Dense COMMA  Dropout EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT layers import Dense COMMA  Dropout EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Conv1D COMMA  GlobalAveragePooling1D COMMA  MaxPooling1D EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D(64 COMMA  3 COMMA  activation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(GlobalAveragePooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT layers import LSTM COMMA  Dense EOM
import numpy as np EOM
data_dim  EQUAL  16 EOM
timesteps  EQUAL  8 EOM
num_classes  EQUAL  10 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
from keras DOT layers import Dense COMMA  LSTM COMMA  Activation COMMA  BatchNormalization COMMA  Dropout COMMA  initializers COMMA  Input EOM
from keras DOT models import Sequential EOM
from keras DOT optimizers import SGD COMMA  RMSprop EOM
from keras DOT models import load_model EOM
from keras DOT initializers import Constant EOM
import keras DOT backend as K EOM
from keras DOT utils DOT generic_utils import get_custom_objects EOM
from keras DOT backend DOT tensorflow_backend import _to_tensor EOM
def relu_limited( PARERIGHT : EOM
return K DOT relu( PARERIGHT  EOM
get_custom_objects( PARERIGHT  DOT update({: Activation( PARERIGHT } PARERIGHT  EOM
def risk_estimation( PARERIGHT : EOM
return -100 DOT  * K DOT mean(( PARERIGHT  * y_pred PARERIGHT  EOM
class WindPuller( PARERIGHT : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add(Dropout(rate EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
self DOT model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense(1 COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  RMSprop( PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
def fit( PARERIGHT : EOM
self DOT model DOT fit( PARERIGHT  EOM
def save( PARERIGHT : EOM
self DOT model DOT save( PARERIGHT  EOM
def load_model( PARERIGHT : EOM
self DOT model  EQUAL  load_model( PARERIGHT  EOM
return self EOM
def evaluate( PARERIGHT : EOM
return self DOT model DOT evaluate( PARERIGHT  EOM
def predict( PARERIGHT : EOM
return self DOT model DOT predict( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Dense EOM
from keras DOT optimizers import SGD EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
import numpy as np EOM
import openWav EOM
def train( PARERIGHT : EOM
timesteps  EQUAL  10 EOM
data_dim  EQUAL  len( PARERIGHT  EOM
batchsize  EQUAL  10 EOM
num_hidden_dimensions  EQUAL  data_dim/2 EOM
num_frequency_dimensions  EQUAL  data_dim EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
exit EOM
model DOT fit( PARERIGHT  EOM
model DOT save_weights( PARERIGHT  EOM
return model EOM
def predict( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT load_weights( PARERIGHT  EOM
return model EOM
x_train COMMA  y_train COMMA  x_test COMMA  y_test COMMA  sr  EQUAL  openWav DOT lstmData( PARERIGHT  EOM
model  EQUAL  train( PARERIGHT     from keras DOT layers DOT convolutional import Conv2DTranspose  COMMA  Conv1D COMMA  Conv2D COMMA Convolution3D COMMA  MaxPooling2D COMMA UpSampling1D COMMA UpSampling2D COMMA UpSampling3D EOM
from keras DOT layers import Input COMMA LSTM COMMA Bidirectional COMMA TimeDistributed COMMA Embedding COMMA  Dense COMMA  Dropout COMMA  Activation COMMA  Flatten COMMA    Reshape COMMA  Flatten COMMA  Lambda EOM
from keras DOT layers DOT noise import GaussianDropout COMMA  GaussianNoise EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras import initializers EOM
from keras import regularizers EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers DOT advanced_activations import LeakyReLU EOM
import numpy as np EOM
import pandas as pd EOM
import os EOM
def create_LSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if embedding_matrix ! EQUAL  []: EOM
embedding_layer  EQUAL  Embedding( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(LSTM(150 COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(150 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
if __name__  EQUAL  EQUAL  : EOM
model_id  EQUAL  EOM
model  EQUAL  create_LSTM( PARERIGHT from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout EOM
from keras DOT layers import LSTM COMMA  Merge COMMA  Dense EOM
def VQA_MODEL( PARERIGHT : EOM
image_feature_size  EQUAL  4096 EOM
word_feature_size  EQUAL  300 EOM
number_of_LSTM  EQUAL  3 EOM
number_of_hidden_units_LSTM  EQUAL  512 EOM
max_length_questions  EQUAL  30 EOM
number_of_dense_layers  EQUAL  3 EOM
number_of_hidden_units  EQUAL  1024 EOM
activation_function  EQUAL  EOM
dropout_pct  EQUAL  0 DOT 5 EOM
model_image  EQUAL  Sequential( PARERIGHT  EOM
model_image DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language  EQUAL  Sequential( PARERIGHT  EOM
model_language DOT add(LSTM(number_of_hidden_units_LSTM COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
for _ in xrange( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
import logging EOM
from rasa_core DOT policies DOT keras_policy import KerasPolicy EOM
logger  EQUAL  logging DOT getLogger( PARERIGHT  EOM
class BotPolicy( PARERIGHT : EOM
def model_architecture( PARERIGHT : EOM
from keras DOT layers import LSTM COMMA  Activation COMMA  Masking COMMA  Dense EOM
from keras DOT models import Sequential EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Masking COMMA  LSTM COMMA  Dense COMMA  TimeDistributed COMMA  Activation EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if len( PARERIGHT   EQUAL             model DOT add(Masking( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             model DOT add(Masking(mask_value EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
raise ValueError(th of output_shape  EQUAL (len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
logger DOT debug(model DOT summary( PARERIGHT  PARERIGHT  EOM
return modelimport keras DOT backend as K EOM
import tensorflow as tf EOM
from keras import optimizers EOM
from keras import losses EOM
from keras import metrics EOM
from keras import models EOM
from keras import layers EOM
from keras import callbacks EOM
from keras import regularizers EOM
from keras DOT utils import np_utils EOM
from keras DOT models import Sequential EOM
from keras DOT models import Model EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import GRU EOM
from keras DOT layers import Masking EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import Activation EOM
from keras DOT layers import Lambda EOM
from keras DOT layers import Bidirectional EOM
from keras DOT layers import BatchNormalization EOM
from keras DOT layers import Input EOM
from keras DOT constraints import max_norm EOM
def model_3_LSTM_advanced1( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 2 COMMA  noise_shape EQUAL ( PARERIGHT   PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Var DOT Dense_Unit COMMA  activation EQUAL  COMMA kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA    kernel_constraint EQUAL ( PARERIGHT  COMMA ropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  ropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA activity_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  out EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 5 COMMA  noise_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Y_train DOT shape[] COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def model_3_LSTM_advanced2( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 2 COMMA  noise_shape EQUAL ( PARERIGHT   PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Var DOT Dense_Unit COMMA  activation EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  COMMA kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA    kernel_constraint EQUAL ( PARERIGHT  COMMA ropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  ropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  out EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 5 COMMA  noise_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Y_train DOT shape[] COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def model_3_LSTM_advanced3( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 6 COMMA  noise_shape EQUAL ( PARERIGHT   PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Var DOT Dense_Unit COMMA  activation EQUAL  COMMA kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA    kernel_constraint EQUAL ( PARERIGHT  COMMA ropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  ropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  out EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 5 COMMA  noise_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Y_train DOT shape[] COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def model_3_LSTM_advanced4( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 6 COMMA  noise_shape EQUAL ( PARERIGHT   PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Var DOT Dense_Unit COMMA  activation EQUAL  COMMA kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA    kernel_regularizer EQUAL ( PARERIGHT  COMMA kernel_constraint EQUAL ( PARERIGHT  COMMA ropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  ropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  out EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 5 COMMA  noise_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Y_train DOT shape[] COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def model_3_LSTM_advanced5( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 5 COMMA  noise_shape EQUAL ( PARERIGHT   PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Var DOT Dense_Unit COMMA  activation EQUAL  COMMA kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA    kernel_regularizer EQUAL ( PARERIGHT  COMMA kernel_constraint EQUAL ( PARERIGHT  COMMA  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA   PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  EOM
model DOT add(Dropout(0 DOT 5 COMMA  noise_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Y_train DOT shape[] COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def model_3_LSTM_advanced6( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Var DOT Dense_Unit COMMA  activation EQUAL  COMMA kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA    kernel_regularizer EQUAL ( PARERIGHT  COMMA kernel_constraint EQUAL ( PARERIGHT  COMMA  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA   PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  EOM
model DOT add(Dropout(0 DOT 5 COMMA  noise_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Y_train DOT shape[] COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def model_3_LSTM_advanced7( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Var DOT Dense_Unit COMMA  activation EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA    kernel_regularizer EQUAL ( PARERIGHT  COMMA kernel_constraint EQUAL ( PARERIGHT  COMMA  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA   PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  EOM
model DOT add(Dropout(0 DOT 5 COMMA  noise_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Y_train DOT shape[] COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model import tensorflow as tf EOM
from tensorflow import keras EOM
import numpy as np EOM
from keras import Sequential EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import LSTM COMMA Bidirectional COMMA Embedding COMMA Dropout EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers import GlobalMaxPooling1D COMMA Concatenate EOM
import numpy as np EOM
import keras EOM
import tensorflow as tf EOM
from keras DOT layers import LSTM COMMA Bidirectional COMMA Embedding COMMA Dropout COMMA Dense EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT constraints import maxnorm EOM
from keras DOT engine import Input EOM
from keras DOT engine import Model EOM
from keras DOT layers import Dropout COMMA  Dense COMMA  Bidirectional COMMA  LSTM COMMA  \ EOM
Embedding COMMA  GaussianNoise COMMA  Activation COMMA  Flatten COMMA  \ EOM
RepeatVector COMMA  MaxoutDense COMMA  GlobalMaxPooling1D COMMA  \ EOM
Convolution1D COMMA  MaxPooling1D COMMA  concatenate COMMA  Conv1D COMMA GaussianNoise EOM
from keras DOT regularizers import l2 EOM
from keras import initializers EOM
from keras import backend as K COMMA  regularizers COMMA  constraints COMMA  initializers EOM
from keras DOT engine DOT topology import Layer EOM
class Attention( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT attention_size  EQUAL  attention_size EOM
super( PARERIGHT  DOT __init__( PARERIGHT  EOM
def build( PARERIGHT : EOM
self DOT W  EQUAL  self DOT add_weight(name EQUAL ( PARERIGHT  COMMA hape EQUAL ( PARERIGHT  COMMA initializer EQUAL  COMMA trainable EQUAL  PARERIGHT  EOM
self DOT b  EQUAL  self DOT add_weight(name EQUAL ( PARERIGHT  COMMA hape EQUAL ( PARERIGHT  COMMA initializer EQUAL  COMMA trainable EQUAL  PARERIGHT  EOM
self DOT u  EQUAL  self DOT add_weight(name EQUAL ( PARERIGHT  COMMA hape EQUAL ( PARERIGHT  COMMA initializer EQUAL  COMMA trainable EQUAL  PARERIGHT  EOM
super( PARERIGHT  DOT build( PARERIGHT  EOM
def call( PARERIGHT : EOM
et  EQUAL  K DOT tanh(K DOT dot( PARERIGHT  + self DOT b PARERIGHT  EOM
at  EQUAL  K DOT softmax(K DOT squeeze(K DOT dot( PARERIGHT  COMMA  axis EQUAL  PARERIGHT  PARERIGHT  EOM
if mask is not None: EOM
at * EQUAL  K DOT cast(mask COMMA  K DOT floatx( PARERIGHT  PARERIGHT  EOM
atx  EQUAL  K DOT expand_dims( PARERIGHT  EOM
ot  EQUAL  atx * x EOM
output  EQUAL  K DOT sum( PARERIGHT  EOM
return output EOM
def compute_mask( PARERIGHT : EOM
return None EOM
def compute_output_shape( PARERIGHT : EOM
return ( PARERIGHT  EOM
def simple_nn( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT GlobalAveragePooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(optimizer EQUAL ( PARERIGHT  COMMA loss EQUAL  COMMA metrics EQUAL [] PARERIGHT  EOM
return model EOM
def simple_nn_l2( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT GlobalAveragePooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense(16 COMMA  kernel_regularizer EQUAL ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Activation EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT layers import Bidirectional EOM
import keras EOM
def window_transform_series( PARERIGHT : EOM
X  EQUAL  [] EOM
y  EQUAL  [] EOM
X  EQUAL  [] for i in range( PARERIGHT ] EOM
y  EQUAL  [] for i in range( PARERIGHT ] EOM
X  EQUAL  np DOT asarray( PARERIGHT  EOM
X DOT shape  EQUAL  (np DOT shape( PARERIGHT [] PARERIGHT  EOM
y  EQUAL  np DOT asarray( PARERIGHT  EOM
y DOT shape  EQUAL  (len( PARERIGHT  COMMA 1 PARERIGHT  EOM
return X COMMA y EOM
def build_part1_RNN( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(5 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def cleaned_text( PARERIGHT : EOM
import re EOM
text  EQUAL  text DOT replace( PARERIGHT  EOM
text  EQUAL  re DOT sub( PARERIGHT  EOM
return text EOM
def window_transform_text( PARERIGHT : EOM
inputs EQUAL  [] for i in range(0 COMMA len( PARERIGHT -window_size COMMA  step_size PARERIGHT ] EOM
outputs EQUAL  [] for i in range(0 COMMA len( PARERIGHT -window_size COMMA  step_size PARERIGHT ] EOM
return inputs COMMA outputs EOM
def build_part2_RNN( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(200 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def build_part2_RNN_Bi( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return modelimport pytest EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras import Input COMMA  Model EOM
from keras DOT layers import Conv2D COMMA  Bidirectional EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(2 COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
inner_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_lstm  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  name EQUAL  PARERIGHT ( PARERIGHT  EOM
encoder  EQUAL  Model( PARERIGHT  EOM
outer_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_encoder  EQUAL  TimeDistributed( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
preds  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
def test_plot_sequential_embedding( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT from keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Input COMMA  Dense COMMA  Conv1D COMMA  MaxPooling1D COMMA  GlobalAveragePooling1D COMMA  Dropout COMMA  Reshape COMMA  BatchNormalization EOM
from keras DOT models import Model EOM
from keras DOT layers DOT advanced_activations import LeakyReLU EOM
def build_model_LSTM( PARERIGHT : EOM
inputs  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
seq_input_drop  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
if lstm_attention: EOM
lstm_output  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
lstm_output COMMA  _  EQUAL  AttentionWeightedAverage( PARERIGHT ( PARERIGHT  EOM
else: EOM
lstm_output  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
second_last  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
second_last_drop  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
outputs  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
return Model( PARERIGHT  EOM
def build_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D(100 COMMA  kernel_size COMMA  activation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(GlobalAveragePooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return modelfrom abc import ABCMeta COMMA  abstractmethod EOM
import numpy as np EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from scipy import stats EOM
from sklearn DOT cross_validation import StratifiedShuffleSplit EOM
from keras DOT callbacks import ModelCheckpoint EOM
from OriKerasExtension DOT P300Prediction import create_target_table COMMA  accuracy_by_repetition EOM
from OriKerasExtension DOT ThesisHelper import readCompleteMatFile COMMA  ExtractDataVer4 EOM
def create_train_data( PARERIGHT : EOM
all_positive_train  EQUAL  [] EOM
all_negative_train  EQUAL  [] EOM
data_for_eval  EQUAL  ExtractDataVer4( PARERIGHT  EOM
temp_data_for_eval  EQUAL  downsample_data( PARERIGHT  EOM
all_tags  EQUAL  gcd_res[][]  EQUAL  EQUAL  1] EOM
all_data  EQUAL  temp_data_for_eval[]  EQUAL  EQUAL  1] EOM
categorical_tags  EQUAL  to_categorical( PARERIGHT  EOM
return all_data COMMA  all_tags EOM
class GeneralModel( PARERIGHT : EOM
__metaclass__  EQUAL  ABCMeta EOM
def predict( PARERIGHT : EOM
pass EOM
def fit( PARERIGHT : EOM
pass EOM
def reset( PARERIGHT : EOM
pass EOM
def get_name( PARERIGHT : EOM
pass EOM
def get_params( PARERIGHT : EOM
pass EOM
class LSTM_EEG( PARERIGHT : EOM
def get_params( PARERIGHT : EOM
super( PARERIGHT  DOT get_params( PARERIGHT  EOM
return self DOT model DOT get_weights( PARERIGHT  EOM
def get_name( PARERIGHT : EOM
super( PARERIGHT  DOT get_name( PARERIGHT  EOM
return self DOT __class__ DOT __name__ +  + str( PARERIGHT  +  + str( PARERIGHT  EOM
def reset( PARERIGHT : EOM
super( PARERIGHT  DOT reset( PARERIGHT  EOM
self DOT model DOT set_weights( PARERIGHT  EOM
def __init__( PARERIGHT : EOM
super( PARERIGHT  DOT __init__( PARERIGHT  EOM
self DOT positive_weight  EQUAL  positive_weight EOM
self DOT _num_of_hidden_units  EQUAL  _num_of_hidden_units EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT regularizers import l2 EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add(LSTM(input_shape EQUAL ( PARERIGHT  COMMA  output_dim EQUAL  COMMA  input_length EQUAL  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense(2 COMMA  W_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
self DOT original_weights  EQUAL  self DOT model DOT get_weights( PARERIGHT  EOM
def fit( PARERIGHT : EOM
_y  EQUAL  to_categorical( PARERIGHT  EOM
checkpointer  EQUAL  ModelCheckpoint( PARERIGHT  EOM
sss  EQUAL  list(StratifiedShuffleSplit( PARERIGHT  PARERIGHT  EOM
self DOT model DOT fit(stats DOT zscore( PARERIGHT  COMMA  _y[][]] COMMA epoch EQUAL  COMMA  show_accuracy EQUAL  COMMA  verbose EQUAL  COMMA  validation_data EQUAL (ats DOT zscore( PARERIGHT  COMMA  _y[][]] PARERIGHT  COMMA ss_weight EQUAL  COMMA  1: self DOT positive_weight} COMMA callbacks EQUAL [] PARERIGHT  EOM
def predict( PARERIGHT : EOM
return self DOT model DOT predict(stats DOT zscore( PARERIGHT  PARERIGHT  EOM
class LSTM_CNN_EEG( PARERIGHT : EOM
def get_params( PARERIGHT : EOM
super( PARERIGHT  DOT get_params( PARERIGHT  EOM
return self DOT model DOT get_weights( PARERIGHT  EOM
def get_name( PARERIGHT : EOM
super( PARERIGHT  DOT get_name( PARERIGHT  EOM
return self DOT __class__ DOT __name__ +  + str( PARERIGHT  +  + str( PARERIGHT  EOM
def reset( PARERIGHT : EOM
super( PARERIGHT  DOT reset( PARERIGHT  EOM
self DOT model DOT set_weights( PARERIGHT  EOM
def __init__( PARERIGHT : EOM
super( PARERIGHT  DOT __init__( PARERIGHT  EOM
self DOT positive_weight  EQUAL  positive_weight EOM
self DOT _num_of_hidden_units  EQUAL  _num_of_hidden_units EOM
from keras DOT layers DOT recurrent import GRU EOM
from keras DOT layers DOT convolutional import Convolution2D EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  TimeDistributedDense COMMA  Reshape EOM
from keras DOT layers DOT convolutional import MaxPooling2D EOM
from keras DOT layers DOT core import Permute EOM
maxToAdd  EQUAL  200 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(TimeDistributedDense(10 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
import os EOM
os DOT environ[]  EQUAL  EOM
import keras EOM
from keras DOT models import Sequential COMMA Model EOM
from keras DOT layers import Embedding COMMA  Dense COMMA  merge COMMA  SimpleRNN COMMA  Activation COMMA  LSTM COMMA  GRU COMMA  Dropout COMMA  Input COMMA  TimeDistributed COMMA  \ EOM
Concatenate COMMA  Add COMMA  Conv3D EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers DOT convolutional import Conv2D EOM
from keras DOT layers DOT convolutional import MaxPooling2D COMMA MaxPooling3D EOM
from keras DOT layers DOT core import Flatten EOM
from keras import optimizers EOM
from EmbeddingMatrix import EmbeddingMatrix EOM
from keras DOT utils DOT np_utils import to_categorical EOM
import config EOM
GRID_COUNT  EQUAL  config DOT GRID_COUNT EOM
TEXT_K  EQUAL  config DOT text_k EOM
def geo_lprnn_text_model( PARERIGHT : EOM
pl_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name  EQUAL  PARERIGHT  EOM
time_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name  EQUAL  PARERIGHT  EOM
user_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
text_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
pl_embedding  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
time_embedding  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
user_embedding  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
attrs_latent  EQUAL  keras DOT layers DOT concatenate( PARERIGHT  EOM
lstm_out  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
dense  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
out_vec  EQUAL  keras DOT layers DOT add( PARERIGHT  EOM
pred  EQUAL  Activation( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
sgd  EQUAL  optimizers DOT SGD( PARERIGHT  EOM
rmsprop  EQUAL  optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def geo_lprnn_trainable_text_model( PARERIGHT : EOM
pl_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name  EQUAL  PARERIGHT  EOM
time_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name  EQUAL  PARERIGHT  EOM
user_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
text_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
pl_embedding  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
time_embedding  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
user_embedding  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
text_embedding  EQUAL  EmbeddingMatrix( PARERIGHT ( PARERIGHT  EOM
attrs_latent  EQUAL  keras DOT layers DOT concatenate( PARERIGHT  EOM
lstm_out  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
dense  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
out_vec  EQUAL  keras DOT layers DOT add( PARERIGHT  EOM
pred  EQUAL  Activation( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
sgd  EQUAL  optimizers DOT SGD( PARERIGHT  EOM
rmsprop  EQUAL  optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def createSTCRNNModel( PARERIGHT : EOM
pl_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name  EQUAL  PARERIGHT  EOM
time_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name  EQUAL  PARERIGHT  EOM
user_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
text_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
pltm_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
pl_embedding  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
time_embedding  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
user_embedding  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
text_embedding  EQUAL  EmbeddingMatrix( PARERIGHT ( PARERIGHT  EOM
conv1  EQUAL  Conv3D(20 COMMA  ( PARERIGHT  COMMA  padding EQUAL  COMMA  activation EQUAL  PARERIGHT ( PARERIGHT  EOM
bn1 EQUAL  BatchNormalization( PARERIGHT ( PARERIGHT  EOM
conv2  EQUAL  Conv3D(20 COMMA  ( PARERIGHT  COMMA  padding EQUAL  COMMA  activation EQUAL  PARERIGHT ( PARERIGHT  EOM
bn2  EQUAL  BatchNormalization( PARERIGHT ( PARERIGHT  EOM
mp  EQUAL  MaxPooling3D(pool_size EQUAL ( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
dr  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
lc  EQUAL  keras DOT layers DOT Reshape(( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
attrs_latent  EQUAL  keras DOT layers DOT concatenate( PARERIGHT  EOM
lstm_out  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
dense  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
out_vec  EQUAL  keras DOT layers DOT add( PARERIGHT  EOM
pred  EQUAL  Activation( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
sgd  EQUAL  optimizers DOT SGD( PARERIGHT  EOM
rmsprop  EQUAL  optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return modelfrom preprocessing import load_data EOM
import random EOM
import matplotlib DOT pyplot as plt EOM
from keras import Model EOM
from keras DOT models import Sequential COMMA  load_model EOM
from keras DOT layers import LeakyReLU COMMA  TimeDistributed EOM
from keras DOT layers DOT core import Dense COMMA  Flatten COMMA  Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Convolution3D COMMA  MaxPooling3D COMMA  Convolution2D COMMA  MaxPooling2D EOM
from keras DOT callbacks import * EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras import optimizers EOM
from keras DOT utils import multi_gpu_model EOM
import os EOM
import pickle EOM
import time EOM
class ModelMGPU( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
pmodel  EQUAL  multi_gpu_model( PARERIGHT  EOM
self DOT __dict__ DOT update( PARERIGHT  EOM
self DOT _smodel  EQUAL  ser_model EOM
def __getattribute__( PARERIGHT : EOM
return getattr( PARERIGHT  EOM
return super( PARERIGHT  DOT __getattribute__( PARERIGHT  EOM
def RNN( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(256 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
return model EOM
tStart  EQUAL  time DOT time( PARERIGHT  EOM
X COMMA  y  EQUAL  load_data( PARERIGHT  EOM
model  EQUAL  RNN( PARERIGHT  EOM
parallel_model  EQUAL  ModelMGPU( PARERIGHT  EOM
parallel_model DOT compile( PARERIGHT  EOM
dirpath  EQUAL  EOM
if not os DOT path DOT exists( PARERIGHT : EOM
os DOT mkdir( PARERIGHT  EOM
filepath EQUAL  dirpath + EOM
checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
history  EQUAL  earlystopper  EQUAL  EarlyStopping( PARERIGHT  EOM
parallel_model DOT fit( PARERIGHT  EOM
with open( PARERIGHT  as f: EOM
pickle DOT dump( PARERIGHT  EOM
tEnd  EQUAL  time DOT time( PARERIGHT  EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import GlobalAveragePooling1D EOM
from keras DOT layers DOT convolutional import Convolution1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers import LSTM EOM
from features import dumpFeatures EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
train_1  EQUAL  model DOT predict_proba( PARERIGHT  EOM
test_1  EQUAL  model DOT predict_proba( PARERIGHT  EOM
cPickle DOT dump(test_1 COMMA  open( PARERIGHT  PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
train_2  EQUAL  model DOT predict_proba( PARERIGHT  EOM
test_2  EQUAL  model DOT predict_proba( PARERIGHT  EOM
cPickle DOT dump(test_2 COMMA  open( PARERIGHT  PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
train_3  EQUAL  model DOT predict_proba( PARERIGHT  EOM
test_3  EQUAL  model DOT predict_proba( PARERIGHT  EOM
cPickle DOT dump(test_3 COMMA  open( PARERIGHT  PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
train_4  EQUAL  model DOT predict_proba( PARERIGHT  EOM
test_4  EQUAL  model DOT predict_proba( PARERIGHT  EOM
cPickle DOT dump(test_4 COMMA  open( PARERIGHT  PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
train_5  EQUAL  model DOT predict_proba( PARERIGHT  EOM
test_5  EQUAL  model DOT predict_proba( PARERIGHT  EOM
cPickle DOT dump(test_5 COMMA  open( PARERIGHT  PARERIGHT  EOM
[]  EQUAL  cPickle DOT load(open( PARERIGHT  PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(GlobalAveragePooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
train_6  EQUAL  model DOT predict_proba( PARERIGHT  EOM
test_6  EQUAL  model DOT predict_proba( PARERIGHT  EOM
cPickle DOT dump(test_6 COMMA  open( PARERIGHT  PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
train_7  EQUAL  model DOT predict_proba( PARERIGHT  EOM
test_7  EQUAL  model DOT predict_proba( PARERIGHT  EOM
cPickle DOT dump(test_7 COMMA  open( PARERIGHT  PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
train_8  EQUAL  model DOT predict_proba( PARERIGHT  EOM
test_8  EQUAL  model DOT predict_proba( PARERIGHT  EOM
cPickle DOT dump(test_8 COMMA  open( PARERIGHT  PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
train_9  EQUAL  model DOT predict_proba( PARERIGHT  EOM
test_9  EQUAL  model DOT predict_proba( PARERIGHT  EOM
cPickle DOT dump(test_9 COMMA  open( PARERIGHT  PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
train_10  EQUAL  model DOT predict_proba( PARERIGHT  EOM
test_10  EQUAL  model DOT predict_proba( PARERIGHT  EOM
cPickle DOT dump(test_10 COMMA  open( PARERIGHT  PARERIGHT import os EOM
global_model_version  EQUAL  55 EOM
global_batch_size  EQUAL  128 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  keras DOT optimizers DOT SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout EOM
from keras DOT layers import LSTM COMMA  Merge COMMA  Dense EOM
def VQA_MODEL( PARERIGHT : EOM
image_feature_size  EQUAL  4096 EOM
word_feature_size  EQUAL  300 EOM
number_of_LSTM  EQUAL  3 EOM
number_of_hidden_units_LSTM  EQUAL  512 EOM
max_length_questions  EQUAL  30 EOM
number_of_dense_layers  EQUAL  3 EOM
number_of_hidden_units  EQUAL  1024 EOM
activation_function  EQUAL  EOM
dropout_pct  EQUAL  0 DOT 5 EOM
model_image  EQUAL  Sequential( PARERIGHT  EOM
model_image DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language  EQUAL  Sequential( PARERIGHT  EOM
model_language DOT add(LSTM(number_of_hidden_units_LSTM COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT convolutional import Conv2D COMMA  Conv3D EOM
from keras DOT layers DOT convolutional_recurrent import ConvLSTM2D EOM
from keras DOT regularizers import l2 EOM
def Feed_Forward_NN( PARERIGHT : EOM
name  EQUAL   DOT format( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model COMMA  name EOM
def Regularized_Feed_Forward_NN( PARERIGHT : EOM
name  EQUAL   DOT format( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(units EQUAL  COMMA  activation EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(units EQUAL  COMMA  activation EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model COMMA  name EOM
def LSTM_vector( PARERIGHT : EOM
name  EQUAL   DOT format( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(hidden_neurons COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(hidden_neurons COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model COMMA  name EOM
def ConvLSTM2D_matrix( PARERIGHT : EOM
name  EQUAL   DOT format( PARERIGHT  EOM
input_shape  EQUAL  ( PARERIGHT  EOM
kernel_size  EQUAL  ( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(ConvLSTM2D( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(ConvLSTM2D( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(ConvLSTM2D( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(ConvLSTM2D( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  activation EQUAL  COMMA  padding EQUAL  COMMA  data_format EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model COMMA  namefrom keras DOT models import Sequential EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout EOM
from keras DOT layers import LSTM COMMA  Merge COMMA  Dense EOM
def VQA_MODEL( PARERIGHT : EOM
image_feature_size  EQUAL  4096 EOM
word_feature_size  EQUAL  300 EOM
number_of_LSTM  EQUAL  3 EOM
number_of_hidden_units_LSTM  EQUAL  512 EOM
max_length_questions  EQUAL  30 EOM
number_of_dense_layers  EQUAL  3 EOM
number_of_hidden_units  EQUAL  1024 EOM
activation_function  EQUAL  EOM
dropout_pct  EQUAL  0 DOT 5 EOM
model_image  EQUAL  Sequential( PARERIGHT  EOM
model_image DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language  EQUAL  Sequential( PARERIGHT  EOM
model_language DOT add(LSTM(number_of_hidden_units_LSTM COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
if tf DOT __version__  EQUAL  EQUAL  : EOM
from tensorflow DOT contrib DOT keras DOT api DOT keras DOT layers import Dense COMMA  Flatten COMMA  Dropout COMMA  ZeroPadding3D EOM
from tensorflow DOT contrib DOT keras DOT python DOT keras DOT layers DOT recurrent import LSTM EOM
from tensorflow DOT contrib DOT keras DOT python DOT keras DOT models import Sequential COMMA  load_model EOM
from tensorflow DOT contrib DOT keras DOT api DOT keras DOT optimizers import Adam EOM
from tensorflow DOT contrib DOT keras DOT python DOT keras DOT layers DOT wrappers import TimeDistributed EOM
from keras DOT layers DOT convolutional import ( PARERIGHT  EOM
else: EOM
from keras DOT layers import Dense COMMA  Flatten COMMA  Dropout COMMA  ZeroPadding3D EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential COMMA  load_model EOM
from keras DOT optimizers import Adam EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
from keras DOT layers DOT convolutional import ( PARERIGHT  EOM
from collections import deque EOM
import sys EOM
class ResearchModels( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT seq_length  EQUAL  seq_length EOM
self DOT load_model  EQUAL  load_model EOM
self DOT saved_model  EQUAL  saved_model EOM
self DOT nb_classes  EQUAL  nb_classes EOM
self DOT feature_queue  EQUAL  deque( PARERIGHT  EOM
metrics  EQUAL  [] EOM
if self DOT nb_classes > EQUAL  10: EOM
metrics DOT append( PARERIGHT  EOM
if self DOT saved_model is not None: EOM
self DOT model  EQUAL  load_model( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT lstm( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT lrcn( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT mlp( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT conv_3d( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT c3d( PARERIGHT  EOM
else: EOM
sys DOT exit( PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
def lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def lrcn( PARERIGHT : EOM
model DOT add(TimeDistributed(Conv2D(32 COMMA  ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA tivation EQUAL  COMMA  padding EQUAL  PARERIGHT  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(32 COMMA  ( PARERIGHT  COMMA ernel_initializer EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(64 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(64 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(128 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(128 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(256 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(256 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(512 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(512 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Flatten( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def mlp( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def conv_3d( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv3D( ( PARERIGHT  COMMA  activation EQUAL  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(128 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(128 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(256 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(256 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def c3d( PARERIGHT : EOM
model DOT add(Conv3D(64 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  COMMA input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA order_mode EQUAL  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(128 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA order_mode EQUAL  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(256 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(256 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA order_mode EQUAL  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(512 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(512 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA order_mode EQUAL  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(512 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(512 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(ZeroPadding3D(padding EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA order_mode EQUAL  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return modelimport os EOM
global_model_version  EQUAL  57 EOM
global_batch_size  EQUAL  128 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  keras DOT optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import pandas as pd EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Activation COMMA  Dense COMMA  Embedding COMMA  SimpleRNN COMMA  LSTM COMMA  Dropout EOM
from keras import backend as K EOM
from keras_tqdm import TQDMNotebookCallback EOM
from keras DOT callbacks import ReduceLROnPlateau COMMA  EarlyStopping COMMA  ModelCheckpoint EOM
from keras DOT callbacks import TensorBoard EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
imdb_df  EQUAL  pd DOT read_csv( PARERIGHT  EOM
pd DOT set_option( PARERIGHT  EOM
num_words  EQUAL  10000 EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts( PARERIGHT  EOM
sequences  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
y  EQUAL  np DOT array( PARERIGHT  EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
max_review_length  EQUAL  552 EOM
pad  EQUAL  EOM
X  EQUAL  pad_sequences( PARERIGHT  EOM
from sklearn DOT model_selection import train_test_split EOM
X_train COMMA  X_test COMMA  y_train COMMA  y_test  EQUAL  train_test_split( PARERIGHT  EOM
input_shape  EQUAL  X_train DOT shape EOM
K DOT clear_session( PARERIGHT  EOM
LSTM_model  EQUAL  Sequential( PARERIGHT  EOM
LSTM_model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT summary( PARERIGHT  EOM
LSTM_model DOT compile( PARERIGHT  EOM
LSTM_history  EQUAL  LSTM_model DOT fit(X_train COMMA y_train COMMA epochs EQUAL  COMMA batch_size EQUAL  COMMA validation_split EQUAL import keras COMMA  urllib2 EOM
import numpy as np EOM
from keras DOT preprocessing import sequence EOM
from keras DOT optimizers import SGD COMMA  RMSprop COMMA  Adagrad EOM
from keras DOT utils import np_utils EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import LSTM COMMA  GRU EOM
data   EQUAL  urllib2 DOT urlopen( PARERIGHT  DOT read( PARERIGHT  EOM
data  EQUAL  [] EOM
data2 EQUAL [] EOM
for x in data: EOM
try: EOM
data2 DOT append( PARERIGHT  EOM
except: EOM
pass EOM
data2  EQUAL  data2[] EOM
data2  EQUAL  [] EOM
X  EQUAL  data2[] EOM
y  EQUAL  data2[] EOM
X  EQUAL  np DOT array( PARERIGHT  DOT T EOM
y  EQUAL  np DOT array( PARERIGHT  DOT T EOM
Xtrain  EQUAL  X[] EOM
ytrain  EQUAL  y[] EOM
Xtest  EQUAL  X[] EOM
Ytest  EQUAL  y[] EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
pred  EQUAL  model DOT predict_proba( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
import matplotlib DOT pyplot as plt EOM
fig  EQUAL  plt DOT figure( PARERIGHT  EOM
fig DOT suptitle( PARERIGHT  EOM
plt DOT xlabel( PARERIGHT  EOM
plt DOT ylabel( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT legend( PARERIGHT  EOM
plt DOT show( PARERIGHT  EOM
import numpy as np EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import np_utils EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import LSTM COMMA  SimpleRNN COMMA  GRU EOM
from keras DOT layers DOT core import * EOM
max_features  EQUAL  5883 EOM
maxlen  EQUAL  80 EOM
batch_size  EQUAL  32 EOM
in_out_neurons  EQUAL  2 EOM
hidden_neurons  EQUAL  300 EOM
import os EOM
import sys EOM
import pandas as pd EOM
def _load_data( PARERIGHT : EOM
for i in range(len( PARERIGHT -n_prev PARERIGHT : EOM
docX DOT append( PARERIGHT  EOM
docY DOT append( PARERIGHT  EOM
all_X  EQUAL  np DOT array( PARERIGHT  EOM
all_Y  EQUAL  np DOT array( PARERIGHT  EOM
return all_X COMMA  all_Y EOM
def train_test_split( PARERIGHT : EOM
X_train COMMA  y_train  EQUAL  _load_data( PARERIGHT  EOM
X_test COMMA  y_test  EQUAL  _load_data( PARERIGHT  EOM
return ( PARERIGHT  COMMA  ( PARERIGHT  EOM
def rnn_lstm( PARERIGHT : EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
hidden  EQUAL  32 EOM
step  EQUAL  10 EOM
model1  EQUAL  Sequential( PARERIGHT  EOM
model1 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model2  EQUAL  Sequential( PARERIGHT  EOM
model2 DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model2 DOT add(RepeatVector( PARERIGHT  PARERIGHT  EOM
model2 DOT add(Permute(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(X_train COMMA  y_train COMMA  batch_size EQUAL  COMMA  \lidation_data EQUAL ( PARERIGHT  COMMA  nb_epoch EQUAL  PARERIGHT  EOM
score COMMA  accuracy  EQUAL  model DOT evaluate( PARERIGHT  EOM
return ( PARERIGHT  EOM
def main( PARERIGHT : EOM
file_name EQUAL  EOM
file_dataframe  EQUAL  pd DOT read_csv(os DOT path DOT join( PARERIGHT  PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
main( PARERIGHT from __future__ import print_function EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers import LSTM COMMA  Input COMMA  Bidirectional EOM
from keras DOT optimizers import Adam EOM
from keras DOT callbacks import EarlyStopping COMMA  ModelCheckpoint EOM
from keras DOT metrics import categorical_accuracy EOM
import spacy EOM
nlp  EQUAL  spacy DOT load( PARERIGHT  EOM
import numpy as np EOM
import pandas as pd EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT utils import np_utils EOM
data  EQUAL  (open( PARERIGHT  DOT read( PARERIGHT  PARERIGHT  EOM
chars  EQUAL  sorted(list(set( PARERIGHT  PARERIGHT  PARERIGHT  EOM
id_char  EQUAL  {id:char for id COMMA  char in enumerate( PARERIGHT } EOM
char_id  EQUAL  {char:id for id COMMA  char in enumerate( PARERIGHT } EOM
x  EQUAL  [] EOM
Y  EQUAL  [] EOM
length  EQUAL  len( PARERIGHT  EOM
seq_length  EQUAL  100 EOM
for i in range( PARERIGHT : EOM
sequence  EQUAL  data[] EOM
label  EQUAL  data[] EOM
x DOT append( PARERIGHT  EOM
Y DOT append( PARERIGHT  EOM
x_mod  EQUAL  np DOT reshape(x COMMA  (len( PARERIGHT  COMMA  seq_length COMMA  1 PARERIGHT  PARERIGHT  EOM
x_mod  EQUAL  x_mod / float(len( PARERIGHT  PARERIGHT  EOM
y_mod  EQUAL  np_utils DOT to_categorical( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(400 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
model DOT save_weights( PARERIGHT  EOM
model DOT load_weights( PARERIGHT  EOM
string_mapped  EQUAL  x[] EOM
for i in range( PARERIGHT : EOM
x1  EQUAL  np DOT reshape(string_mapped COMMA (1 COMMA len( PARERIGHT  COMMA  1 PARERIGHT  PARERIGHT  EOM
x1  EQUAL  x1 / float(len( PARERIGHT  PARERIGHT  EOM
pred_index  EQUAL  np DOT argmax(model DOT predict( PARERIGHT  PARERIGHT  EOM
seq  EQUAL  [] for value in string_mapped] EOM
string_mapped DOT append( PARERIGHT  EOM
full_string  EQUAL  string_mapped[] EOM
txt EQUAL  EOM
for char in full_string: EOM
txt  EQUAL  txt+char EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras DOT layers import Conv2D EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT import sys EOM
import random EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT utils import np_utils EOM
from keras DOT optimizers import SGD EOM
from keras DOT layers import Embedding EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT utils DOT data_utils import get_file EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT models import model_from_json EOM
from keras DOT layers import Merge EOM
from data_helper import loaddata EOM
m_names COMMA  f_names  EQUAL  loaddata( PARERIGHT  EOM
totalEntries  EQUAL  len( PARERIGHT  + len( PARERIGHT  EOM
maxlen  EQUAL  len(max( PARERIGHT  PARERIGHT  + len(max( PARERIGHT  PARERIGHT  EOM
chars  EQUAL  set(   DOT join( PARERIGHT  +  DOT join( PARERIGHT    PARERIGHT  EOM
char_index  EQUAL  dict(( PARERIGHT  for i COMMA  c in enumerate( PARERIGHT  PARERIGHT  EOM
X  EQUAL  np DOT zeros((totalEntries  COMMA  maxlen COMMA  len( PARERIGHT   PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
y  EQUAL  np DOT zeros(( PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
for i COMMA  name in enumerate( PARERIGHT : EOM
for t COMMA  char in enumerate( PARERIGHT : EOM
X[]]  EQUAL  1 EOM
y[]  EQUAL  1 EOM
for i COMMA  name in enumerate( PARERIGHT : EOM
for t COMMA  char in enumerate( PARERIGHT : EOM
X[]]  EQUAL     y[]  EQUAL nEpochs  EQUAL  10 EOM
def baseline_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(512 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL (maxlen COMMA  len( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
model EQUAL baseline_model( PARERIGHT  EOM
json_string  EQUAL  model DOT to_json( PARERIGHT  EOM
with open( PARERIGHT  as file: EOM
file DOT write( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
model DOT save_weights( PARERIGHT  EOM
def baseline_model1( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(128 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL (maxlen COMMA  len( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
model1 EQUAL baseline_model1( PARERIGHT  EOM
json_string  EQUAL  model1 DOT to_json( PARERIGHT  EOM
with open( PARERIGHT  as file: EOM
file DOT write( PARERIGHT  EOM
model1 DOT fit( PARERIGHT  EOM
model1 DOT save_weights( PARERIGHT __author__  EQUAL from keras DOT regularizers import l2 EOM
from sklearn DOT cross_validation import train_test_split EOM
from six DOT moves import xrange EOM
from keras DOT layers import LSTM COMMA  Dense COMMA  Dropout COMMA  Activation COMMA  Flatten COMMA  Lambda EOM
from keras DOT layers import MaxPooling1D COMMA  MaxPooling2D COMMA  AveragePooling2D COMMA  MaxPooling3D EOM
from keras DOT layers import Conv1D COMMA  Conv2D COMMA  Conv3D COMMA  GlobalAveragePooling2D COMMA  GlobalMaxPooling2D EOM
from keras DOT layers DOT convolutional_recurrent import ConvLSTM2D COMMA  ConvRecurrent2D EOM
from keras DOT engine import Input COMMA  Model EOM
from keras DOT callbacks import Callback COMMA  LearningRateScheduler COMMA  ModelCheckpoint COMMA  EarlyStopping EOM
from keras DOT preprocessing DOT image import ImageDataGenerator EOM
import json EOM
import keras EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT optimizers import SGD COMMA  Adam EOM
from keras import backend as K EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT utils DOT data_utils import get_file EOM
from keras DOT layers DOT wrappers import TimeDistributed COMMA  Bidirectional EOM
import numpy as np EOM
from keras DOT layers DOT wrappers import TimeDistributed COMMA  Bidirectional EOM
from keras DOT layers DOT recurrent import SimpleRNN COMMA  GRU EOM
import warnings EOM
from keras DOT utils import layer_utils EOM
if __name__  EQUAL  EQUAL  : EOM
from util import Util as util EOM
X_data_name_1  EQUAL  EOM
y_data_name_1  EQUAL  EOM
X_data_name_2  EQUAL  EOM
y_data_name_2  EQUAL  EOM
X_train COMMA  y_train  EQUAL  util DOT load_from_npz( PARERIGHT  COMMA  util DOT load_from_npz( PARERIGHT  EOM
X_test COMMA  y_test  EQUAL  util DOT load_from_npz( PARERIGHT  COMMA  util DOT load_from_npz( PARERIGHT  EOM
def normalize( PARERIGHT : EOM
mean  EQUAL  np DOT mean( PARERIGHT  EOM
std  EQUAL  np DOT std( PARERIGHT  EOM
X_train  EQUAL  ( PARERIGHT /( PARERIGHT  EOM
X_test  EQUAL  ( PARERIGHT /( PARERIGHT  EOM
return X_train COMMA  X_test EOM
X_train COMMA  X_test  EQUAL  normalize( PARERIGHT  EOM
X_train  EQUAL  X_train DOT reshape( PARERIGHT  EOM
X_test  EQUAL  X_test DOT reshape( PARERIGHT  EOM
from keras DOT utils import np_utils EOM
nb_classes  EQUAL  7 EOM
y_train  EQUAL  np_utils DOT to_categorical( PARERIGHT  DOT astype( PARERIGHT  EOM
y_test  EQUAL  np_utils DOT to_categorical( PARERIGHT  DOT astype( PARERIGHT  EOM
from keras DOT layers DOT merge import concatenate COMMA  add EOM
def audio_clstm( PARERIGHT : EOM
x  EQUAL  GRU( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  GRU( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  GRU( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  GRU( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
return x EOM
inputs  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
out  EQUAL  audio_clstm( PARERIGHT  EOM
model_clstm  EQUAL  Model( PARERIGHT  EOM
model_clstm DOT summary( PARERIGHT  EOM
sgd  EQUAL  SGD( PARERIGHT  EOM
model_clstm DOT compile( PARERIGHT  EOM
mc  EQUAL  keras DOT callbacks DOT ModelCheckpoint( PARERIGHT  EOM
model_clstm DOT fit(X_train_2nd COMMA  y_train_2nd COMMA  batch_size EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  COMMA  uffle EQUAL  COMMA  epochs EQUAL  COMMA  callbacks EQUAL [] PARERIGHT  EOM
open( PARERIGHT  DOT write(model_clstm DOT to_yaml( PARERIGHT  PARERIGHT  EOM
proba_clstm  EQUAL  model_clstm DOT predict_on_batch( PARERIGHT  EOM
model_Bilstm  EQUAL  Sequential( PARERIGHT  EOM
model_Bilstm DOT add(LSTM(577 COMMA  return_sequences EQUAL  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_Bilstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_Bilstm DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_Bilstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_Bilstm DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_Bilstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_Bilstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_Bilstm DOT summary( PARERIGHT  EOM
sgd  EQUAL  SGD( PARERIGHT  EOM
model_Bilstm DOT compile( PARERIGHT  EOM
mc  EQUAL  keras DOT callbacks DOT ModelCheckpoint( PARERIGHT  EOM
model_Bilstm DOT fit(X_train_2nd COMMA  y_train_2nd COMMA  batch_size EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  COMMA  uffle EQUAL  COMMA  epochs EQUAL  COMMA  callbacks EQUAL [] PARERIGHT  EOM
model_lstm  EQUAL  Sequential( PARERIGHT  EOM
model_lstm DOT add(LSTM(577 COMMA  return_sequences EQUAL  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_lstm DOT summary( PARERIGHT  EOM
sgd  EQUAL  SGD( PARERIGHT  EOM
model_lstm DOT compile( PARERIGHT  EOM
mc  EQUAL  keras DOT callbacks DOT ModelCheckpoint( PARERIGHT  EOM
model_lstm DOT fit(X_train COMMA  y_train COMMA  batch_size EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  COMMA  uffle EQUAL  COMMA  epochs EQUAL  COMMA  callbacks EQUAL [] PARERIGHT  EOM
model_lstm  EQUAL  Sequential( PARERIGHT  EOM
model_lstm DOT add(LSTM(577 COMMA  return_sequences EQUAL  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_lstm DOT summary( PARERIGHT  EOM
sgd  EQUAL  SGD( PARERIGHT  EOM
model_lstm DOT compile( PARERIGHT  EOM
mc  EQUAL  keras DOT callbacks DOT ModelCheckpoint( PARERIGHT  EOM
model_lstm DOT fit(X_train_2nd COMMA  y_train_2nd COMMA  batch_size EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  COMMA  uffle EQUAL  COMMA  epochs EQUAL  COMMA  callbacks EQUAL [] EOM
import os EOM
global_model_version  EQUAL  41 EOM
global_batch_size  EQUAL  32 EOM
global_top_words  EQUAL  10000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_2  EQUAL  Sequential( PARERIGHT  EOM
branch_2 DOT add( PARERIGHT  EOM
branch_2 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_6  EQUAL  Sequential( PARERIGHT  EOM
branch_6 DOT add( PARERIGHT  EOM
branch_6 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import pandas as pd EOM
import numpy as np EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT models import Input EOM
from keras DOT models import Model EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Merge EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT models import model_from_json EOM
from keras DOT callbacks import ModelCheckpoint EOM
from MyModule import data EOM
from MyModule import evaluate EOM
import os EOM
def build_lstm_models( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(input_shape EQUAL ( PARERIGHT  COMMA output_dim EQUAL [][] COMMA ctivation EQUAL [] COMMA  recurrent_activation EQUAL [] COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
for i in range(1 COMMA  len( PARERIGHT  PARERIGHT : EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
return model EOM
def add_multi_dense( PARERIGHT : EOM
for i in range(len( PARERIGHT  PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def build_model( PARERIGHT : EOM
if os DOT path DOT exists( PARERIGHT : EOM
json_string  EQUAL  open( PARERIGHT  DOT read( PARERIGHT  EOM
model  EQUAL  model_from_json( PARERIGHT  EOM
else: EOM
lstm_models  EQUAL  [] EOM
for i in range( PARERIGHT : EOM
lstm_models DOT append(build_lstm_models( PARERIGHT  PARERIGHT  EOM
date_model  EQUAL  Sequential( PARERIGHT  EOM
date_model DOT add(ense(input_shape EQUAL ( PARERIGHT  COMMA nits EQUAL [][] COMMA  activation EQUAL [] PARERIGHT  PARERIGHT  EOM
lstm_models DOT append( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model  EQUAL  add_multi_dense( PARERIGHT  EOM
open( PARERIGHT  DOT write(model DOT to_json( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if os DOT path DOT exists( PARERIGHT : EOM
model DOT load_weights( PARERIGHT  EOM
return model EOM
def train( PARERIGHT : EOM
df_date  EQUAL  df_raw DOT pop( PARERIGHT  EOM
df_date  EQUAL  pd DOT concat([] COMMA  axis EQUAL  PARERIGHT  EOM
df_date  EQUAL  pd DOT concat([] COMMA  axis EQUAL  PARERIGHT  EOM
df_date  EQUAL  df_date DOT loc[] EOM
df_raw  EQUAL  data DOT process_sequence_features( PARERIGHT  EOM
df_date_encode  EQUAL  data DOT encoding_features( PARERIGHT  EOM
y_scaled COMMA  y_scaler  EQUAL  data DOT min_max_scale(np DOT array(df_raw DOT pop( PARERIGHT  PARERIGHT  DOT reshape( PARERIGHT  PARERIGHT  EOM
X_scaled COMMA  X_scaler  EQUAL  data DOT min_max_scale( PARERIGHT  EOM
date_encode  EQUAL  np DOT array( PARERIGHT  EOM
train_y  EQUAL  y_scaled[] EOM
test_y  EQUAL  y_scaled[] EOM
train_y  EQUAL  train_y DOT reshape(( PARERIGHT  PARERIGHT  EOM
test_y  EQUAL  test_y DOT reshape(( PARERIGHT  PARERIGHT  EOM
X_scaled  EQUAL  X_scaled DOT reshape(( PARERIGHT  PARERIGHT  EOM
date_encode  EQUAL  date_encode DOT reshape(( PARERIGHT  PARERIGHT  EOM
train_X  EQUAL  [] EOM
test_X  EQUAL  [] EOM
for i in range( PARERIGHT : EOM
train_X DOT append(X_scaled[] PARERIGHT  EOM
test_X DOT append(X_scaled[] PARERIGHT  EOM
train_X DOT append(date_encode[] PARERIGHT  EOM
test_X DOT append(date_encode[] PARERIGHT  EOM
model  EQUAL  build_model( PARERIGHT  EOM
checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
callbacks_list  EQUAL  [] EOM
history  EQUAL  model DOT fit(train_X COMMA  train_y COMMA  epochs EQUAL  COMMA  batch_size EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  COMMA rbose EQUAL  COMMA  callbacks EQUAL  COMMA  shuffle EQUAL  PARERIGHT  EOM
plt DOT figure( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
pred_y  EQUAL  model DOT predict( PARERIGHT  EOM
test_y  EQUAL  data DOT inverse_to_original_data(train_y DOT reshape( PARERIGHT  COMMA  test_y DOT reshape( PARERIGHT  COMMA  scaler EQUAL  COMMA n_num EQUAL (len( PARERIGHT  * ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
pred_y  EQUAL  data DOT inverse_to_original_data(train_y DOT reshape( PARERIGHT  COMMA  pred_y DOT reshape( PARERIGHT  COMMA  scaler EQUAL  COMMA n_num EQUAL (len( PARERIGHT  * ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
return test_y COMMA  pred_y EOM
if __name__  EQUAL  EQUAL  : EOM
pd DOT set_option( PARERIGHT  EOM
cols  EQUAL  [] EOM
metrics  EQUAL  [] EOM
time_steps  EQUAL  [] EOM
for time_step in time_steps: EOM
df_raw_data  EQUAL  pd DOT read_csv( PARERIGHT  EOM
epoch  EQUAL  200 EOM
batch  EQUAL  1024 EOM
model_path  EQUAL   + str( PARERIGHT  + EOM
weight_path  EQUAL   + str( PARERIGHT  + EOM
test_split  EQUAL  0 DOT 4 EOM
lstm_num  EQUAL  6 EOM
lstm_layers  EQUAL  [] EOM
lstm_activation  EQUAL  EOM
lstm_recurrent_activation  EQUAL  EOM
lstm_input_shape  EQUAL  ( PARERIGHT  EOM
lstm_dropout  EQUAL  0 DOT 3 EOM
dense_layers  EQUAL  [] EOM
dense_activation  EQUAL  None EOM
date_features_shape  EQUAL  ( PARERIGHT  EOM
dense_dropout  EQUAL  0 DOT 5 EOM
lstm_conf  EQUAL  {: lstm_num COMMA : lstm_input_shape COMMA : lstm_layers COMMA : lstm_activation COMMA : lstm_recurrent_activation COMMA : lstm_dropout} EOM
dense_conf  EQUAL  {: date_features_shape COMMA : dense_layers COMMA : dense_activation COMMA : dense_dropout} EOM
y_true COMMA  y_pred  EQUAL  train( PARERIGHT  EOM
metrics DOT append(evaluate DOT print_metrics( PARERIGHT  PARERIGHT  EOM
from data import data EOM
import numpy as np EOM
from sim import sim EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Activation COMMA  LSTM EOM
import keras DOT utils EOM
from data import data EOM
from keras DOT callbacks import History EOM
import matplotlib DOT pyplot as plt EOM
from keras import optimizers EOM
path  EQUAL  EOM
prefix  EQUAL  EOM
index  EQUAL  ( PARERIGHT  EOM
suffix  EQUAL  EOM
d  EQUAL  data DOT multiload( PARERIGHT  EOM
[]  EQUAL  data DOT preplstm( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(9 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
optimizers DOT rmsprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
epch  EQUAL  100 EOM
hist  EQUAL  model DOT fit( PARERIGHT  EOM
history  EQUAL  History( PARERIGHT  EOM
plt DOT plot(range( PARERIGHT  COMMA  hist DOT history[] PARERIGHT  EOM
plt DOT show( PARERIGHT import numpy as np EOM
import jieba EOM
import multiprocessing EOM
from gensim DOT models DOT word2vec import Word2Vec EOM
from gensim DOT corpora DOT dictionary import Dictionary EOM
from keras DOT preprocessing import sequence EOM
from sklearn DOT cross_validation import train_test_split EOM
import keras EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA Activation EOM
from keras DOT models import model_from_yaml EOM
import sys EOM
sys DOT setrecursionlimit( PARERIGHT  EOM
import yaml EOM
vocab_dim  EQUAL  100 EOM
window_size  EQUAL  7 EOM
n_epoch  EQUAL  4 EOM
input_length  EQUAL  100 EOM
maxlen  EQUAL  100 EOM
batch_size  EQUAL  32 EOM
def loadfile( PARERIGHT : EOM
neg EQUAL pd DOT read_csv( PARERIGHT [] EOM
pos EQUAL pd DOT read_csv( PARERIGHT [] EOM
neu EQUAL pd DOT read_csv( PARERIGHT [] EOM
combined  EQUAL  np DOT concatenate(( PARERIGHT  PARERIGHT  EOM
y  EQUAL  np DOT concatenate((np DOT ones(len( PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  COMMA   DOT zeros(len( PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  COMMA   * np DOT ones(len( PARERIGHT  COMMA dtype EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
return combined COMMA y EOM
def tokenizer( PARERIGHT : EOM
return text EOM
def create_dictionaries( PARERIGHT : EOM
gensim_dict  EQUAL  Dictionary( PARERIGHT  EOM
gensim_dict DOT doc2bow(model DOT wv DOT vocab DOT keys( PARERIGHT  COMMA allow_update EQUAL  PARERIGHT  EOM
for sentence in combined: EOM
new_txt  EQUAL  [] EOM
for word in sentence: EOM
try: EOM
new_txt DOT append( PARERIGHT  EOM
except: EOM
data DOT append( PARERIGHT  EOM
combined EQUAL parse_dataset( PARERIGHT  EOM
return w2indx COMMA  w2vec COMMA combined EOM
else: EOM
def word2vec_train( PARERIGHT : EOM
model  EQUAL  Word2Vec( PARERIGHT  EOM
model DOT train( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
index_dict COMMA  word_vectors COMMA combined  EQUAL  create_dictionaries( PARERIGHT  EOM
return   index_dict COMMA  word_vectors COMMA combined EOM
def build_data( PARERIGHT : EOM
embedding_weights[]  EQUAL  word_vectors[] EOM
x_train COMMA  x_test COMMA  y_train COMMA  y_test  EQUAL  train_test_split( PARERIGHT  EOM
y_train  EQUAL  keras DOT utils DOT to_categorical( PARERIGHT  EOM
y_test  EQUAL  keras DOT utils DOT to_categorical( PARERIGHT  EOM
return n_symbols COMMA embedding_weights COMMA x_train COMMA y_train COMMA x_test COMMA y_test EOM
import itertools EOM
import unittest EOM
import numpy as np EOM
import os COMMA  shutil EOM
import tempfile EOM
import pytest EOM
from coremltools DOT _deps import HAS_KERAS_TF EOM
from coremltools DOT models DOT utils import macos_version EOM
if HAS_KERAS_TF: EOM
import keras DOT backend EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers import Dense COMMA  Activation COMMA  Convolution2D COMMA  AtrousConvolution2D COMMA  LSTM COMMA  \ EOM
ZeroPadding2D COMMA  Deconvolution2D COMMA  Permute COMMA  Convolution1D COMMA  AtrousConvolution1D COMMA  \ EOM
MaxPooling2D COMMA  AveragePooling2D COMMA  Flatten COMMA  Dropout COMMA  UpSampling2D COMMA  merge COMMA  Merge COMMA  Input COMMA  GRU COMMA  \ EOM
GlobalMaxPooling2D COMMA  GlobalMaxPooling1D COMMA  GlobalAveragePooling2D COMMA  GlobalAveragePooling1D COMMA  \ EOM
Cropping1D COMMA  Cropping2D COMMA  Reshape COMMA  AveragePooling1D COMMA  MaxPooling1D COMMA  RepeatVector COMMA  ELU COMMA  \ EOM
SimpleRNN COMMA  BatchNormalization COMMA  Embedding COMMA  ZeroPadding1D COMMA  UpSampling1D EOM
from keras DOT layers DOT wrappers import Bidirectional COMMA  TimeDistributed EOM
from keras DOT optimizers import SGD EOM
from coremltools DOT converters import keras as kerasConverter EOM
def _keras_transpose( PARERIGHT : EOM
if len( PARERIGHT   EQUAL         x  EQUAL  np DOT transpose( PARERIGHT  EOM
return np DOT expand_dims( PARERIGHT  EOM
elif len( PARERIGHT   EQUAL         return np DOT transpose( PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             return x DOT reshape(x DOT shape[] + ( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             return x DOT reshape(( PARERIGHT  PARERIGHT  EOM
else: EOM
return x EOM
else: EOM
return x EOM
def _get_coreml_model( PARERIGHT : EOM
from coremltools DOT converters import keras as keras_converter EOM
model  EQUAL  keras_converter DOT convert( PARERIGHT  EOM
return model EOM
def _generate_data( PARERIGHT : EOM
X  EQUAL  np DOT zeros( PARERIGHT  EOM
elif mode  EQUAL  EQUAL  : EOM
X  EQUAL  np DOT ones( PARERIGHT  EOM
elif mode  EQUAL  EQUAL  : EOM
X  EQUAL  np DOT array(range(np DOT product( PARERIGHT  PARERIGHT  PARERIGHT  DOT reshape( PARERIGHT  EOM
elif mode  EQUAL  EQUAL  : EOM
X  EQUAL  np DOT random DOT rand( PARERIGHT  EOM
elif mode  EQUAL  EQUAL  : EOM
X  EQUAL  np DOT random DOT rand( PARERIGHT -0 DOT 5 EOM
return X EOM
def conv2d_bn(x COMMA  nb_filter COMMA  nb_row COMMA  nb_col COMMA  border_mode EQUAL  COMMA  subsample EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT : EOM
bn_name  EQUAL  name + EOM
conv_name  EQUAL  name + EOM
else: EOM
bn_name  EQUAL  None EOM
conv_name  EQUAL  None EOM
bn_axis  EQUAL  3 EOM
x  EQUAL  Convolution2D( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  BatchNormalization( PARERIGHT ( PARERIGHT  EOM
return x EOM
import tensorflow as tf EOM
import numpy as np EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers import Dense COMMA  Activation COMMA  Dropout COMMA  TimeDistributed COMMA  Bidirectional EOM
from keras DOT layers import LSTM COMMA  Input COMMA  merge COMMA  multiply COMMA  Conv2D COMMA  \ EOM
Conv2DTranspose COMMA  BatchNormalization COMMA  UpSampling2D COMMA  ConvLSTM2D COMMA  Conv3D COMMA  BatchNormalization EOM
from keras DOT layers DOT core import Permute COMMA  Reshape COMMA  Flatten COMMA  Lambda COMMA  RepeatVector EOM
from keras DOT optimizers import RMSprop COMMA  Adam EOM
from keras DOT layers DOT advanced_activations import LeakyReLU EOM
from keras DOT utils DOT data_utils import get_file EOM
from keras DOT models import load_model EOM
from Midi_Parser import MidiParser EOM
from keras import backend as K EOM
MAX_LEN  EQUAL  25 EOM
OUT_MAX_LEN  EQUAL  1 EOM
from preprocessing import PITCHES_REPRESS EOM
NUM_CHANNELS  EQUAL  4 EOM
INPUT_DIM  EQUAL  NUM_CHANNELS * PITCHES_REPRESS EOM
INPUT_DIM  EQUAL  PITCHES_REPRESS EOM
def simple( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(64 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  dropout_U EQUAL  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(64 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  dropout_U EQUAL  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(64 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  dropout_U EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def prepare_model_keras( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(128 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  COMMA dropout_U EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(128 COMMA  input_shape EQUAL ( PARERIGHT  COMMA eturn_sequences EQUAL  COMMA  dropout_U EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(128 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  dropout_U EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def prepare_conv_lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(ConvLSTM2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA eturn_sequences EQUAL  COMMA  padding EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(ConvLSTM2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA padding EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA activation EQUAL  COMMA adding EQUAL  COMMA  data_format EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def prepare_attention( PARERIGHT : EOM
inputs  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
lstm_units  EQUAL  32 EOM
lstm_out COMMA  state_h COMMA  state_c  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
state_c  EQUAL  RepeatVector( PARERIGHT ( PARERIGHT  EOM
lstm_out  EQUAL  merge( PARERIGHT  EOM
else: EOM
lstm_out  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
attention_mul  EQUAL  attention_3d_block( PARERIGHT  EOM
attention_mul2  EQUAL  attention_3d_block( PARERIGHT  EOM
attention_mul2 EQUAL  Lambda(lambda x: K DOT sum( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
output  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def attention_3d_block( PARERIGHT : EOM
input_dim  EQUAL  int( PARERIGHT  EOM
a  EQUAL  Permute(( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
a  EQUAL  Reshape(( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
if full_attention: EOM
a  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
a  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
a_probs  EQUAL  Permute(( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
output_attention_mul  EQUAL  multiply( PARERIGHT  EOM
return output_attention_mul EOM
def discriminator( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Flatten(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def adversarial( PARERIGHT : EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
discriminator DOT trainable  EQUAL  False EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def generator( PARERIGHT : EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
noise_shape  EQUAL  ( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(LeakyReLU( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(LeakyReLU( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(LeakyReLU( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def build_and_run_model( PARERIGHT : EOM
with tf DOT Graph( PARERIGHT  DOT as_default( PARERIGHT : EOM
net  EQUAL  tflearn DOT input_data( PARERIGHT  EOM
net  EQUAL  tflearn DOT lstm( PARERIGHT  EOM
net  EQUAL  tflearn DOT dropout( PARERIGHT  EOM
net  EQUAL  tflearn DOT lstm( PARERIGHT  EOM
net  EQUAL  tflearn DOT dropout( PARERIGHT  EOM
net  EQUAL  tflearn DOT lstm( PARERIGHT  EOM
net  EQUAL  tflearn DOT fully_connected( PARERIGHT  EOM
net  EQUAL  tflearn DOT regression( PARERIGHT  EOM
model  EQUAL  tflearn DOT DNN( PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
import numpy as np EOM
from  keras DOT models import Sequential EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dense EOM
from DataCreateHelper import DataCreate EOM
class Models: EOM
def StackedLSTM( PARERIGHT : EOM
model EQUAL Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
for i in range(len( PARERIGHT  PARERIGHT : EOM
model DOT fit( PARERIGHT  EOM
loss EQUAL model DOT evaluate( PARERIGHT  EOM
def VanillaLSTM( PARERIGHT : EOM
mainmodel EQUAL Sequential( PARERIGHT  EOM
mainmodel DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
mainmodel DOT add(Dense( PARERIGHT  PARERIGHT  EOM
mainmodel DOT compile( PARERIGHT  EOM
for i in range(len( PARERIGHT  PARERIGHT : EOM
mainmodel DOT fit( PARERIGHT  EOM
mydatacraete EQUAL DataCreate( PARERIGHT  EOM
loss EQUAL mainmodel DOT evaluate( PARERIGHT  EOM
yhat EQUAL mainmodel DOT predict(X_predict[] DOT reshape( PARERIGHT  PARERIGHT  EOM
if __name__ EQUAL  EQUAL : EOM
import keras EOM
import tensorflow EOM
from keras DOT layers import LSTM COMMA  Dense EOM
import numpy as np EOM
import matplotlib DOT pyplot as plt EOM
import numpy as np EOM
import time EOM
import csv EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout COMMA Merge EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
import copy EOM
data_dim  EQUAL  1 EOM
timesteps  EQUAL  13 EOM
model_A  EQUAL  Sequential( PARERIGHT  EOM
model_B  EQUAL  Sequential( PARERIGHT  EOM
model_Combine  EQUAL  Sequential( PARERIGHT  EOM
lstm_hidden_size  EQUAL  [] EOM
drop_out_rate  EQUAL  [] EOM
model_A DOT add(LSTM(lstm_hidden_size[] COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_A DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_A DOT add(Dense( PARERIGHT  PARERIGHT  EOM
in_dimension  EQUAL  3 EOM
nn_hidden_size  EQUAL  [] EOM
nn_drop_rate  EQUAL  [] EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_Combine DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model_Combine DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_Combine DOT compile( PARERIGHT  EOM
from keras DOT utils DOT visualize_util import plot COMMA  to_graph EOM
graph  EQUAL  to_graph( PARERIGHT  EOM
graph DOT write_png( PARERIGHT import glob EOM
import subprocess EOM
import json EOM
import re EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import np_utils EOM
from keras DOT models import Sequential EOM
from keras import metrics EOM
from sklearn DOT metrics import precision_recall_fscore_support EOM
from sklearn DOT metrics import f1_score EOM
from sklearn DOT metrics import precision_score EOM
from sklearn DOT metrics import recall_score EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Embedding  COMMA  Merge COMMA RepeatVector EOM
from keras DOT layers import LSTM COMMA  SimpleRNN COMMA  GRU COMMA  TimeDistributed EOM
from keras DOT datasets import imdb EOM
from keras DOT layers DOT core import Reshape EOM
from keras DOT optimizers import SGD COMMA  Adam COMMA  RMSprop EOM
from sklearn DOT metrics import confusion_matrix EOM
from sklearn DOT model_selection import StratifiedKFold EOM
seed EQUAL 7 EOM
np DOT random DOT seed( PARERIGHT  EOM
def RLSTM( PARERIGHT : EOM
xtrain EQUAL [] EOM
ytrain EQUAL [] EOM
xtest EQUAL [] EOM
ytest EQUAL [] EOM
X_train  EQUAL  np DOT loadtxt( PARERIGHT  EOM
Y_train  EQUAL  np DOT loadtxt( PARERIGHT  EOM
Y_train  EQUAL  Y_train DOT reshape( PARERIGHT  EOM
X_test  EQUAL  X_train EOM
Y_test  EQUAL  Y_train EOM
X_train  EQUAL  np DOT repeat( PARERIGHT  EOM
Y_train  EQUAL  np DOT repeat( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(1 COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(RepeatVector( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
Y_result EQUAL model DOT predict( PARERIGHT  EOM
for num in range(0 COMMA len( PARERIGHT  PARERIGHT : EOM
for s in range(0 COMMA len( PARERIGHT  PARERIGHT : EOM
for u in range(0 COMMA  len( PARERIGHT  PARERIGHT : EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  LSTM COMMA  Activation COMMA  Dropout COMMA  Embedding COMMA  Bidirectional COMMA  GlobalMaxPool1D EOM
from keras DOT optimizers import RMSprop EOM
class BiLSTM( PARERIGHT : EOM
def create_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
class BiLSTMv2( PARERIGHT : EOM
def create_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
class CSTM( PARERIGHT : EOM
def create_model( PARERIGHT : EOM
wv  EQUAL  vectors EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
if __name__  EQUAL  EQUAL  : EOM
import pickle as pkl EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from keras DOT layers import Dense COMMA  Flatten COMMA  Dropout COMMA  ZeroPadding3D EOM
from keras DOT models import Sequential COMMA  load_model EOM
from keras DOT optimizers import Adam EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT convolutional import MaxPooling3D COMMA  Conv3D EOM
from keras DOT models import model_from_yaml EOM
from collections import deque EOM
import sys EOM
from keras DOT preprocessing import image EOM
import numpy as np EOM
from dataSetModel import DataSetModel COMMA  GetArrayFromImage EOM
from keras DOT applications DOT inception_v3 import InceptionV3 COMMA  preprocess_input EOM
from keras DOT layers import Reshape EOM
from keras DOT layers DOT wrappers import Bidirectional EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
class Model( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT featureQueue  EQUAL  deque( PARERIGHT  EOM
self DOT sequenseLength  EQUAL  sequenseLength EOM
self DOT savedModel  EQUAL  savedModel EOM
self DOT classesNumber  EQUAL  classesNumber EOM
self DOT featuresLength  EQUAL  featuresLength EOM
if self DOT savedModel is not None: EOM
self DOT model  EQUAL  load_model( PARERIGHT  EOM
elif modelName  EQUAL  EQUAL  : EOM
self DOT shapeOfInput  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT Conv3DModelCreate( PARERIGHT  EOM
elif modelName  EQUAL  EQUAL   : EOM
self DOT shapeOfInput  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT LSTMModelCreate( PARERIGHT  EOM
elif modelName  EQUAL  EQUAL   : EOM
self DOT shapeOfInputConv3d  EQUAL  ( PARERIGHT  EOM
self DOT shapeOfInputLSTM  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT Conv3dBLSTM( PARERIGHT  EOM
else: EOM
sys DOT exit( PARERIGHT  EOM
metrics  EQUAL  [] EOM
if self DOT classesNumber > EQUAL  10: EOM
metrics DOT append( PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
def Conv3DModelCreate( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from process_data import * EOM
from time import time EOM
def base_model( PARERIGHT : EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def multilayer_model( PARERIGHT : EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def generate( PARERIGHT : EOM
exp_pdf  EQUAL  np DOT exp(np DOT log( PARERIGHT  / temp PARERIGHT  EOM
return np DOT random DOT choice(np DOT arange(len( PARERIGHT  PARERIGHT  COMMA  p EQUAL ( PARERIGHT  / np DOT sum( PARERIGHT  PARERIGHT  EOM
gen  EQUAL  [] EOM
window  EQUAL  len( PARERIGHT  EOM
for _ in range( PARERIGHT : EOM
prev  EQUAL  np DOT array( PARERIGHT  EOM
gen DOT append(int_to_onehot(sample(model DOT predict( PARERIGHT [] PARERIGHT  COMMA  128 PARERIGHT  PARERIGHT  EOM
return  DOT join([] PARERIGHT  EOM
def perplexity( PARERIGHT : EOM
return np DOT prod(P ** (-1 / len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
X COMMA  Y  EQUAL  character_onehot( PARERIGHT  EOM
X_test COMMA  Y_test  EQUAL  character_onehot( PARERIGHT  EOM
bs  EQUAL  100 EOM
start  EQUAL  time( PARERIGHT  EOM
character_model  EQUAL  multilayer_model(100 COMMA  np DOT shape( PARERIGHT  COMMA  128 PARERIGHT  EOM
character_model DOT fit( PARERIGHT  EOM
end  EQUAL  time( PARERIGHT  EOM
seed  EQUAL  EOM
temps  EQUAL  [] EOM
for t in temps: EOM
from configs DOT data_config import * EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Activation COMMA  Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import Conv1D COMMA  MaxPooling1D EOM
def create_model_lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if embedding_trainable: EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def create_model_cnn( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Dropout COMMA  Dense COMMA  Activation COMMA  Input COMMA  Embedding EOM
from keras DOT optimizers import RMSprop EOM
from keras DOT models import load_model EOM
from keras DOT layers DOT merge import Average EOM
from keras DOT models import Model EOM
import os EOM
def M1_Embedding_128_256_relu( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(input_shape EQUAL ( PARERIGHT  COMMA  input_dim EQUAL  COMMA  output_dim EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def M2_Embedding_32_64_relu( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(input_shape EQUAL ( PARERIGHT  COMMA  input_dim EQUAL  COMMA  output_dim EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def M3_Embedding_32_64_64_64_relu( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(input_shape EQUAL ( PARERIGHT  COMMA  input_dim EQUAL  COMMA  output_dim EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def M4_Embedding_256_512_relu( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(input_shape EQUAL ( PARERIGHT  COMMA  input_dim EQUAL  COMMA  output_dim EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def M5_128( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(128 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def M6_128_256_relu( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(128 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def M7_128_256_relu_dropout( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(128 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def M8_M5_average_merge( PARERIGHT : EOM
truncated_models_outputs  EQUAL  [] EOM
models  EQUAL  [] EOM
for model_file in os DOT listdir( PARERIGHT : EOM
model_path  EQUAL  os DOT path DOT join( PARERIGHT  EOM
current_model  EQUAL  load_model( PARERIGHT  EOM
models DOT append( PARERIGHT  EOM
current_model DOT pop( PARERIGHT  EOM
truncated_models_outputs DOT append( PARERIGHT  EOM
new_models  EQUAL  [] EOM
input_layer  EQUAL  Input(shape EQUAL (SEQUENCE_LENGTH-1 COMMA  len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
for model in models: EOM
model  EQUAL  model( PARERIGHT  EOM
new_models DOT append( PARERIGHT  EOM
output  EQUAL  Average( PARERIGHT ( PARERIGHT  EOM
output  EQUAL  Activation( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
optimizer  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
MODELS  EQUAL  {: M1_Embedding_128_256_relu COMMA : M2_Embedding_32_64_relu COMMA : M3_Embedding_32_64_64_64_relu COMMA : M4_Embedding_256_512_relu COMMA : M5_128 COMMA : M6_128_256_relu COMMA : M7_128_256_relu_dropout COMMA : M8_M5_average_merge} EOM
def build_model( PARERIGHT : EOM
model  EQUAL  MODELS[]( PARERIGHT  EOM
return modelfrom keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers import GlobalAveragePooling1D COMMA  MaxPooling1D COMMA  Dense COMMA Dropout COMMA MaxPool1D COMMA  Conv1D COMMA  GlobalMaxPool1D COMMA  Activation COMMA  Bidirectional COMMA  LSTM COMMA  Input EOM
from keras import backend as K EOM
from keras DOT optimizers import Adam EOM
def precision( PARERIGHT : EOM
predicted_positives  EQUAL  K DOT sum(K DOT round(K DOT clip( PARERIGHT  PARERIGHT  PARERIGHT  EOM
precision  EQUAL  true_positives / (predicted_positives + K DOT epsilon( PARERIGHT  PARERIGHT  EOM
return precision EOM
def recall( PARERIGHT : EOM
possible_positives  EQUAL  K DOT sum(K DOT round(K DOT clip( PARERIGHT  PARERIGHT  PARERIGHT  EOM
recall  EQUAL  true_positives / (possible_positives + K DOT epsilon( PARERIGHT  PARERIGHT  EOM
return recall EOM
def mlpModel( PARERIGHT : EOM
last_idx  EQUAL  len( PARERIGHT  - 1 EOM
for ( PARERIGHT  in enumerate( PARERIGHT : EOM
activation_name  EQUAL  EOM
if idx  EQUAL  EQUAL  last_idx: EOM
activation_name  EQUAL  EOM
if idx  EQUAL  EQUAL  0: EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def convModel( PARERIGHT : EOM
for ( PARERIGHT  in enumerate( PARERIGHT : EOM
if isinstance( PARERIGHT : EOM
model DOT add(MaxPool1D( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             if i  EQUAL  EQUAL  0: EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(GlobalMaxPool1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA etrics EQUAL [] COMMA  optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
return model EOM
def convLstmModel( PARERIGHT : EOM
for ( PARERIGHT  in enumerate( PARERIGHT : EOM
if isinstance( PARERIGHT : EOM
model DOT add(MaxPool1D( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             if i  EQUAL  EQUAL  0: EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
else: EOM
for ( PARERIGHT  in enumerate( PARERIGHT : EOM
if i  EQUAL  EQUAL  len( PARERIGHT  - 1: EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA etrics EQUAL [] COMMA  optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
return model EOM
def lstmHypnoModel( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA etrics EQUAL [] COMMA  optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
return model EOM
def convHypnoModel( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(GlobalMaxPool1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA etrics EQUAL [] COMMA  optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
return model EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Conv1D COMMA  GlobalAveragePooling1D COMMA  MaxPooling1D EOM
def properHypnoConv( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(GlobalAveragePooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA etrics EQUAL [] COMMA  optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
return model EOM
def doubleHypnoConv( PARERIGHT : EOM
main_input  EQUAL  Input( PARERIGHT  EOM
x  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  MaxPooling1D( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  GlobalAveragePooling1D( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
output_hypno  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
output_arousals  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA etrics EQUAL [] COMMA  optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
return modelimport keras EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dense COMMA  Activation COMMA  Input COMMA  Dropout COMMA  Activation EOM
from keras DOT datasets import mnist EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT optimizers import Adam EOM
from keras DOT callbacks import TensorBoard EOM
learning_rate  EQUAL  0 DOT 001 EOM
training_iters  EQUAL  3 EOM
batch_size  EQUAL  128 EOM
display_step  EQUAL  10 EOM
n_input  EQUAL  28 EOM
n_step  EQUAL  28 EOM
n_hidden  EQUAL  128 EOM
n_classes  EQUAL  10 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
x_train  EQUAL  x_train DOT reshape( PARERIGHT  EOM
x_test  EQUAL  x_test DOT reshape( PARERIGHT  EOM
x_train  EQUAL  x_train DOT astype( PARERIGHT  EOM
x_test  EQUAL  x_test DOT astype( PARERIGHT  EOM
x_train / EQUAL  255 EOM
x_test / EQUAL  255 EOM
y_train  EQUAL  keras DOT utils DOT to_categorical( PARERIGHT  EOM
y_test  EQUAL  keras DOT utils DOT to_categorical( PARERIGHT  EOM
inputs  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
predictions  EQUAL  Activation( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
adam  EQUAL  Adam( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(x_train COMMA  y_train COMMA   tch_size EQUAL  COMMA   ochs EQUAL  COMMA   rbose EQUAL  COMMA   alidation_data EQUAL ( PARERIGHT  COMMA llbacks EQUAL [] PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras import Input EOM
from keras DOT engine import Model EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Flatten COMMA  Dense COMMA  Dropout EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT optimizers import SGD EOM
from keras DOT optimizers import Adam COMMA  RMSprop COMMA  Adagrad EOM
from keras DOT layers import LSTM COMMA  Convolution1D COMMA  LeakyReLU COMMA  MaxPooling1D COMMA  UpSampling1D COMMA  Merge COMMA  Conv1D COMMA  concatenate EOM
from keras DOT utils DOT vis_utils import plot_model EOM
from keras DOT models import load_model EOM
import io EOM
import time EOM
t0  EQUAL  time DOT time( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(100 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT load_weights( PARERIGHT  EOM
t1  EQUAL  time DOT time( PARERIGHT  EOM
tt  EQUAL  t1 - t0 EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Input EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
import numpy as np EOM
import keras DOT preprocessing DOT text as prep EOM
import keras DOT preprocessing DOT sequence as seq EOM
from keras import backend as K EOM
import  sklearn DOT cluster as clu EOM
from matplotlib import pyplot as plt EOM
from keras DOT utils DOT visualize_util import plot EOM
text EQUAL file DOT readlines( PARERIGHT  EOM
toknizer EQUAL prep DOT Tokenizer( PARERIGHT  EOM
toknizer DOT fit_on_texts( PARERIGHT  EOM
data EQUAL toknizer DOT texts_to_sequences( PARERIGHT  EOM
data EQUAL np DOT asanyarray( PARERIGHT  EOM
maxlen EQUAL [] EOM
maxlen EQUAL maxlen[] EOM
vocabSize EQUAL toknizer DOT word_index DOT __len__( PARERIGHT  EOM
data EQUAL seq DOT pad_sequences( PARERIGHT  EOM
X_train EQUAL data EOM
Y_train EQUAL np DOT eye(data DOT __len__( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(data DOT __len__( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
get_lstm_layer_output  EQUAL  K DOT function([] DOT input] COMMA [] PARERIGHT  EOM
y EQUAL model DOT predict( PARERIGHT  EOM
labels EQUAL [] EOM
lstmout EQUAL get_lstm_layer_output( PARERIGHT [] EOM
y_pred EQUAL kmeans DOT fit_predict( PARERIGHT  EOM
saveFile EQUAL  EOM
w EQUAL open( PARERIGHT  EOM
tmp EQUAL [] EOM
for i COMMA v in enumerate( PARERIGHT : EOM
tmp DOT append(str( PARERIGHT ++v PARERIGHT  EOM
tmp EQUAL sorted( PARERIGHT  EOM
for i in tmp: EOM
w DOT write( PARERIGHT from keras DOT models import Sequential COMMA Model EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten EOM
from keras DOT layers DOT core import Reshape COMMA  Permute EOM
from keras DOT layers import Merge COMMA concatenate EOM
from keras DOT layers DOT convolutional import Convolution2D COMMA  MaxPooling2D EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
import numpy as np EOM
def model_cnn_lstm_adam_binary( PARERIGHT : EOM
optimizer  EQUAL  EOM
loss  EQUAL  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Convolution2D(4 COMMA  ( PARERIGHT  COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT +inputShape PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape  EQUAL  model DOT layers[] DOT output_shape EOM
model DOT add(Reshape((convOutShape[] COMMA np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model COMMA  optimizer COMMA  loss EOM
def model_cnn_lstm_adam_binary_dropout( PARERIGHT : EOM
optimizer  EQUAL  EOM
loss  EQUAL  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Convolution2D(4 COMMA  ( PARERIGHT  COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT +inputShape PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
convOutShape  EQUAL  model DOT layers[] DOT output_shape EOM
model DOT add(Reshape((convOutShape[] COMMA np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model COMMA  optimizer COMMA  loss EOM
def model_cnn_lstm_adam( PARERIGHT : EOM
optimizer  EQUAL  EOM
loss  EQUAL  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Convolution2D(4 COMMA  ( PARERIGHT  COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT +inputShape PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape  EQUAL  model DOT layers[] DOT output_shape EOM
model DOT add(Reshape((convOutShape[] COMMA np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model COMMA  optimizer COMMA  loss EOM
def model_branched_cnn_mixed_lstm_binary( PARERIGHT : EOM
loss  EQUAL  EOM
kernelSize1  EQUAL  ( PARERIGHT  EOM
kernelSize2  EQUAL  ( PARERIGHT  EOM
ntOut  EQUAL  outputShape[] EOM
branch1  EQUAL  Sequential( PARERIGHT  EOM
branch1 DOT add(Convolution2D(numFilter COMMA  kernelSize1 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2  EQUAL  Sequential( PARERIGHT  EOM
branch2 DOT add(Convolution2D(numFilter COMMA  kernelSize2 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape2  EQUAL  branch2 DOT layers[] DOT output_shape EOM
branch2 DOT add(Reshape((convOutShape2[] COMMA  np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model COMMA  optimizer COMMA  loss EOM
def model_branched_cnn_mixed_lstm_regression( PARERIGHT : EOM
loss  EQUAL  EOM
kernelSize1  EQUAL  ( PARERIGHT  EOM
kernelSize2  EQUAL  ( PARERIGHT  EOM
ntOut  EQUAL  outputShape[] EOM
branch1  EQUAL  Sequential( PARERIGHT  EOM
branch1 DOT add(Convolution2D(numFilter COMMA  kernelSize1 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2  EQUAL  Sequential( PARERIGHT  EOM
branch2 DOT add(Convolution2D(numFilter COMMA  kernelSize2 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape2  EQUAL  branch2 DOT layers[] DOT output_shape EOM
branch2 DOT add(Reshape((convOutShape2[] COMMA  np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
return model COMMA  optimizer COMMA  loss EOM
from keras DOT layers import Input EOM
def model_branched_cnn_mixed_lstm_binary_functional( PARERIGHT : EOM
loss  EQUAL  EOM
kernelSize1  EQUAL  ( PARERIGHT  EOM
kernelSize2  EQUAL  ( PARERIGHT  EOM
ntOut  EQUAL  outputShape[] EOM
input1  EQUAL  Input(batch_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  EOM
input2  EQUAL  Input(batch_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  EOM
branch1  EQUAL  Sequential( PARERIGHT  EOM
branch1 DOT add(Convolution2D(numFilter COMMA  kernelSize1 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2  EQUAL  Sequential( PARERIGHT  EOM
branch2 DOT add(Convolution2D(numFilter COMMA  kernelSize2 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape2  EQUAL  branch2 DOT layers[] DOT output_shape EOM
branch2 DOT add(Reshape((convOutShape2[] COMMA  np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
output1  EQUAL  branch1( PARERIGHT  EOM
output2  EQUAL  branch2( PARERIGHT  EOM
mergedInput  EQUAL  concatenate( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  TimeDistributed(Dense( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
output  EQUAL  Activation( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
return model COMMA  optimizer COMMA  loss EOM
def model_branched_cnn_mixed_lstm_regression_padding( PARERIGHT : EOM
loss  EQUAL  EOM
kernelSize1  EQUAL  ( PARERIGHT  EOM
kernelSize2  EQUAL  ( PARERIGHT  EOM
ntOut  EQUAL  outputShape[] EOM
input1  EQUAL  Input(batch_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  EOM
input2  EQUAL  Input(batch_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  EOM
branch1  EQUAL  Sequential( PARERIGHT  EOM
branch1 DOT add(Convolution2D(numFilter COMMA  kernelSize1 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape1  EQUAL  branch1 DOT layers[] DOT output_shape EOM
branch1 DOT add(Reshape((convOutShape1[] COMMA  np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
nPadTo  EQUAL  int(np DOT ceil( PARERIGHT  * ntOut PARERIGHT  EOM
nPadding  EQUAL  ( PARERIGHT  EOM
branch1 DOT add(ZeroPadding1D(padding EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch2  EQUAL  Sequential( PARERIGHT  EOM
branch2 DOT add(Convolution2D(numFilter COMMA  kernelSize2 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  PARERIGHT  EOM
branch2 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape2  EQUAL  branch2 DOT layers[] DOT output_shape EOM
branch2 DOT add(Reshape((convOutShape2[] COMMA  np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
output1  EQUAL  branch1( PARERIGHT  EOM
output2  EQUAL  branch2( PARERIGHT  EOM
mergedInput  EQUAL  concatenate( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
output  EQUAL  TimeDistributed(Dense( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
return model COMMA  optimizer COMMA  loss EOM
from keras DOT layers import ZeroPadding1D EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers DOT core import Reshape COMMA  Permute EOM
from keras DOT layers import Merge COMMA  concatenate COMMA  BatchNormalization EOM
from keras DOT layers DOT convolutional import Convolution2D COMMA  MaxPooling2D EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
def model_branched_cnn_mixed_lstm_regression_batchNorm( PARERIGHT : EOM
loss  EQUAL  EOM
kernelSize1  EQUAL  ( PARERIGHT  EOM
kernelSize2  EQUAL  ( PARERIGHT  EOM
ntOut  EQUAL  outputShape[] EOM
input1  EQUAL  Input(batch_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  EOM
input2  EQUAL  Input(batch_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  EOM
branch1  EQUAL  Sequential( PARERIGHT  EOM
branch1 DOT add(Convolution2D(numFilter COMMA  kernelSize1 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape1  EQUAL  branch1 DOT layers[] DOT output_shape EOM
branch1 DOT add(Reshape((convOutShape1[] COMMA  np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
nPadTo  EQUAL  int(np DOT ceil( PARERIGHT  * ntOut PARERIGHT  EOM
nPadding  EQUAL  ( PARERIGHT  EOM
branch1 DOT add(ZeroPadding1D(padding EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch2  EQUAL  Sequential( PARERIGHT  EOM
branch2 DOT add(Convolution2D(numFilter COMMA  kernelSize2 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  PARERIGHT  EOM
branch2 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape2  EQUAL  branch2 DOT layers[] DOT output_shape EOM
branch2 DOT add(Reshape((convOutShape2[] COMMA  np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
output1  EQUAL  branch1( PARERIGHT  EOM
output2  EQUAL  branch2( PARERIGHT  EOM
mergedInput  EQUAL  concatenate( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  BatchNormalization( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  BatchNormalization( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
output  EQUAL  TimeDistributed(Dense( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
return model COMMA  optimizer COMMA  loss EOM
def model_branched_cnn_mixed_lstm_regression_functional( PARERIGHT : EOM
loss  EQUAL  EOM
kernelSize1  EQUAL  ( PARERIGHT  EOM
kernelSize2  EQUAL  ( PARERIGHT  EOM
ntOut  EQUAL  outputShape[] EOM
input1  EQUAL  Input(batch_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  EOM
input2  EQUAL  Input(batch_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  EOM
branch1  EQUAL  Sequential( PARERIGHT  EOM
branch1 DOT add(Convolution2D(numFilter COMMA  kernelSize1 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch2  EQUAL  Sequential( PARERIGHT  EOM
branch2 DOT add(Convolution2D(numFilter COMMA  kernelSize2 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape2  EQUAL  branch2 DOT layers[] DOT output_shape EOM
branch2 DOT add(Reshape((convOutShape2[] COMMA  np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
output1  EQUAL  branch1( PARERIGHT  EOM
output2  EQUAL  branch2( PARERIGHT  EOM
mergedInput  EQUAL  concatenate( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X EQUAL Dropout( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X EQUAL Dropout( PARERIGHT ( PARERIGHT  EOM
output  EQUAL  TimeDistributed(Dense( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
return model COMMA  optimizer COMMA  loss EOM
def model_cnn_cat_mixed_lstm_2predict( PARERIGHT : EOM
optimizer  EQUAL  EOM
loss  EQUAL  EOM
branch1  EQUAL  Sequential( PARERIGHT  EOM
branch1 DOT add(Convolution2D(4 COMMA  1 COMMA  5 COMMA  border_mode EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT +input1Shape PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch2  EQUAL  Sequential( PARERIGHT  EOM
branch2 DOT add(Convolution2D(4 COMMA  3 COMMA  5 COMMA  border_mode EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT +input2Shape PARERIGHT  PARERIGHT  EOM
branch2 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
convOutShape  EQUAL  model DOT layers[] DOT output_shape EOM
model DOT add(Reshape((np DOT prod( PARERIGHT  COMMA  convOutShape[] PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Permute(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model COMMA  optimizer COMMA  lossfrom keras DOT layers import Input COMMA  Dense EOM
from keras DOT models import Model EOM
from keras DOT layers import Flatten EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import GlobalMaxPool1D EOM
from keras DOT layers import Dropout EOM
from keras DOT models import Sequential EOM
def LSTM_Classifier( PARERIGHT : EOM
model EQUAL Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(GlobalMaxPool1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
import pytest EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras import Input COMMA  Model EOM
from keras DOT layers import Conv2D COMMA  Bidirectional EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(2 COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
inner_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_lstm  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  name EQUAL  PARERIGHT ( PARERIGHT  EOM
encoder  EQUAL  Model( PARERIGHT  EOM
outer_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_encoder  EQUAL  TimeDistributed( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
preds  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
def test_plot_sequential_embedding( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT import pandas as pd EOM
from sklearn DOT cross_validation import train_test_split EOM
from sklearn DOT preprocessing import LabelEncoder EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from keras DOT layers import Embedding EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dense EOM
def LSTM_fakenews( PARERIGHT : EOM
df  EQUAL  pd DOT read_csv( PARERIGHT  EOM
df  EQUAL  df DOT dropna( PARERIGHT  EOM
X_body_text  EQUAL  df DOT text DOT values EOM
X_headline_text  EQUAL  df DOT title DOT values EOM
y  EQUAL  df DOT label DOT values EOM
X_headline_train COMMA  X_headline_test COMMA  y_headline_train COMMA  y_headline_test  EQUAL  train_test_split( PARERIGHT  EOM
X_body_train COMMA  X_body_test COMMA  y_body_train COMMA  y_body_test  EQUAL  train_test_split( PARERIGHT  EOM
X_headline_list  EQUAL  list( PARERIGHT  EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts( PARERIGHT  EOM
sequences  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
l  EQUAL  len(max(sequences COMMA key  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
from keras DOT utils import to_categorical EOM
y_train_LSTM  EQUAL  [] EOM
y_test_LSTM  EQUAL  [] EOM
for x in y_headline_train: EOM
if x  EQUAL  EQUAL  : EOM
y_train_LSTM DOT append( PARERIGHT  EOM
else: EOM
y_train_LSTM DOT append( PARERIGHT  EOM
for x in y_headline_test: EOM
if x  EQUAL  EQUAL  : EOM
y_test_LSTM DOT append( PARERIGHT  EOM
else: EOM
y_test_LSTM DOT append( PARERIGHT  EOM
y_train_LSTM  EQUAL  to_categorical( PARERIGHT  EOM
y_test_LSTM  EQUAL  to_categorical( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
test  EQUAL  list( PARERIGHT  EOM
sequences  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
pad_test  EQUAL  pad_sequences( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT utils import to_categorical EOM
y_train_LSTM  EQUAL  [] EOM
y_test_LSTM  EQUAL  [] EOM
for x in y_body_train: EOM
if x  EQUAL  EQUAL  : EOM
y_train_LSTM DOT append( PARERIGHT  EOM
else: EOM
y_train_LSTM DOT append( PARERIGHT  EOM
for x in y_body_test: EOM
if x  EQUAL  EQUAL  : EOM
y_test_LSTM DOT append( PARERIGHT  EOM
else: EOM
y_test_LSTM DOT append( PARERIGHT  EOM
y_train_LSTM  EQUAL  to_categorical( PARERIGHT  EOM
y_test_LSTM  EQUAL  to_categorical( PARERIGHT  EOM
X_body_list  EQUAL  list( PARERIGHT  EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts( PARERIGHT  EOM
sequences  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
l  EQUAL  len(max(sequences COMMA key  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
test  EQUAL  list( PARERIGHT  EOM
sequences  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
pad_test  EQUAL  pad_sequences( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
from datasets import Datasets EOM
import numpy as np EOM
from keras DOT layers DOT core import Dense COMMA  Merge COMMA  Dropout EOM
from keras DOT layers import recurrent EOM
from keras DOT models import Sequential EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
class Fit: EOM
def __init__( PARERIGHT : EOM
self DOT W2V_DIM  EQUAL  w2v_dim EOM
self DOT SENT_HIDDEN_SIZE  EQUAL  sent_hidden_size EOM
self DOT QUERY_HIDDEN_SIZE  EQUAL  query_hidden_size EOM
self DOT BATCH_SIZE  EQUAL  batch_size EOM
self DOT EPOCHS  EQUAL  epochs EOM
self DOT vocab_size  EQUAL  vocab_size EOM
self DOT SENT_HIDDEN_SIZE2  EQUAL  sent_hidden_size2 EOM
self DOT QUERY_HIDDEN_SIZE2  EQUAL  query_hidden_size2 EOM
self DOT two_hidden_layers  EQUAL  two_hidden_layers EOM
self DOT rs  EQUAL  rs EOM
self DOT dropout  EQUAL  dropout EOM
self DOT X  EQUAL  None EOM
self DOT Xq  EQUAL  None EOM
self DOT Y  EQUAL  None EOM
self DOT answers  EQUAL  None EOM
def compile_layers( PARERIGHT : EOM
RNN  EQUAL  self DOT model EOM
sentrnn  EQUAL  Sequential( PARERIGHT  EOM
sentrnn DOT add(RNN( PARERIGHT  PARERIGHT  EOM
sentrnn DOT add(Dense( PARERIGHT  PARERIGHT  EOM
qrnn  EQUAL  Sequential( PARERIGHT  EOM
qrnn DOT add(RNN( PARERIGHT  PARERIGHT  EOM
qrnn DOT add(RNN( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT model  EQUAL  model EOM
else: EOM
RNN  EQUAL  self DOT model EOM
sentrnn  EQUAL  Sequential( PARERIGHT  EOM
sentrnn DOT add(RNN( PARERIGHT  PARERIGHT  EOM
if self DOT dropout: EOM
sentrnn DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
qrnn  EQUAL  Sequential( PARERIGHT  EOM
qrnn DOT add(RNN( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT model  EQUAL  model EOM
def run( PARERIGHT : EOM
self DOT X  EQUAL  X EOM
self DOT Xq  EQUAL  Xq EOM
self DOT Y  EQUAL  Y EOM
self DOT model DOT fit( PARERIGHT  EOM
def score( PARERIGHT : EOM
return acc EOM
if __name__  EQUAL  EQUAL  : EOM
passfrom __future__ import print_function EOM
from sklearn DOT cross_validation import train_test_split EOM
import pandas as pd EOM
import numpy as np EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import np_utils EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Embedding EOM
from keras DOT layers import LSTM COMMA  SimpleRNN COMMA  GRU EOM
from keras DOT datasets import imdb EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from sklearn DOT metrics import ( PARERIGHT  EOM
from sklearn import metrics EOM
from sklearn DOT preprocessing import Normalizer EOM
import h5py EOM
from keras import callbacks EOM
from keras DOT callbacks import ModelCheckpoint COMMA  EarlyStopping COMMA  ReduceLROnPlateau COMMA  CSVLogger EOM
traindata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
testdata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
X  EQUAL  traindata DOT iloc[] EOM
Y  EQUAL  traindata DOT iloc[] EOM
C  EQUAL  testdata DOT iloc[] EOM
T  EQUAL  testdata DOT iloc[] EOM
scaler  EQUAL  Normalizer( PARERIGHT  DOT fit( PARERIGHT  EOM
trainX  EQUAL  scaler DOT transform( PARERIGHT  EOM
np DOT set_printoptions( PARERIGHT  EOM
scaler  EQUAL  Normalizer( PARERIGHT  DOT fit( PARERIGHT  EOM
testT  EQUAL  scaler DOT transform( PARERIGHT  EOM
np DOT set_printoptions( PARERIGHT  EOM
y_train  EQUAL  np DOT array( PARERIGHT  EOM
y_test  EQUAL  np DOT array( PARERIGHT  EOM
X_train  EQUAL  np DOT reshape(trainX COMMA  ( PARERIGHT  PARERIGHT  EOM
X_test  EQUAL  np DOT reshape(testT COMMA  ( PARERIGHT  PARERIGHT  EOM
batch_size  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
checkpointer  EQUAL  callbacks DOT ModelCheckpoint( PARERIGHT  EOM
csv_logger  EQUAL  CSVLogger( PARERIGHT  EOM
model DOT fit(X_train COMMA  y_train COMMA  batch_size EQUAL  COMMA  nb_epoch EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  COMMA callbacks EQUAL [] PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
from __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
from absl DOT testing import parameterized EOM
import numpy as np EOM
from tensorflow DOT python import keras EOM
from tensorflow DOT python DOT eager import context EOM
from tensorflow DOT python DOT keras import keras_parameterized EOM
from tensorflow DOT python DOT keras import testing_utils EOM
from tensorflow DOT python DOT platform import test EOM
from tensorflow DOT python DOT training import adam EOM
from tensorflow DOT python DOT training import gradient_descent EOM
class LSTMLayerTest( PARERIGHT : EOM
def test_return_sequences_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA return_sequences EOM
def test_static_shape_inference_LSTM( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
inputs  EQUAL  keras DOT layers DOT Dense(embedding_dim COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
outputs  EQUAL  model DOT layers[] DOT output EOM
self DOT assertEqual(outputs DOT shape DOT as_list( PARERIGHT  COMMA  [] PARERIGHT  EOM
def test_dynamic_behavior_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
layer  EQUAL  keras DOT layers DOT LSTM(units COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile(mspropmse EOM
x  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_dropout_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA dropout: 0 DOT 1} COMMA put_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
def test_implementation_mode_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA implementation EOM
def test_constraints_LSTM( PARERIGHT : EOM
embedding_dim  EQUAL  4 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
k_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
r_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
b_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
layer  EQUAL  layer_class(5 COMMA return_sequences EQUAL  COMMA weights EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA kernel_constraint EQUAL  COMMA recurrent_constraint EQUAL  COMMA bias_constraint EQUAL  PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
def test_with_masking_layer_LSTM( PARERIGHT : EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT abs(np DOT random DOT random(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
targets / EQUAL  targets DOT sum( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Masking(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(layer_class( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL  COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
def test_masking_with_stacking_LSTM( PARERIGHT : EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT abs(np DOT random DOT random(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
targets / EQUAL  targets DOT sum( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Masking(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
lstm_cells  EQUAL  [] EOM
model DOT add(keras DOT layers DOT RNN( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL  COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
def test_from_config_LSTM( PARERIGHT : EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
for stateful in ( PARERIGHT : EOM
l1  EQUAL  layer_class( PARERIGHT  EOM
l2  EQUAL  layer_class DOT from_config(l1 DOT get_config( PARERIGHT  PARERIGHT  EOM
assert l1 DOT get_config( PARERIGHT   EQUAL ( PARERIGHT  EOM
def test_specify_initial_state_keras_tensor( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
if len( PARERIGHT   EQUAL       output  EQUAL  layer( PARERIGHT  EOM
else: EOM
output  EQUAL  layer( PARERIGHT  EOM
assert initial_state[] in layer DOT _inbound_nodes[] DOT input_tensors EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_specify_initial_state_non_keras_tensor( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [keras DOT backend DOT random_normal_variable( PARERIGHT  COMMA  0 COMMA  1 PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
output  EQUAL  layer( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_reset_states_with_values( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
assert len( PARERIGHT   EQUAL     assert layer DOT states[] is not None EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA np DOT zeros(keras DOT backend DOT int_shape( PARERIGHT  PARERIGHT  COMMA atol EQUAL  PARERIGHT  EOM
state_shapes  EQUAL  [] EOM
values  EQUAL  [] EOM
if len( PARERIGHT   EQUAL       values  EQUAL  values[] EOM
layer DOT reset_states( PARERIGHT  EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA np DOT ones(keras DOT backend DOT int_shape( PARERIGHT  PARERIGHT  COMMA atol EQUAL  PARERIGHT  EOM
with self DOT assertRaises( PARERIGHT : EOM
layer DOT reset_states([] * (len( PARERIGHT  + 1 PARERIGHT  PARERIGHT  EOM
def test_specify_state_with_masking( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
_  EQUAL  keras DOT layers DOT Masking( PARERIGHT ( PARERIGHT  EOM
initial_state  EQUAL  [] EOM
output  EQUAL  keras DOT layers DOT LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL  COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_return_state( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(batch_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
outputs  EQUAL  layer( PARERIGHT  EOM
state  EQUAL  outputs[] EOM
assert len( PARERIGHT   EQUAL     model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
state  EQUAL  model DOT predict( PARERIGHT  EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA  state COMMA  atol EQUAL  PARERIGHT  EOM
def test_state_reuse( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(batch_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
outputs  EQUAL  layer( PARERIGHT  EOM
output COMMA  state  EQUAL  outputs[] COMMA  outputs[] EOM
output  EQUAL  keras DOT layers DOT LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
outputs  EQUAL  model DOT predict( PARERIGHT  EOM
def test_initial_states_as_other_inputs( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
num_states  EQUAL  2 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
main_inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
inputs  EQUAL  [] + initial_state EOM
layer  EQUAL  layer_class( PARERIGHT  EOM
output  EQUAL  layer( PARERIGHT  EOM
assert initial_state[] in layer DOT _inbound_nodes[] DOT input_tensors EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
main_inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_regularizers_LSTM( PARERIGHT : EOM
embedding_dim  EQUAL  4 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
layer  EQUAL  layer_class(5 COMMA return_sequences EQUAL  COMMA weights EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA recurrent_regularizer EQUAL ( PARERIGHT  COMMA bias_regularizer EQUAL  COMMA activity_regularizer EQUAL  PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
self DOT assertEqual(len( PARERIGHT  COMMA  3 PARERIGHT  EOM
x  EQUAL  keras DOT backend DOT variable(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
layer( PARERIGHT  EOM
if context DOT executing_eagerly( PARERIGHT : EOM
self DOT assertEqual(len( PARERIGHT  COMMA  4 PARERIGHT  EOM
else: EOM
self DOT assertEqual(len(layer DOT get_losses_for( PARERIGHT  PARERIGHT  COMMA  1 PARERIGHT  EOM
def test_statefulness_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Embedding(4 COMMA embedding_dim COMMA mask_zero EQUAL  COMMA input_length EQUAL  COMMA atch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
layer  EQUAL  layer_class( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile(optimizer EQUAL ( PARERIGHT  COMMA oss EQUAL  COMMA  run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
out1  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertEqual(out1 DOT shape COMMA  ( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch(ones(( PARERIGHT  PARERIGHT  COMMA  np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
out2  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out1 DOT max( PARERIGHT  COMMA  out2 DOT max( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
out3  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out2 DOT max( PARERIGHT  COMMA  out3 DOT max( PARERIGHT  PARERIGHT  EOM
model DOT reset_states( PARERIGHT  EOM
out4  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertAllClose( PARERIGHT  EOM
out5  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out4 DOT max( PARERIGHT  COMMA  out5 DOT max( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
left_padded_input  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
left_padded_input[]  EQUAL  0 EOM
left_padded_input[]  EQUAL  0 EOM
out6  EQUAL  model DOT predict( PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
right_padded_input  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
right_padded_input[]  EQUAL  0 EOM
right_padded_input[]  EQUAL  0 EOM
out7  EQUAL  model DOT predict( PARERIGHT  EOM
self DOT assertAllClose( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
test DOT main( PARERIGHT from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
import numpy as np EOM
max_features  EQUAL  1000 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  np DOT random DOT randint(2 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Dense EOM
import numpy as np EOM
data_dim  EQUAL  16 EOM
timesteps  EQUAL  8 EOM
num_classes  EQUAL  10 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
x_val  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_val  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT fit(x_train COMMA  y_train COMMA  batch_size EQUAL  COMMA  epochs EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Dense EOM
import numpy as np EOM
data_dim  EQUAL  16 EOM
timesteps  EQUAL  8 EOM
num_classes  EQUAL  10 EOM
batch_size  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(32 COMMA  return_sequences EQUAL  COMMA  stateful EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
x_val  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_val  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT fit(x_train COMMA  y_train COMMA batch_size EQUAL  COMMA  epochs EQUAL  COMMA  shuffle EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  EOM
import pytest EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras import Input COMMA  Model EOM
from keras DOT layers import Conv2D COMMA  Bidirectional EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(2 COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
inner_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_lstm  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  name EQUAL  PARERIGHT ( PARERIGHT  EOM
encoder  EQUAL  Model( PARERIGHT  EOM
outer_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_encoder  EQUAL  TimeDistributed( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
preds  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
def test_plot_sequential_embedding( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT Source: EOM
import numpy EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT callbacks import ModelCheckpoint EOM
from keras DOT utils import np_utils EOM
filename  EQUAL  EOM
raw_text  EQUAL  open( PARERIGHT  DOT read( PARERIGHT  EOM
raw_text  EQUAL  raw_text DOT lower( PARERIGHT  EOM
chars  EQUAL  sorted(list(set( PARERIGHT  PARERIGHT  PARERIGHT  EOM
char_to_int  EQUAL  dict(( PARERIGHT  for i COMMA  c in enumerate( PARERIGHT  PARERIGHT  EOM
n_chars  EQUAL  len( PARERIGHT  EOM
n_vocab  EQUAL  len( PARERIGHT  EOM
seq_length  EQUAL  100 EOM
dataX  EQUAL  [] EOM
dataY  EQUAL  [] EOM
for i in range( PARERIGHT : EOM
seq_in  EQUAL  raw_text[] EOM
seq_out  EQUAL  raw_text[] EOM
dataX DOT append( PARERIGHT  EOM
dataY DOT append( PARERIGHT  EOM
n_patterns  EQUAL  len( PARERIGHT  EOM
X  EQUAL  numpy DOT reshape(dataX COMMA  ( PARERIGHT  PARERIGHT  EOM
X DOT shape EOM
X  EQUAL  X / float( PARERIGHT  EOM
y  EQUAL  np_utils DOT to_categorical( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(256 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
filepath EQUAL  EOM
checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
callbacks_list  EQUAL  [] EOM
model DOT fit( PARERIGHT  EOM
import sys EOM
import numpy EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT callbacks import ModelCheckpoint EOM
from keras DOT utils import np_utils EOM
filename  EQUAL  EOM
raw_text  EQUAL  open( PARERIGHT  DOT read( PARERIGHT  EOM
raw_text  EQUAL  raw_text DOT lower( PARERIGHT  EOM
chars  EQUAL  sorted(list(set( PARERIGHT  PARERIGHT  PARERIGHT  EOM
char_to_int  EQUAL  dict(( PARERIGHT  for i COMMA  c in enumerate( PARERIGHT  PARERIGHT  EOM
int_to_char  EQUAL  dict(( PARERIGHT  for i COMMA  c in enumerate( PARERIGHT  PARERIGHT  EOM
n_chars  EQUAL  len( PARERIGHT  EOM
n_vocab  EQUAL  len( PARERIGHT  EOM
seq_length  EQUAL  100 EOM
dataX  EQUAL  [] EOM
dataY  EQUAL  [] EOM
for i in range( PARERIGHT : EOM
seq_in  EQUAL  raw_text[] EOM
seq_out  EQUAL  raw_text[] EOM
dataX DOT append( PARERIGHT  EOM
dataY DOT append( PARERIGHT  EOM
n_patterns  EQUAL  len( PARERIGHT  EOM
X  EQUAL  numpy DOT reshape(dataX COMMA  ( PARERIGHT  PARERIGHT  EOM
X  EQUAL  X / float( PARERIGHT  EOM
y  EQUAL  np_utils DOT to_categorical( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(256 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
filename  EQUAL  EOM
model DOT load_weights( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
start  EQUAL  numpy DOT random DOT randint(0 COMMA  len( PARERIGHT -1 PARERIGHT  EOM
pattern  EQUAL  dataX[] EOM
for i in range( PARERIGHT : EOM
X  EQUAL  numpy DOT reshape(pattern COMMA  (1 COMMA  len( PARERIGHT  COMMA  1 PARERIGHT  PARERIGHT  EOM
X  EQUAL  x / float( PARERIGHT  EOM
prediction  EQUAL  model DOT predict( PARERIGHT  EOM
index  EQUAL  numpy DOT argmax( PARERIGHT  EOM
result  EQUAL  int_to_char[] EOM
seq_in  EQUAL  [] for value in pattern] EOM
sys DOT stdout DOT write( PARERIGHT  EOM
pattern DOT append( PARERIGHT  EOM
pattern  EQUAL  pattern[] EOM
import numpy as np EOM
import tensorflow as tf EOM
import tensorflow DOT keras DOT layers as layers EOM
from AutoconLayer import AutoconLayer EOM
def get_bartimaeus( PARERIGHT : EOM
model  EQUAL  tf DOT keras DOT Sequential( PARERIGHT  EOM
model DOT add(layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dense(dense_units COMMA  activation EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def get_rnn( PARERIGHT : EOM
model  EQUAL  tf DOT keras DOT Sequential( PARERIGHT  EOM
model DOT add(layers DOT SimpleRNN( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dense(dense_units COMMA  activation EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def get_dwarf( PARERIGHT : EOM
model  EQUAL  tf DOT keras DOT Sequential( PARERIGHT  EOM
model DOT add(layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def get_nathanael( PARERIGHT : EOM
model  EQUAL  tf DOT keras DOT Sequential( PARERIGHT  EOM
model DOT add(layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def get_ptolemaeus( PARERIGHT : EOM
model  EQUAL  tf DOT keras DOT Sequential( PARERIGHT  EOM
model DOT add(layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def get_grindelwald( PARERIGHT : EOM
model  EQUAL  tf DOT keras DOT Sequential( PARERIGHT  EOM
model DOT add(layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dense(64 COMMA  activation EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def get_autoconceptor( PARERIGHT : EOM
model  EQUAL  tf DOT keras DOT Sequential( PARERIGHT  EOM
model DOT add(AutoconLayer( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dense( PARERIGHT  PARERIGHT  EOM
return modelfrom __future__ import print_function COMMA  division EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers DOT recurrent import SimpleRNN COMMA  LSTM EOM
from keras DOT layers DOT noise import GaussianDropout EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
import theano EOM
import theano DOT tensor as T EOM
def build_feed_forward( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_train_rnn_mse( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(SimpleRNN( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_test_rnn_mse( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(SimpleRNN( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_simple_rnn_stateful( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(SimpleRNN(dh COMMA tch_input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA stateful EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_stacked_rnn( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(SimpleRNN( PARERIGHT  PARERIGHT  EOM
model DOT add(SimpleRNN( PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_train_lstm_mse( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_test_lstm_mse( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_lstm_stateful( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(dh COMMA tch_input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA stateful EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_train_lstm_softmax( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_test_lstm_softmax( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Activation( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_lstm_stateful_softmax( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(dh COMMA tch_input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA stateful EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_stacked_lstm_dropout_stateful_softmax( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(dh COMMA tch_input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(dh COMMA tch_input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_train_stacked_lstm_dropout_softmax( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_test_stacked_lstm_dropout_softmax( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Activation( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_train_stacked_lstm_dropout_mse( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_test_stacked_lstm_dropout_mse( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_stacked_lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_stacked_lstm_mse_stateful( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(dh COMMA tch_input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA stateful EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(do COMMA tch_input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA stateful EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_stacked_lstm_mse_stateful_dropout( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(dh COMMA tch_input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA stateful EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(do COMMA tch_input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA stateful EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_stacked_lstm_regularized( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_stacked_lstm_regularized_dropout( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_stacked_lstm_regularized_dropout_batchnorm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def build_overkill_stacked_lstm_regularized_dropout( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
def last_mse( PARERIGHT : EOM
yt  EQUAL  y_true[] EOM
yp  EQUAL  y_pred[] EOM
se  EQUAL  T DOT mean(T DOT square( PARERIGHT  COMMA  axis EQUAL  PARERIGHT  EOM
return se EOM
def get_hidden( PARERIGHT : EOM
get_activations  EQUAL  theano DOT function( PARERIGHT  EOM
return get_activations EOM
def build_softmax_rnn( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(SimpleRNN( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
if weights is not None: EOM
model DOT set_weights( PARERIGHT  EOM
return model EOM
if __name__  EQUAL  EQUAL  : EOM
dummy_params  EQUAL  10 COMMA  15 COMMA  5 COMMA  0 COMMA  None EOM
build_lstm( PARERIGHT  EOM
build_simple_rnn( PARERIGHT  EOM
build_softmax_rnn( PARERIGHT  EOM
build_stacked_lstm_dropout( PARERIGHT import keras EOM
from keras DOT models import Sequential COMMA  save_model EOM
from keras DOT layers import LSTM EOM
import keras DOT backend as K EOM
base_path  EQUAL  EOM
backend  EQUAL  K DOT backend( PARERIGHT  EOM
version  EQUAL  keras DOT __version__ EOM
major_version  EQUAL  int( PARERIGHT  EOM
n_in  EQUAL  4 EOM
n_out  EQUAL  6 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(n_out COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT save( DOT format( PARERIGHT  PARERIGHT import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Embedding COMMA  LSTM COMMA  Dense COMMA  Dropout COMMA  Bidirectional COMMA  TimeDistributed COMMA  Activation COMMA  Convolution1D COMMA  MaxPool1D EOM
from keras DOT models import Model EOM
from keras DOT preprocessing import sequence EOM
use_dropout  EQUAL  True EOM
def LSTM_Model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if use_dropout: EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def LSTM2Layer_Model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if use_dropout: EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def BiLSTM_Model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if use_dropout: EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def CLSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if use_dropout: EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def CBiLSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if use_dropout: EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
if __name__  EQUAL  EQUAL  : EOM
CBiLSTM( PARERIGHT import os EOM
global_model_version  EQUAL  40 EOM
global_batch_size  EQUAL  32 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_2  EQUAL  Sequential( PARERIGHT  EOM
branch_2 DOT add( PARERIGHT  EOM
branch_2 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_6  EQUAL  Sequential( PARERIGHT  EOM
branch_6 DOT add( PARERIGHT  EOM
branch_6 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import os EOM
global_model_version  EQUAL  59 EOM
global_batch_size  EQUAL  128 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  keras DOT optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import numpy as np EOM
from keras DOT preprocessing DOT text import one_hot EOM
from keras_preprocessing import sequence EOM
from keras import Sequential EOM
from keras DOT models import load_model EOM
from keras DOT layers import Embedding COMMA  LSTM COMMA  Dense COMMA  Dropout EOM
import matplotlib DOT pyplot as plt EOM
import sys EOM
negative  EQUAL  open( PARERIGHT  DOT readlines( PARERIGHT  EOM
positive  EQUAL  open( PARERIGHT  DOT readlines( PARERIGHT  EOM
temp  EQUAL  [] EOM
for line in negative: EOM
temp DOT append(line DOT strip( PARERIGHT  PARERIGHT  EOM
negative  EQUAL  temp DOT copy( PARERIGHT  EOM
temp  EQUAL  [] EOM
for line in positive: EOM
temp DOT append(line DOT strip( PARERIGHT  PARERIGHT  EOM
positive  EQUAL  temp DOT copy( PARERIGHT  EOM
positive  EQUAL  [] EOM
negative  EQUAL  [] EOM
negative_vocab  EQUAL  len(sorted(set( PARERIGHT  PARERIGHT  PARERIGHT  EOM
positive_vocab  EQUAL  len(sorted(set( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vocab  EQUAL  len(sorted(set( PARERIGHT  PARERIGHT  PARERIGHT  EOM
encoded_negative  EQUAL  [] EOM
encoded_positive  EQUAL  [] EOM
x_train  EQUAL  encoded_positive[] + encoded_negative[] EOM
x_test  EQUAL  encoded_positive[] + encoded_negative[] EOM
y_train  EQUAL  [] * 7000 + [] * 7000 EOM
y_test  EQUAL  [] * 2926 + [] * 2704 EOM
max_review_length  EQUAL  350 EOM
x_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
x_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
if len( PARERIGHT  < EQUAL     embedding_vector_length  EQUAL  32 EOM
dropout_rate  EQUAL  0 DOT 2 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
model DOT save_weights( PARERIGHT  EOM
del model EOM
model  EQUAL  load_model( PARERIGHT  EOM
model DOT load_weights( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
bad  EQUAL  EOM
good  EQUAL  EOM
bad_  EQUAL  one_hot( PARERIGHT  EOM
good_  EQUAL  one_hot( PARERIGHT  EOM
bad_encoded  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
good_encoded  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
from keras import optimizers EOM
import numpy as np EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
from sklearn DOT ensemble import BaggingClassifier COMMA  RandomForestClassifier COMMA  \ EOM
ExtraTreesClassifier COMMA  AdaBoostClassifier COMMA  GradientBoostingClassifier COMMA  \ EOM
VotingClassifier EOM
from sklearn DOT naive_bayes import GaussianNB EOM
from sklearn DOT linear_model import LogisticRegression EOM
from mlxtend DOT classifier import StackingCVClassifier EOM
def create_ffNN( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
adam  EQUAL  optimizers DOT Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def create_LSTM( PARERIGHT : EOM
model DOT add(LSTM(64 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def create_biLSTM( PARERIGHT : EOM
model DOT add(Bidirectional(LSTM(64 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def best_ensemble( PARERIGHT : EOM
bagging_clf  EQUAL  BaggingClassifier( PARERIGHT  EOM
rf_clf  EQUAL  RandomForestClassifier( PARERIGHT  EOM
return zip( PARERIGHT  EOM
def stacking( PARERIGHT : EOM
for ( PARERIGHT  in best_ensemble( PARERIGHT : EOM
classifiers DOT append( PARERIGHT  EOM
superlearner  EQUAL  RandomForestClassifier( PARERIGHT  EOM
np DOT random DOT seed( PARERIGHT  EOM
stacking_clf  EQUAL  StackingCVClassifier( PARERIGHT  EOM
return stacking_clffrom numpy import array EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT layers import LSTM EOM
length  EQUAL  5 EOM
seq  EQUAL  array([] PARERIGHT  EOM
X  EQUAL  seq DOT reshape( PARERIGHT  EOM
y  EQUAL  seq DOT reshape( PARERIGHT  EOM
n_neurons  EQUAL  length EOM
n_batch  EQUAL  1 EOM
n_epoch  EQUAL  1000 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(n_neurons COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
result  EQUAL  model DOT predict( PARERIGHT  EOM
for value in result[]: EOM
from keras DOT models import Model EOM
from keras DOT layers import Input EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Bidirectional EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT merge import concatenate EOM
from keras DOT models import Sequential EOM
import numpy as np EOM
np DOT random DOT seed( PARERIGHT  EOM
emb_size  EQUAL  8 EOM
filters  EQUAL  3 EOM
lstm_number  EQUAL  10 EOM
def multiple( PARERIGHT : EOM
inputs1  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
embedding1  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
dropout1_0  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
conv1  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
pool1  EQUAL  MaxPooling1D( PARERIGHT ( PARERIGHT  EOM
dropout1_1  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
b_lstm1  EQUAL  Bidirectional(LSTM( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
lstm1  EQUAL  Bidirectional(LSTM( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
inputs2  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
embedding2  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
dropout2_0  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
conv2  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
pool2  EQUAL  MaxPooling1D( PARERIGHT ( PARERIGHT  EOM
dropout2_1  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
b_lstm2  EQUAL  Bidirectional(LSTM( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
lstm2  EQUAL  Bidirectional(LSTM( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
inputs3  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
embedding3  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
dropout3_0  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
conv3  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
pool3  EQUAL  MaxPooling1D( PARERIGHT ( PARERIGHT  EOM
dropout3_1  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
b_lstm3  EQUAL  Bidirectional(LSTM( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
lstm3  EQUAL  Bidirectional(LSTM( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
merged  EQUAL  concatenate( PARERIGHT  EOM
dropout  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
outputs  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
return model EOM
def cnn_blstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return modelfrom loop import vector EOM
from keras DOT models import model_from_json EOM
from data import embedding COMMA  dev_data COMMA  train_data EOM
import tqdm EOM
import json EOM
import numpy as np EOM
from loop import make_generator EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Dropout COMMA  Flatten EOM
EMBEDDING_DIMS  EQUAL  300 EOM
CONTEXT_LENGTH  EQUAL  700 EOM
QUESTION_LENGTH  EQUAL  40 EOM
cenc  EQUAL  Sequential( PARERIGHT  EOM
cenc DOT add(LSTM(128 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
cenc DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
qenc  EQUAL  Sequential( PARERIGHT  EOM
qenc DOT add(LSTM(128 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
qenc DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
aenc  EQUAL  Sequential( PARERIGHT  EOM
aenc DOT add(LSTM(128 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
aenc DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
facts  EQUAL  Sequential( PARERIGHT  EOM
facts DOT add(Merge( PARERIGHT  PARERIGHT  EOM
attn  EQUAL  Sequential( PARERIGHT  EOM
attn DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT load_weights( PARERIGHT  EOM
results  EQUAL  [] EOM
for i in tqdm DOT tqdm(range( PARERIGHT  PARERIGHT : EOM
prediction  EQUAL  [] EOM
c COMMA  q COMMA  a  EQUAL  train_data[] EOM
c_vec  EQUAL  vector( PARERIGHT  EOM
q_vec  EQUAL  vector( PARERIGHT  EOM
C  EQUAL  [] EOM
Q  EQUAL  [] EOM
A  EQUAL  [] EOM
for word in c: EOM
C DOT append( PARERIGHT  EOM
Q DOT append( PARERIGHT  EOM
A DOT append(vector( PARERIGHT  PARERIGHT  EOM
C COMMA  Q COMMA  A  EQUAL  map(np DOT array COMMA  ( PARERIGHT  PARERIGHT  EOM
P  EQUAL  model DOT predict( PARERIGHT  EOM
for i COMMA  word in enumerate( PARERIGHT : EOM
prediction DOT append({		: word COMMA 		: float( PARERIGHT 		} PARERIGHT  EOM
results DOT append({:  DOT join( PARERIGHT  COMMA :  DOT join( PARERIGHT  COMMA :  DOT join( PARERIGHT  COMMA 	: prediction	} PARERIGHT  EOM
json DOT dump(results COMMA  open( PARERIGHT  COMMA  indent EQUAL  PARERIGHT from keras DOT models import Sequential EOM
from keras import layers EOM
import numpy as np EOM
from six DOT moves import range EOM
import sys EOM
import os EOM
from keras DOT models import load_model EOM
import keras EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dense COMMA Dropout COMMA Activation EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT layers import Bidirectional EOM
import time EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT utils import plot_model EOM
from keras DOT layers DOT embeddings import Embedding EOM
class SenseModel( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT lstmunits  EQUAL lstmunits EOM
self DOT lstmLayerNum  EQUAL  lstmLayerNum EOM
self DOT DenseUnits  EQUAL  DenseUnits EOM
self DOT charlenth  EQUAL  charlenth EOM
self DOT datalenth  EQUAL  datalenth EOM
self DOT buildmodel( PARERIGHT  EOM
def buildmodel( PARERIGHT : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add(layers DOT LSTM(self DOT lstmunits COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
self DOT model DOT add(Bidirectional(layers DOT LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Bidirectional(layers DOT LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
self DOT model DOT summary( PARERIGHT  EOM
def trainModel( PARERIGHT : EOM
for cur in range( PARERIGHT : EOM
self DOT model DOT fit( PARERIGHT  EOM
mdname EQUAL savename++str( PARERIGHT  EOM
self DOT model DOT save( PARERIGHT  EOM
if __name__  EQUAL  EQUAL : EOM
a  EQUAL  SenseModel( PARERIGHT import os EOM
global_model_version  EQUAL  52 EOM
global_batch_size  EQUAL  128 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from keras DOT models import Sequential COMMA  load_model EOM
from keras DOT layers import Dense COMMA  Activation COMMA  Dropout COMMA  Bidirectional EOM
from keras DOT layers import LSTM EOM
def model_0( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model COMMA  EOM
def model_1( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  COMMA  input_shape EQUAL  COMMA  merge_mode EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model COMMA  EOM
def model_7( PARERIGHT : EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model COMMA  EOM
def model_8( PARERIGHT : EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model COMMA  EOM
def model_9( PARERIGHT : EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  COMMA input_shape EQUAL  COMMA merge_mode EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  COMMA merge_mode EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model COMMA  import keras EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dense COMMA  Activation COMMA  Input COMMA  Dropout COMMA  Activation EOM
from keras DOT datasets import mnist EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT optimizers import Adam EOM
from keras DOT callbacks import TensorBoard EOM
learning_rate  EQUAL  0 DOT 001 EOM
training_iters  EQUAL  3 EOM
batch_size  EQUAL  128 EOM
display_step  EQUAL  10 EOM
n_input  EQUAL  28 EOM
n_step  EQUAL  28 EOM
n_hidden  EQUAL  128 EOM
n_classes  EQUAL  10 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
x_train  EQUAL  x_train DOT reshape( PARERIGHT  EOM
x_test  EQUAL  x_test DOT reshape( PARERIGHT  EOM
x_train  EQUAL  x_train DOT astype( PARERIGHT  EOM
x_test  EQUAL  x_test DOT astype( PARERIGHT  EOM
x_train / EQUAL  255 EOM
x_test / EQUAL  255 EOM
y_train  EQUAL  keras DOT utils DOT to_categorical( PARERIGHT  EOM
y_test  EQUAL  keras DOT utils DOT to_categorical( PARERIGHT  EOM
inputs  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
predictions  EQUAL  Activation( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
adam  EQUAL  Adam( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(x_train COMMA  y_train COMMA   tch_size EQUAL  COMMA   ochs EQUAL  COMMA   rbose EQUAL  COMMA   alidation_data EQUAL ( PARERIGHT  COMMA llbacks EQUAL [] PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT regularizers import l1 COMMA  activity_l1 EOM
def create_simple_LSTM ( PARERIGHT : EOM
D  EQUAL  embeddings DOT shape[] EOM
out_dim  EQUAL  5 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def create_extreme_LSTM ( PARERIGHT : EOM
D  EQUAL  embeddings DOT shape[] EOM
out_dim  EQUAL  5 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
for Dense_size in Dense_sizes: EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def create_stacked_LSTM ( PARERIGHT : EOM
D  EQUAL  embeddings DOT shape[] EOM
out_dim  EQUAL  5 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
for Dense_size in Dense_sizes: EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense  COMMA Dropout COMMA Activation EOM
from keras DOT optimizers import SGD EOM
import pandas as pd EOM
import  matplotlib DOT pyplot as plt EOM
datas EQUAL pd DOT read_excel( PARERIGHT  EOM
X EQUAL datas DOT iloc[] DOT as_matrix( PARERIGHT  EOM
y EQUAL datas DOT iloc[] DOT as_matrix( PARERIGHT  EOM
model EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score EQUAL model DOT evaluate( PARERIGHT  EOM
p EQUAL model DOT predict( PARERIGHT  EOM
fig COMMA  ax  EQUAL  plt DOT subplots( PARERIGHT  EOM
ax DOT scatter( PARERIGHT  EOM
ax DOT plot([] COMMA [] COMMA  COMMA lw EQUAL  PARERIGHT  EOM
plt DOT show( PARERIGHT  EOM
import numpy as np EOM
import pandas as pd EOM
import os EOM
import matplotlib DOT pyplot as plt EOM
from sklearn DOT decomposition import PCA EOM
from sklearn DOT metrics import mean_squared_error COMMA  r2_score EOM
from sklearn DOT preprocessing import MinMaxScaler EOM
from sklearn DOT model_selection import train_test_split EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Bidirectional COMMA  Conv1D EOM
from keras DOT layers import MaxPooling1D COMMA  BatchNormalization COMMA  AveragePooling1D COMMA  GlobalAveragePooling1D EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Flatten EOM
from keras DOT optimizers import Adam COMMA  RMSprop EOM
from keras DOT initializers import random_normal EOM
from keras DOT callbacks import EarlyStopping EOM
from keras import backend as K EOM
from fixed_leakyrelu import LeakyReLU EOM
n_out  EQUAL  1 EOM
variable_num  EQUAL  33 EOM
n_hidden  EQUAL  32 EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
def rmse( PARERIGHT : EOM
return K DOT sqrt(K DOT mean(K DOT square( PARERIGHT  COMMA  axis EQUAL  PARERIGHT  PARERIGHT  EOM
def simpleLSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(lstm_nodes COMMA  recurrent_dropout EQUAL  COMMA  dropout EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(n_out COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def TemporalCNN( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT name  EQUAL  EOM
model DOT add(Conv1D(cnn_nodes COMMA  kernel_size EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def BLSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(n_out COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def StackeLSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(lstm_nodes COMMA  return_sequences EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(lstm_nodes COMMA  kernel_initializer EQUAL ( PARERIGHT  COMMA  recurrent_dropout EQUAL  COMMA  dropout EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(n_out COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def VGG16LIKE( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT name  EQUAL  EOM
model DOT add(Conv1D(cnn_nodes COMMA  kernel_size COMMA  kernel_initializer EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation(LeakyReLU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(cnn_nodes COMMA  kernel_size COMMA  padding EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation(LeakyReLU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(cnn_nodes*2 COMMA  kernel_size COMMA  padding EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation(LeakyReLU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(cnn_nodes*2 COMMA  kernel_size COMMA  padding EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation(LeakyReLU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(cnn_nodes*3 COMMA  kernel_size COMMA  padding EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation(LeakyReLU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(cnn_nodes*3 COMMA  kernel_size COMMA  padding EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation(LeakyReLU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(cnn_nodes*3 COMMA kernel_size COMMA  padding EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation(LeakyReLU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(cnn_nodes*3 COMMA  kernel_size COMMA  padding EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation(LeakyReLU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(int( PARERIGHT  COMMA  activation EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def VGG_BLSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT name  EQUAL  EOM
model DOT add(1D(cnn_nodes COMMA  kernel_size COMMA  kernel_initializer EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(cnn_nodes COMMA  kernel_size COMMA  padding EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(v1D(cnn_nodes COMMA  kernel_size COMMA  kernel_initializer EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(v1D(cnn_nodes COMMA  kernel_size COMMA  padding EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(v1D(cnn_nodes*2 COMMA  kernel_size COMMA  kernel_initializer EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(v1D(cnn_nodes COMMA  kernel_size COMMA  padding EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(nv1D(cnn_nodes*4 COMMA  kernel_size COMMA  kernel_initializer EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(v1D(cnn_nodes COMMA  kernel_size COMMA  padding EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(int( PARERIGHT  PARERIGHT  PARERIGHT  EOM
Activation( PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def VGG_BLSTM_LeakyReLU( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT name  EQUAL  EOM
model DOT add(1D(cnn_nodes COMMA  kernel_size COMMA  kernel_initializer EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation(LeakyReLU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(cnn_nodes COMMA  kernel_size COMMA  padding EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation(LeakyReLU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(1D(cnn_nodes COMMA  kernel_size COMMA  kernel_initializer EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation(LeakyReLU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(cnn_nodes COMMA  kernel_size COMMA  padding EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation(LeakyReLU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(1D(cnn_nodes*2 COMMA  kernel_size COMMA  kernel_initializer EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation(LeakyReLU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(cnn_nodes COMMA  kernel_size COMMA  padding EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation(LeakyReLU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(1D(cnn_nodes*4 COMMA  kernel_size COMMA  kernel_initializer EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation(LeakyReLU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(cnn_nodes COMMA  kernel_size COMMA  padding EQUAL  COMMA  kernel_initializer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation(LeakyReLU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(int( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation(LeakyReLU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
if __name__  EQUAL  EQUAL  : EOM
model  EQUAL  VGG_BLSTM( PARERIGHT from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  LSTM COMMA  Bidirectional EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT layers import Dense COMMA  GlobalAveragePooling1D EOM
from keras DOT layers import Activation COMMA  Dense COMMA  Dropout COMMA  Embedding COMMA  Flatten COMMA  Input COMMA  Convolution1D COMMA  MaxPooling1D EOM
from keras DOT layers import Conv1D COMMA  concatenate EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras import regularizers EOM
def cnn( PARERIGHT : EOM
embedding_dim EQUAL  300 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( DOT 25 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
graph_in  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
convs  EQUAL  [] EOM
for filter_length in ( PARERIGHT : EOM
conv  EQUAL  Convolution1D( PARERIGHT ( PARERIGHT  EOM
pool  EQUAL  MaxPooling1D( PARERIGHT ( PARERIGHT  EOM
flatten  EQUAL  Flatten( PARERIGHT ( PARERIGHT  EOM
convs DOT append( PARERIGHT  EOM
model DOT add( Model(input EQUAL  COMMA  output EQUAL ( PARERIGHT   PARERIGHT   PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm( PARERIGHT : EOM
embedding_vecor_length  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add( Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Conv1D COMMA  MaxPooling1D EOM
def model( PARERIGHT : EOM
embedding_size  EQUAL  128 EOM
kernel_size  EQUAL  5 EOM
filters  EQUAL  64 EOM
pool_size  EQUAL  4 EOM
lstm_output_size  EQUAL  70 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return modelfrom __future__ import print_function EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import BatchNormalization EOM
from keras import regularizers EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import Convolution1D EOM
from keras DOT layers import MaxPool1D EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import concatenate EOM
from keras DOT layers import GRU EOM
from keras DOT layers import Conv1D EOM
from keras DOT layers import Bidirectional EOM
from keras DOT layers import Permute EOM
from keras DOT layers import merge EOM
from keras DOT models import Model EOM
from keras DOT layers import Reshape EOM
from keras DOT layers import RepeatVector EOM
from keras DOT layers import Input EOM
from keras DOT layers import Activation EOM
from keras DOT layers import Lambda EOM
import keras DOT backend as K EOM
K DOT set_image_dim_ordering( PARERIGHT  EOM
from utils import dense_to_one_hot EOM
from utils import labels_smooth EOM
from utils import Attention_layer EOM
from utils import str_to_list EOM
def lstm( PARERIGHT : EOM
vocab_size  EQUAL  int( PARERIGHT  EOM
embedding_size  EQUAL  int( PARERIGHT  EOM
dropout_prob  EQUAL  float( PARERIGHT  EOM
l2_reg_scala  EQUAL  float( PARERIGHT  EOM
units  EQUAL  int( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(2 COMMA  activation EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  COMMA  bias_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def bilstm( PARERIGHT : EOM
vocab_size  EQUAL  int( PARERIGHT  EOM
embedding_size  EQUAL  int( PARERIGHT  EOM
units  EQUAL  int( PARERIGHT  EOM
dropout_prob  EQUAL  float( PARERIGHT  EOM
l2_reg_scala  EQUAL  float( PARERIGHT  EOM
length  EQUAL  int( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Permute( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(2 COMMA  activation EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  COMMA  bias_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def bilstm_att( PARERIGHT : EOM
vocab_size  EQUAL  int( PARERIGHT  EOM
embedding_size  EQUAL  int( PARERIGHT  EOM
units  EQUAL  int( PARERIGHT  EOM
dropout_prob  EQUAL  float( PARERIGHT  EOM
l2_reg_scala  EQUAL  float( PARERIGHT  EOM
length  EQUAL  int( PARERIGHT  EOM
_input  EQUAL  Input( PARERIGHT  EOM
embed  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
activations  EQUAL  Bidirectional(LSTM( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
attention  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
attention  EQUAL  Flatten( PARERIGHT ( PARERIGHT  EOM
attention  EQUAL  Activation( PARERIGHT ( PARERIGHT  EOM
attention  EQUAL  RepeatVector( PARERIGHT ( PARERIGHT  EOM
activations  EQUAL  Permute( PARERIGHT ( PARERIGHT  EOM
sent_representation  EQUAL  merge( PARERIGHT  EOM
sent_representation  EQUAL  Lambda(lambda xin: K DOT sum( PARERIGHT  COMMA  output_shape EQUAL ( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
prob  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def gru( PARERIGHT : EOM
vocab_size  EQUAL  int( PARERIGHT  EOM
embedding_size  EQUAL  int( PARERIGHT  EOM
dropout_prob  EQUAL  float( PARERIGHT  EOM
l2_reg_scala  EQUAL  float( PARERIGHT  EOM
units  EQUAL  int( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(2 COMMA  activation EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  COMMA  bias_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def bilstm_att2( PARERIGHT : EOM
vocab_size  EQUAL  int( PARERIGHT  EOM
embedding_size  EQUAL  int( PARERIGHT  EOM
units  EQUAL  int( PARERIGHT  EOM
dropout_prob  EQUAL  float( PARERIGHT  EOM
l2_reg_scala  EQUAL  float( PARERIGHT  EOM
length  EQUAL  int( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(GRU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Attention_layer( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(2 COMMA  activation EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  COMMA  bias_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def mlp( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
vocab_size  EQUAL  int( PARERIGHT  EOM
units  EQUAL  int( PARERIGHT  EOM
dropout_prob  EQUAL  float( PARERIGHT  EOM
l2_reg_scala  EQUAL  float( PARERIGHT  EOM
model DOT add(Dense(units COMMA  input_shape EQUAL ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def textcnn( PARERIGHT : EOM
vocab_size  EQUAL  int( PARERIGHT  EOM
embedding_size  EQUAL  int( PARERIGHT  EOM
dropout_prob  EQUAL  float( PARERIGHT  EOM
l2_reg_scala  EQUAL  float( PARERIGHT  EOM
length  EQUAL  int( PARERIGHT  EOM
filter_sizes  EQUAL  str_to_list( PARERIGHT  EOM
filter_nums  EQUAL  str_to_list( PARERIGHT  EOM
main_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA dtype EQUAL  PARERIGHT  EOM
embed  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
cnn_outs  EQUAL  [] EOM
for i COMMA  filter_size in enumerate( PARERIGHT : EOM
filter_num  EQUAL  filter_nums[] EOM
cnn  EQUAL  Convolution1D( PARERIGHT ( PARERIGHT  EOM
cnn  EQUAL  MaxPool1D( PARERIGHT ( PARERIGHT  EOM
cnn_outs DOT append( PARERIGHT  EOM
out  EQUAL  concatenate( PARERIGHT  EOM
flat  EQUAL  Flatten( PARERIGHT ( PARERIGHT  EOM
drop  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
main_output  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return modelfrom keras DOT layers DOT recurrent import LSTM COMMA  GRU EOM
from keras DOT models import Sequential EOM
def get_lstm( PARERIGHT : EOM
model DOT add(LSTM(units[] COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def get_gru( PARERIGHT : EOM
model DOT add(GRU(units[] COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def _get_sae( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def get_saes( PARERIGHT : EOM
sae2  EQUAL  _get_sae( PARERIGHT  EOM
sae3  EQUAL  _get_sae( PARERIGHT  EOM
saes  EQUAL  Sequential( PARERIGHT  EOM
saes DOT add(Dense( PARERIGHT  PARERIGHT  EOM
saes DOT add(Activation( PARERIGHT  PARERIGHT  EOM
saes DOT add(Dense( PARERIGHT  PARERIGHT  EOM
saes DOT add(Activation( PARERIGHT  PARERIGHT  EOM
saes DOT add(Dense( PARERIGHT  PARERIGHT  EOM
saes DOT add(Activation( PARERIGHT  PARERIGHT  EOM
saes DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
saes DOT add(Dense( PARERIGHT  PARERIGHT  EOM
models  EQUAL  [] EOM
return modelsimport datetime EOM
import os EOM
import keras EOM
import numpy as np EOM
import pandas as pd EOM
from base_model import BaseModel EOM
from multivariate_container import MultivariateContainer EOM
from typing import Union EOM
class MultivariateLSTM( PARERIGHT : EOM
def __init__( PARERIGHT  -> None: EOM
self DOT config  EQUAL  config EOM
self DOT container  EQUAL  container EOM
self DOT hist  EQUAL  None EOM
if create_empty: EOM
self DOT core  EQUAL  None EOM
else: EOM
self DOT core  EQUAL  self DOT _construct_lstm_model( PARERIGHT  EOM
self DOT _gen_file_name( PARERIGHT  EOM
def _construct_lstm_model(self COMMA onfig: dict COMMA erbose: bool EQUAL         input_sequence  EQUAL  keras DOT layers DOT Input(hape EQUAL ( PARERIGHT  COMMA dtype EQUAL  COMMA name EQUAL  PARERIGHT  EOM
normalization  EQUAL  keras DOT layers DOT BatchNormalization( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  keras DOT layers DOT LSTM( PARERIGHT ( PARERIGHT  EOM
dense1  EQUAL  keras DOT layers DOT Dense( PARERIGHT ( PARERIGHT  EOM
predictions  EQUAL  keras DOT layers DOT Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  keras DOT Model( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if verbose: EOM
keras DOT utils DOT print_summary( PARERIGHT  EOM
return model EOM
def _construct_lstm_sequential(self COMMA onfig: dict COMMA erbose: bool EQUAL         model  EQUAL  keras DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM(units EQUAL [] COMMA nput_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if verbose: EOM
keras DOT utils DOT print_summary( PARERIGHT  EOM
return model EOM
def update_config(self COMMA ew_config: dict-> None: EOM
self DOT prev_config  EQUAL  self DOT config EOM
self DOT config  EQUAL  new_config EOM
self DOT core  EQUAL  self DOT _construct_lstm_model( PARERIGHT  EOM
def fit_model(self COMMA pochs: int EQUAL         start_time  EQUAL  datetime DOT datetime DOT now( PARERIGHT  EOM
self DOT hist  EQUAL  self DOT core DOT fit( PARERIGHT  EOM
finish_time  EQUAL  datetime DOT datetime DOT now( PARERIGHT  EOM
time_taken  EQUAL  finish_time - start_time EOM
def predict(self COMMA _feed: np DOT ndarray-> np DOT ndarray: EOM
y_hat  EQUAL  self DOT core DOT predict( PARERIGHT  EOM
return y_hat EOM
def save_model(elf COMMA  ile_dir: str EQUAL         if file_dir is None: EOM
file_dir  EQUAL  self DOT file_name EOM
try: EOM
folder  EQUAL  f EOM
os DOT system( PARERIGHT  EOM
except: EOM
_  EQUAL  os DOT system( PARERIGHT  EOM
raise FileNotFoundError( to create directory COMMA  please create directory  DOT /saved_models/ EOM
model_json  EQUAL  self DOT core DOT to_json( PARERIGHT  EOM
with open( PARERIGHT  as json_file: EOM
json_file DOT write( PARERIGHT  EOM
self DOT core DOT save_weights( PARERIGHT  EOM
try: EOM
keras DOT utils DOT plot_model( PARERIGHT  EOM
except: EOM
if self DOT hist is not None: EOM
hist_loss  EQUAL  np DOT squeeze(np DOT array( PARERIGHT  PARERIGHT  EOM
hist_val_loss  EQUAL  np DOT squeeze(np DOT array( PARERIGHT  PARERIGHT  EOM
combined  EQUAL  np DOT stack( PARERIGHT  EOM
combined  EQUAL  np DOT transpose( PARERIGHT  EOM
df  EQUAL  pd DOT DataFrame( PARERIGHT  EOM
df DOT columns  EQUAL  [] EOM
df DOT to_csv( PARERIGHT  EOM
else: EOM
def load_model(elf COMMA  older_dir: str-> None: EOM
folder_dir + EQUAL  EOM
try: EOM
json_file  EQUAL  open( PARERIGHT  EOM
except FileNotFoundError: EOM
raise Warning(n file not found DOT  Expected: {folder_dir}model_structure DOT json EOM
model_file  EQUAL  json_file DOT read( PARERIGHT  EOM
json_file DOT close( PARERIGHT  EOM
self DOT core  EQUAL  keras DOT models DOT model_from_json( PARERIGHT  EOM
try: EOM
self DOT core DOT load_weights( PARERIGHT  EOM
except FileNotFoundError: EOM
raise Warning(file not found DOT  Expected: {folder_dir}model_weights DOT h5 EOM
self DOT core DOT compile( PARERIGHT  EOM
def summarize_training( PARERIGHT : EOM
def visualize_training( PARERIGHT : EOM
raise NotImplementedErrorfrom math import sqrt EOM
from numpy import concatenate EOM
from matplotlib import pyplot EOM
import numpy as np EOM
from pandas import read_csv EOM
from pandas import DataFrame EOM
from pandas import concat EOM
from sklearn DOT preprocessing import MinMaxScaler EOM
from sklearn DOT preprocessing import LabelEncoder EOM
from sklearn DOT metrics import mean_squared_error EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT core import RepeatVector EOM
from keras DOT models import model_from_yaml EOM
import os EOM
from keras DOT utils import plot_model EOM
from keras DOT utils DOT vis_utils import plot_model EOM
from keras DOT utils DOT vis_utils import model_to_dot EOM
folder_address  EQUAL  EOM
preoutaddress  EQUAL  EOM
malware_class_dir  EQUAL  EOM
apa  EQUAL  1000 EOM
batch  EQUAL  10 EOM
i EQUAL 0 EOM
filenamelist  EQUAL  list( PARERIGHT  EOM
wholefilepath  EQUAL  dir + + filename EOM
filenamelist DOT append( PARERIGHT  EOM
return filenamelist EOM
def data_to_reconstruction_problem( PARERIGHT : EOM
df EQUAL  DataFrame( PARERIGHT  EOM
list_concat  EQUAL  list( PARERIGHT  EOM
for i in range( PARERIGHT : EOM
tempdf  EQUAL  df DOT shift( PARERIGHT  EOM
list_concat DOT append( PARERIGHT  EOM
data_for_autoencoder EQUAL concat( PARERIGHT  EOM
data_for_autoencoder DOT dropna( PARERIGHT  EOM
return data_for_autoencoder EOM
def data_to_reconstruction_problem( PARERIGHT : EOM
df EQUAL  DataFrame( PARERIGHT  EOM
list_concat  EQUAL  list( PARERIGHT  EOM
for i in range( PARERIGHT : EOM
tempdf  EQUAL  df DOT shift( PARERIGHT  EOM
list_concat DOT append( PARERIGHT  EOM
data_for_autoencoder EQUAL concat( PARERIGHT  EOM
data_for_autoencoder DOT dropna( PARERIGHT  EOM
return data_for_autoencoder EOM
def out_put_core( PARERIGHT : EOM
thefile  EQUAL  open( PARERIGHT  EOM
for item in writting_list: EOM
thefile DOT write( PARERIGHT  EOM
n_apis  EQUAL  16 EOM
n_features  EQUAL  34 EOM
for i in range(0 COMMA len( PARERIGHT  PARERIGHT : EOM
dataset  EQUAL  read_csv( PARERIGHT  EOM
values  EQUAL  dataset DOT values EOM
reframed  EQUAL  data_to_reconstruction_problem( PARERIGHT  EOM
reframed  EQUAL  reframed DOT astype( PARERIGHT  EOM
scaler  EQUAL  MinMaxScaler(feature_range EQUAL ( PARERIGHT  PARERIGHT  EOM
scaled  EQUAL  scaler DOT fit_transform( PARERIGHT  EOM
dfscaled  EQUAL  DataFrame( PARERIGHT  EOM
train_X  EQUAL  dfscaled DOT values EOM
train_X  EQUAL  train_X DOT reshape(( PARERIGHT  PARERIGHT  EOM
sample_number  EQUAL  train_X DOT shape[] EOM
model  EQUAL  Sequential( PARERIGHT  EOM
timesstep16  EQUAL  n_apis EOM
timesstep8  EQUAL  int( PARERIGHT  EOM
timesstep4  EQUAL  int( PARERIGHT  EOM
model DOT add(LSTM(n_features COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
pyplot DOT plot( PARERIGHT  EOM
pyplot DOT legend( PARERIGHT  EOM
lossepoch  EQUAL   DOT format(os DOT path DOT basename( PARERIGHT  PARERIGHT  EOM
pyplot DOT savefig( PARERIGHT  EOM
pyplot DOT gcf( PARERIGHT  DOT clear( PARERIGHT  EOM
yhat  EQUAL  model DOT predict( PARERIGHT  EOM
yhat  EQUAL  yhat DOT reshape( PARERIGHT  EOM
yhat  EQUAL  scaler DOT inverse_transform( PARERIGHT  EOM
df2  EQUAL  DataFrame( PARERIGHT  EOM
df2 DOT to_csv( PARERIGHT  EOM
from keras DOT layers import Dense COMMA  Flatten COMMA  Dropout COMMA  ZeroPadding3D EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential COMMA  load_model EOM
from keras DOT optimizers import Adam COMMA  RMSprop EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
from keras DOT layers DOT convolutional import ( PARERIGHT  EOM
from collections import deque EOM
import sys EOM
class ResearchModels( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT seq_length  EQUAL  seq_length EOM
self DOT load_model  EQUAL  load_model EOM
self DOT saved_model  EQUAL  saved_model EOM
self DOT nb_classes  EQUAL  nb_classes EOM
self DOT feature_queue  EQUAL  deque( PARERIGHT  EOM
metrics  EQUAL  [] EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT lstm( PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
def lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
import os EOM
global_model_version  EQUAL  48 EOM
global_batch_size  EQUAL  16 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_2  EQUAL  Sequential( PARERIGHT  EOM
branch_2 DOT add( PARERIGHT  EOM
branch_2 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_6  EQUAL  Sequential( PARERIGHT  EOM
branch_6 DOT add( PARERIGHT  EOM
branch_6 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import os EOM
global_model_version  EQUAL  34 EOM
global_batch_size  EQUAL  32 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dense( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dense( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dense( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from keras DOT preprocessing DOT image import ImageDataGenerator EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten COMMA  Reshape EOM
from keras DOT layers DOT convolutional import Convolution2D COMMA  MaxPooling2D EOM
from keras DOT layers DOT recurrent import LSTM COMMA  SimpleRNN EOM
from keras DOT optimizers import SGD COMMA  Adam EOM
from keras DOT utils import np_utils EOM
def build_MLP_net( PARERIGHT : EOM
model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA  optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
return model EOM
def build_LSTM_net( PARERIGHT : EOM
img_model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
img_model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
img_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
language_model  EQUAL  Sequential( PARERIGHT  EOM
language_model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
language_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
language_model DOT add(TimeDistributedDense( PARERIGHT  PARERIGHT  EOM
image_model DOT add(RepeatVector( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
def build_random( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA  optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
return modelfrom music21 import converter COMMA instrument COMMA note COMMA chord COMMA stream EOM
import tensorflow as tf EOM
from keras DOT layers import Dense COMMA  Conv2D COMMA  Dropout COMMA  Flatten COMMA  MaxPooling2D COMMA LSTM COMMA Activation EOM
from keras DOT models import Sequential EOM
import keras DOT models EOM
import numpy as np EOM
from keras DOT utils import np_utils EOM
from keras DOT callbacks import ModelCheckpoint EOM
import glob EOM
import pickle EOM
def createModel( PARERIGHT : EOM
with open( PARERIGHT  as f: EOM
networkInput COMMA  pitchNames COMMA  numNotes COMMA  nVocab  COMMA  normalNetworkInput  EQUAL  pickle DOT load( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(256 COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Dense EOM
import numpy as np EOM
import matplotlib DOT pyplot as plt EOM
import numpy as np EOM
import time EOM
import csv EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout COMMA Merge EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
import copy EOM
data_dim  EQUAL  1 EOM
timesteps  EQUAL  13 EOM
model_A  EQUAL  Sequential( PARERIGHT  EOM
model_B  EQUAL  Sequential( PARERIGHT  EOM
model_Combine  EQUAL  Sequential( PARERIGHT  EOM
lstm_hidden_size  EQUAL  [] EOM
drop_out_rate  EQUAL  [] EOM
model_A DOT add(LSTM(lstm_hidden_size[] COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_A DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_A DOT add(Dense( PARERIGHT  PARERIGHT  EOM
in_dimension  EQUAL  3 EOM
nn_hidden_size  EQUAL  [] EOM
nn_drop_rate  EQUAL  [] EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_Combine DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model_Combine DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_Combine DOT compile( PARERIGHT  EOM
from keras DOT utils DOT visualize_util import plot COMMA  to_graph EOM
graph  EQUAL  to_graph( PARERIGHT  EOM
graph DOT write_png( PARERIGHT from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
from keras DOT models import load_model EOM
from keras DOT layers import TimeDistributed COMMA  Dense COMMA  LSTM EOM
from keras DOT utils import np_utils EOM
from keras DOT callbacks import ModelCheckpoint EOM
from matplotlib DOT ticker import FormatStrFormatter EOM
def build_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(10 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def build_timedistributed_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(100 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def build_time_distributed_stateful_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(64 COMMA tch_input_shape EQUAL ( PARERIGHT  COMMA stateful EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def build_stacked_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(100 COMMA  input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(256 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def build_stateful_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(64 COMMA tch_input_shape EQUAL ( PARERIGHT  COMMA stateful EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def build_cwrnn_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(cwrnn DOT ClockworkRNN(output_dim EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA period_spec EQUAL [] PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
from __future__ import unicode_literals EOM
import logging EOM
from rasa_core DOT policies DOT keras_policy import KerasPolicy EOM
logger  EQUAL  logging DOT getLogger( PARERIGHT  EOM
class nuRobotPolicy( PARERIGHT : EOM
def model_architecture( PARERIGHT : EOM
from keras DOT layers import LSTM COMMA  Activation COMMA  Masking COMMA  Dense EOM
from keras DOT models import Sequential EOM
from keras DOT models import Sequential EOM
from keras DOT layers import \ EOM
Masking COMMA  LSTM COMMA  Dense COMMA  TimeDistributed COMMA  Activation EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if len( PARERIGHT   EQUAL             model DOT add(Masking( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             model DOT add(Masking(mask_value EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
raise ValueError(th of output_shape  EQUAL (len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
logger DOT debug(model DOT summary( PARERIGHT  PARERIGHT  EOM
return model EOM
from __future__ import print_function EOM
import numpy as np EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Lambda EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Convolution1D COMMA MaxPooling1D COMMA  Flatten EOM
from keras DOT datasets import imdb EOM
from keras import backend as K EOM
from sklearn DOT cross_validation import train_test_split EOM
import pandas as pd EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from sklearn DOT preprocessing import Normalizer EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Convolution1D COMMA  Dense COMMA  Dropout COMMA  Flatten COMMA  MaxPooling1D EOM
from keras DOT utils import np_utils EOM
import numpy as np EOM
import h5py EOM
from keras import callbacks EOM
from keras DOT layers import LSTM COMMA  GRU COMMA  SimpleRNN EOM
from keras DOT callbacks import CSVLogger EOM
from keras DOT callbacks import ModelCheckpoint COMMA  EarlyStopping COMMA  ReduceLROnPlateau COMMA  CSVLogger EOM
import csv EOM
from sklearn DOT cross_validation import StratifiedKFold EOM
from sklearn DOT cross_validation import cross_val_score EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
with open( PARERIGHT  as f: EOM
reader  EQUAL  csv DOT reader( PARERIGHT  EOM
your_list  EQUAL  list( PARERIGHT  EOM
trainX  EQUAL  np DOT array( PARERIGHT  EOM
traindata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
Y  EQUAL  traindata DOT iloc[] EOM
y_train1  EQUAL  np DOT array( PARERIGHT  EOM
y_train EQUAL  to_categorical( PARERIGHT  EOM
maxlen  EQUAL  44100 EOM
trainX  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_train  EQUAL  np DOT reshape(trainX COMMA  ( PARERIGHT  PARERIGHT  EOM
with open( PARERIGHT  as f: EOM
reader1  EQUAL  csv DOT reader( PARERIGHT  EOM
your_list1  EQUAL  list( PARERIGHT  EOM
testX  EQUAL  np DOT array( PARERIGHT  EOM
testdata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
Y1  EQUAL  testdata DOT iloc[] EOM
y_test1  EQUAL  np DOT array( PARERIGHT  EOM
y_test EQUAL  to_categorical( PARERIGHT  EOM
maxlen  EQUAL  44100 EOM
testX  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  np DOT reshape(testX COMMA  ( PARERIGHT  PARERIGHT  EOM
batch_size  EQUAL  2 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
checkpointer  EQUAL  callbacks DOT ModelCheckpoint( PARERIGHT  EOM
model DOT fit(X_train COMMA  y_train COMMA  batch_size EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  COMMA nb_epoch EQUAL  COMMA  callbacks EQUAL [] PARERIGHT  EOM
model DOT save( PARERIGHT  import os EOM
global_model_version  EQUAL  65 EOM
global_batch_size  EQUAL  64 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  keras DOT optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from flask import Flask COMMA  render_template COMMA request COMMA send_file EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Input EOM
from keras DOT layers import Conv1D EOM
from keras DOT models import Model EOM
import json EOM
import keras EOM
from keras DOT layers import Dropout COMMA  Flatten EOM
from keras DOT layers import Conv1D COMMA  MaxPooling1D EOM
import numpy as np EOM
from sklearn DOT model_selection import train_test_split EOM
conv1  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
dense  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT load_weights( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D(32 COMMA  kernel_size EQUAL  COMMA activation EQUAL  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA metrics EQUAL [] PARERIGHT  EOM
model DOT load_weights( PARERIGHT  EOM
app  EQUAL  Flask( PARERIGHT  EOM
def prediction( PARERIGHT : EOM
data  EQUAL  request DOT json EOM
data  EQUAL  data[] EOM
if(len( PARERIGHT <100 PARERIGHT : EOM
for j in range(0 COMMA 100-len( PARERIGHT  PARERIGHT : EOM
data DOT append(( PARERIGHT  PARERIGHT  EOM
data_to_predict  EQUAL  [] EOM
data_to_predict  EQUAL  np DOT array( PARERIGHT  EOM
pred  EQUAL  model DOT predict( PARERIGHT  EOM
label  EQUAL  np DOT argmax( PARERIGHT  EOM
if( PARERIGHT : EOM
value  EQUAL  EOM
elif( PARERIGHT : EOM
value  EQUAL  EOM
elif( PARERIGHT : EOM
value  EQUAL  EOM
elif( PARERIGHT : EOM
value  EQUAL  EOM
else: EOM
value EQUAL  EOM
result  EQUAL  {:value} EOM
return json DOT dumps( PARERIGHT  EOM
def dashboard( PARERIGHT : EOM
return render_template( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
app DOT run( PARERIGHT from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
from keras DOT layers DOT recurrent import LSTM EOM
def create_lstm_network( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
for cur_unit in range( PARERIGHT : EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def new_lstm_network( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Input COMMA  Layer COMMA  Merge EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
import numpy as np EOM
import keras DOT preprocessing DOT text as prep EOM
import keras DOT preprocessing DOT sequence as seq EOM
from keras DOT constraints import maxnorm COMMA  nonneg EOM
from keras DOT callbacks import EarlyStopping EOM
from keras import backend as K EOM
from keras DOT layers DOT core import Lambda EOM
def readEmbedding( PARERIGHT : EOM
f EQUAL open( PARERIGHT  EOM
embedding EQUAL [] EOM
for i in f  DOT readlines( PARERIGHT : EOM
tmp EQUAL [] EOM
embedding DOT append( PARERIGHT  EOM
return np DOT asanyarray( PARERIGHT  EOM
corpusFile EQUAL  EOM
labelsFile EQUAL  EOM
file EQUAL open( PARERIGHT  EOM
text EQUAL  [] EOM
toknizer DOT fit_on_texts( PARERIGHT  EOM
data EQUAL toknizer DOT texts_to_sequences( PARERIGHT  EOM
data EQUAL np DOT asanyarray( PARERIGHT  EOM
maxlen EQUAL [] EOM
maxlen EQUAL maxlen[] EOM
worddic EQUAL toknizer DOT word_index EOM
wordcount EQUAL  toknizer DOT word_counts EOM
vocabSize  EQUAL  toknizer DOT word_index DOT __len__( PARERIGHT +2 EOM
data EQUAL seq DOT pad_sequences( PARERIGHT  EOM
file DOT close( PARERIGHT  EOM
file EQUAL open( PARERIGHT  EOM
tmp EQUAL [] EOM
labelLen EQUAL max( PARERIGHT +1 EOM
labels EQUAL [] EOM
for i in tmp: EOM
k EQUAL []*labelLen EOM
k[] EQUAL 1 EOM
labels DOT append( PARERIGHT  EOM
X_train EQUAL data EOM
Y_train EQUAL labels EOM
weights EQUAL readEmbedding( PARERIGHT  EOM
leftmodel  EQUAL  Sequential( PARERIGHT  EOM
leftmodel DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
rightmodel EQUAL Sequential( PARERIGHT  EOM
rightmodel DOT add(Embedding(input_length EQUAL  COMMA input_dim EQUAL  COMMA  output_dim EQUAL  COMMA  mask_zero EQUAL  COMMA  name EQUAL  COMMA  trainable EQUAL  COMMA  W_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model EQUAL Sequential( PARERIGHT  EOM
model DOT add(Merge([] COMMA  mode EQUAL (lambda x: x[]*K DOT repeat_elements( PARERIGHT  PARERIGHT   COMMA  output_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(labels[] DOT __len__( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
early_stopping  EQUAL  EarlyStopping( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
importance  EQUAL  rightmodel DOT get_layer( PARERIGHT  DOT get_weights( PARERIGHT [] EOM
file EQUAL open( PARERIGHT  EOM
sortedImp EQUAL [] EOM
for i in worddic: EOM
sortedImp DOT append(( PARERIGHT  PARERIGHT  EOM
sortedImp EQUAL sorted( PARERIGHT  EOM
for i in sortedImp: EOM
file DOT write(str( PARERIGHT ++str( PARERIGHT + PARERIGHT  EOM
file DOT close( PARERIGHT  EOM
embeddings  EQUAL  model DOT get_layer( PARERIGHT  DOT get_weights( PARERIGHT [] EOM
file EQUAL open( PARERIGHT  EOM
for i in embeddings: EOM
tmp EQUAL str( PARERIGHT  DOT replace( PARERIGHT  DOT replace( PARERIGHT  DOT replace( PARERIGHT  DOT strip( PARERIGHT  EOM
file DOT write( PARERIGHT  EOM
file DOT close( PARERIGHT  EOM
file EQUAL open( PARERIGHT  EOM
for i in worddic: EOM
tmp EQUAL str( PARERIGHT ++str( PARERIGHT  EOM
file DOT write( PARERIGHT  EOM
file DOT close( PARERIGHT  EOM
class RestaurantPolicy( PARERIGHT : EOM
def model_architecture( PARERIGHT : EOM
from keras DOT layers import LSTM COMMA  Activation COMMA  Masking COMMA  Dense EOM
from keras DOT models import Sequential EOM
from keras DOT models import Sequential EOM
from keras DOT layers import \ EOM
Masking COMMA  LSTM COMMA  Dense COMMA  TimeDistributed COMMA  Activation EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if len( PARERIGHT   EQUAL             model DOT add(Masking( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             model DOT add(Masking(mask_value EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
raise ValueError(th of output_shape  EQUAL (len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
logger DOT debug(model DOT summary( PARERIGHT  PARERIGHT  EOM
return modelwarnings DOT filterwarnings( PARERIGHT  EOM
import string EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
from keras DOT utils import np_utils COMMA  to_categorical EOM
from sklearn DOT model_selection import train_test_split COMMA  KFold COMMA  GridSearchCV COMMA  StratifiedShuffleSplit COMMA StratifiedKFold EOM
from sklearn DOT metrics import confusion_matrix COMMA  classification_report COMMA  accuracy_score EOM
from sklearn DOT preprocessing import LabelEncoder EOM
from sklearn DOT pipeline import Pipeline EOM
from sklearn DOT feature_extraction DOT text import TfidfVectorizer COMMA  CountVectorizer EOM
import pandas as pd EOM
from keras import layers EOM
from keras DOT models import Model COMMA  Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  LSTM EOM
from keras DOT layers import Input COMMA  Flatten COMMA  merge COMMA  Lambda COMMA  Dropout EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
from keras DOT layers DOT wrappers import TimeDistributed COMMA  Bidirectional EOM
from keras DOT utils import np_utils COMMA  to_categorical EOM
from keras DOT optimizers import Adam COMMA  RMSprop EOM
from keras DOT layers import Conv1D COMMA  MaxPooling1D COMMA  Embedding EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from keras DOT layers import Conv1D COMMA  MaxPooling1D COMMA  Embedding EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
import gensim EOM
from gensim DOT models import Word2Vec EOM
from gensim DOT models DOT keyedvectors import KeyedVectors EOM
import matplotlib DOT pyplot as plt EOM
import itertools EOM
from nltk DOT stem DOT wordnet import WordNetLemmatizer EOM
from nltk DOT tokenize import RegexpTokenizer EOM
from sklearn DOT utils import shuffle EOM
import numpy as np EOM
full_data  EQUAL  np DOT loadtxt( PARERIGHT  EOM
x  EQUAL  full_data[] EOM
y  EQUAL  full_data[] EOM
encoder  EQUAL  LabelEncoder( PARERIGHT  EOM
encoder DOT fit( PARERIGHT  EOM
encoded_y  EQUAL  encoder DOT transform( PARERIGHT  EOM
dummy_y  EQUAL  np_utils DOT to_categorical( PARERIGHT  EOM
def full_multiclass_report( PARERIGHT : EOM
if not binary: EOM
y_true  EQUAL  np DOT argmax( PARERIGHT  EOM
y_pred  EQUAL  model DOT predict_classes( PARERIGHT  EOM
seed  EQUAL 1000 EOM
Neurons  EQUAL  1024 EOM
Baseline  EQUAL  100 EOM
Top1  EQUAL  161 EOM
Top2  EQUAL  214 EOM
Top3  EQUAL  249 EOM
Top4  EQUAL  283 EOM
Top5  EQUAL  323 EOM
NoOfAtt EQUAL Top3 EOM
x_train COMMA  x_test COMMA  y_train COMMA  y_test  EQUAL  train_test_split( PARERIGHT  EOM
x_train COMMA  x_val COMMA  y_train COMMA  y_val  EQUAL  train_test_split( PARERIGHT  EOM
x_train  EQUAL  x_train DOT reshape( PARERIGHT  EOM
x_test  EQUAL  x_test DOT reshape( PARERIGHT  EOM
x_val  EQUAL  x_val DOT reshape( PARERIGHT  EOM
LSTM_Model  EQUAL  Sequential( PARERIGHT  EOM
LSTM_Model DOT add(LSTM(units  EQUAL  COMMA  return_sequences  EQUAL  COMMA  input_shape  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
LSTM_Model DOT add(LSTM(units  EQUAL  COMMA  return_sequences  EQUAL  COMMA  input_shape  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
LSTM_Model DOT add(LSTM(units  EQUAL  COMMA  return_sequences  EQUAL  COMMA  input_shape  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
LSTM_Model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
LSTM_Model DOT add(layers DOT Dense( PARERIGHT  PARERIGHT  EOM
LSTM_Model DOT compile( PARERIGHT  EOM
LSTM_Model DOT summary( PARERIGHT  EOM
LSTM_History EQUAL LSTM_Model DOT fit(x_train COMMA  y_train COMMA  epochs  EQUAL  COMMA  batch_size  EQUAL  COMMA verbose EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  COMMA  shuffle EQUAL  PARERIGHT  EOM
full_multiclass_report(LSTM_Model COMMA  x_val COMMA  y_val COMMA  encoder DOT inverse_transform(np DOT arange( PARERIGHT  PARERIGHT  PARERIGHT  EOM
import os EOM
global_model_version  EQUAL  32 EOM
global_batch_size  EQUAL  32 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
from __future__ import unicode_literals EOM
import logging EOM
from rasa_core DOT policies DOT keras_policy import KerasPolicy EOM
logger  EQUAL  logging DOT getLogger( PARERIGHT  EOM
class RestaurantPolicy( PARERIGHT : EOM
def model_architecture( PARERIGHT : EOM
from keras DOT layers import LSTM COMMA  Activation COMMA  Masking COMMA  Dense EOM
from keras DOT models import Sequential EOM
batch_shape  EQUAL  ( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
logger DOT debug(model DOT summary( PARERIGHT  PARERIGHT  EOM
return modelfrom  DOT base import BaseNet EOM
import numpy as np EOM
import time EOM
import math as m EOM
import tensorflow as tf EOM
import keras EOM
from keras import Model EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers import InputLayer EOM
from keras DOT layers import Conv1D EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Bidirectional EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers import Input COMMA  Concatenate COMMA  Permute COMMA  Reshape COMMA  Merge EOM
from keras DOT layers import concatenate EOM
from keras DOT optimizers import Adam EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers import TimeDistributed COMMA  Dense COMMA  Dropout COMMA  Flatten EOM
import json EOM
import pickle EOM
class iEEGSeq( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
if name not in _availmodels: EOM
raise AttributeError(AMECNNLSTM CNNLSTM MIX EOM
self DOT name  EQUAL  name EOM
self DOT num_timewins  EQUAL  num_timewins EOM
self DOT DROPOUT  EQUAL  DROPOUT EOM
self DOT BIDIRECT  EQUAL  BIDIRECT EOM
self DOT FREEZE  EQUAL  FREEZE EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
def loadmodel( PARERIGHT : EOM
json_file  EQUAL  open( PARERIGHT  EOM
loaded_model_json  EQUAL  json_file DOT read( PARERIGHT  EOM
json_file DOT close( PARERIGHT  EOM
fixed_cnn_model  EQUAL  keras DOT models DOT model_from_json( PARERIGHT  EOM
fixed_cnn_model DOT load_weights( PARERIGHT  EOM
fixed_cnn_model DOT pop( PARERIGHT  EOM
fixed_cnn_model DOT pop( PARERIGHT  EOM
return fixed_cnn_model EOM
def buildmodel( PARERIGHT : EOM
size_mem  EQUAL  128 EOM
num_timewins  EQUAL  self DOT num_timewins EOM
self DOT input_shape  EQUAL  convnet DOT input_shape EOM
if self DOT name  EQUAL  EQUAL  : EOM
self DOT _build_same_cnn_lstm( PARERIGHT  EOM
elif self DOT name  EQUAL  EQUAL  : EOM
self DOT _build_cnn_lstm( PARERIGHT  EOM
elif self DOT name  EQUAL  EQUAL  : EOM
self DOT _build_cnn_lstm_mix( PARERIGHT  EOM
elif self DOT name  EQUAL  EQUAL  : EOM
self DOT _appendlstm( PARERIGHT  EOM
def buildoutput( PARERIGHT : EOM
if self DOT name  EQUAL  EQUAL   or self DOT name  EQUAL  EQUAL  : EOM
self DOT _build_seq_output( PARERIGHT  EOM
elif self DOT name  EQUAL  EQUAL  : EOM
self DOT _build_output( PARERIGHT  EOM
elif self DOT name  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  self DOT _build_seq_output( PARERIGHT  EOM
return self DOT model EOM
def _build_same_cnn_lstm( PARERIGHT : EOM
convnet DOT trainable  EQUAL  False EOM
convnet DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
cnn_output_shape  EQUAL  convnet DOT output_shape[] EOM
cnn_input_shape  EQUAL  tuple(list( PARERIGHT [] PARERIGHT  EOM
self DOT model DOT add(TimeDistributed(onvnet COMMA  input_shape EQUAL ( PARERIGHT +cnn_input_shape PARERIGHT  PARERIGHT  EOM
if BIDIRECT: EOM
self DOT model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
self DOT model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
def _build_cnn_lstm( PARERIGHT : EOM
buffweights  EQUAL  convnet DOT weights EOM
convnet DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
convnets DOT append( PARERIGHT  EOM
self DOT model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
num_cnn_features  EQUAL  convnets[] DOT output_shape[] EOM
self DOT model DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if BIDIRECT: EOM
self DOT model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
self DOT model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
def _build_cnn_lstm_mix( PARERIGHT : EOM
buffweights  EQUAL  convnet DOT weights EOM
convnet DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
cnn_input_shape  EQUAL  tuple(list( PARERIGHT [] PARERIGHT  EOM
for i in range( PARERIGHT : EOM
convnets DOT append( PARERIGHT  EOM
if self DOT FREEZE: EOM
for net in convnets: EOM
net DOT trainable  EQUAL  False EOM
self DOT model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
num_cnn_features  EQUAL  convnets[] DOT output_shape[] EOM
self DOT model DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
convpool  EQUAL  self DOT model DOT output EOM
reform_convpool  EQUAL  Permute(( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
convout_1d  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
convout_1d  EQUAL  Flatten( PARERIGHT ( PARERIGHT  EOM
if BIDIRECT: EOM
lstm  EQUAL  Bidirectional(LSTM( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
else: EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
self DOT auxmodel  EQUAL  keras DOT layers DOT concatenate( PARERIGHT  EOM
def _build_lstm( PARERIGHT : EOM
self DOT model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return self DOT model EOM
def _appendlstm( PARERIGHT : EOM
self DOT model DOT add(TimeDistributed(ixed_model COMMA  input_shape EQUAL ( PARERIGHT +self DOT input_shape PARERIGHT  PARERIGHT  EOM
if BIDIRECT: EOM
self DOT model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
self DOT model DOT add(LSTM( PARERIGHT  EOM
import os EOM
global_model_version  EQUAL  60 EOM
global_batch_size  EQUAL  128 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  keras DOT optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import numpy as np EOM
np DOT random DOT seed( PARERIGHT  EOM
import scipy DOT io EOM
from scipy DOT interpolate import griddata EOM
from sklearn DOT preprocessing import scale EOM
import time EOM
from functools import reduce EOM
import math as m EOM
from keras DOT utils DOT training_utils import multi_gpu_model EOM
import tensorflow as tf EOM
import keras EOM
from keras DOT optimizers import SGD EOM
from keras DOT models import Sequential EOM
from keras DOT layers import InputLayer EOM
from keras DOT layers import Conv1D COMMA  Conv2D COMMA  MaxPooling2D EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed COMMA  Dense COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers import Input COMMA  Concatenate COMMA  Permute COMMA  Reshape COMMA  Merge EOM
from keras DOT layers DOT embeddings import Embedding EOM
class IEEGdnn( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT n_colors  EQUAL  n_colors EOM
self DOT num_classes  EQUAL  num_classes EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
def _build_2dcnn(self COMMA  w_init: list  EQUAL  COMMA  n_layers: tuple  EQUAL ( PARERIGHT  COMMA  poolsize: tuple  EQUAL ( PARERIGHT  COMMA  n_filters_first: int  EQUAL  COMMA  filter_size EQUAL ( PARERIGHT  PARERIGHT : EOM
if w_init is None: EOM
w_init  EQUAL  [] * sum( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(InputLayer(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
count EQUAL 0 EOM
for idx COMMA  n_layer in enumerate( PARERIGHT : EOM
for ilay in range( PARERIGHT : EOM
model DOT add(Conv2D(n_filters_first*( PARERIGHT  COMMA  ernel_size EQUAL ( PARERIGHT  COMMA put_shape EQUAL ( PARERIGHT  COMMA ernel_initializer EQUAL [] COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
if DEBUG: EOM
count+ EQUAL 1 EOM
model DOT add(MaxPooling2D( PARERIGHT  PARERIGHT  EOM
return model EOM
def _build_lstm( PARERIGHT : EOM
self DOT model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return self DOT model EOM
def build_same_cnn_lstm( PARERIGHT : EOM
convnet  EQUAL  self DOT _build_2dcnn(w_init EQUAL  COMMA  n_layers EQUAL ( PARERIGHT  COMMA  olsize EQUAL ( PARERIGHT  COMMA  n_filters_first EQUAL  COMMA  filter_size EQUAL ( PARERIGHT  PARERIGHT  EOM
convnet DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
cnn_output_shape  EQUAL  convnet DOT output_shape[] EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(TimeDistributed(convnet COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
output  EQUAL  self DOT _build_output( PARERIGHT  EOM
return output EOM
def build_cnn_lstm( PARERIGHT : EOM
convnets  EQUAL  [] EOM
for i in range( PARERIGHT : EOM
convnet  EQUAL  self DOT _build_2dcnn(w_init EQUAL  COMMA  n_layers EQUAL ( PARERIGHT  COMMA  olsize EQUAL ( PARERIGHT  COMMA  n_filters_first EQUAL  COMMA  filter_size EQUAL ( PARERIGHT  PARERIGHT  EOM
convnet DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
convnets DOT append( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
num_cnn_features  EQUAL  convnets[] DOT output_shape[] EOM
model DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  self DOT _build_output( PARERIGHT  EOM
return model EOM
def build_cnn_lstm_mix( PARERIGHT : EOM
convnets  EQUAL  [] EOM
for i in range( PARERIGHT : EOM
convnet  EQUAL  self DOT _build_2dcnn(w_init EQUAL  COMMA  n_layers EQUAL ( PARERIGHT  COMMA  olsize EQUAL ( PARERIGHT  COMMA  n_filters_first EQUAL  COMMA  filter_size EQUAL ( PARERIGHT  PARERIGHT  EOM
convnet DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
convnets DOT append( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
num_cnn_features  EQUAL  convnets[] DOT output_shape[] EOM
model DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
convpool  EQUAL  model DOT output EOM
reform_convpool  EQUAL  Permute(( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
convout_1d  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
convout_1d  EQUAL  Flatten( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  self DOT _build_output( PARERIGHT  EOM
return model EOM
def _build_output( PARERIGHT : EOM
if DROPOUT: EOM
output  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
output  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
if DROPOUT: EOM
output  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
return output EOM
def _build_seq_output( PARERIGHT : EOM
if DROPOUT: EOM
finalmodel DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
finalmodel DOT add(Dense( PARERIGHT  PARERIGHT  EOM
if DROPOUT: EOM
finalmodel DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
finalmodel DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return finalmodel EOM
def init_callbacks( PARERIGHT : EOM
callbacks  EQUAL  [] EOM
return callbacks EOM
optimizer  EQUAL  keras DOT optimizers DOT Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT model_config  EQUAL  model DOT get_config( PARERIGHT  EOM
return model DOT get_config( PARERIGHT  EOM
def train( PARERIGHT : EOM
callbacks  EQUAL  self DOT init_callbacks( PARERIGHT  EOM
aug  EQUAL  ImageDataGenerator( PARERIGHT  EOM
HH  EQUAL  model DOT fit_generator(idation_data EQUAL ( PARERIGHT  COMMA   epochs EQUAL  COMMA allbacks EQUAL  COMMA  verbose EQUAL  PARERIGHT  EOM
else: EOM
HH  EQUAL  model DOT fit( PARERIGHT  EOM
self DOT HH  EQUAL  HH EOM
return HH EOM
def eval( PARERIGHT : EOM
self DOT score  EQUAL  self DOT model DOT evaluate( PARERIGHT  EOM
acc_train_history  EQUAL  self DOT score DOT history[] EOM
acc_test_history  EQUAL  self DOT score DOT history[] EOM
loss_train_history  EQUAL  self DOT score DOT history[] EOM
loss_test_history  EQUAL  self DOT score DOT history[]from keras import layers COMMA  models COMMA  optimizers COMMA  initializers EOM
from keras import backend as K EOM
import tensorflow as tf EOM
import numpy as np EOM
from keras DOT regularizers import l2 EOM
def preprocess( PARERIGHT : EOM
inp_shape  EQUAL  ( PARERIGHT  EOM
out_shape  EQUAL  ( PARERIGHT  EOM
inp  EQUAL  layers DOT Input( PARERIGHT  EOM
def generateCovLayer( PARERIGHT : EOM
convModel  EQUAL  models DOT Sequential( PARERIGHT  EOM
convModel DOT add(layers DOT Conv2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA  padding EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA name EQUAL  PARERIGHT  PARERIGHT  EOM
convModel DOT add(layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
convModel DOT add(layers DOT Activation( PARERIGHT  PARERIGHT  EOM
convModel DOT add(layers DOT pooling DOT MaxPooling2D(pool_size EQUAL ( PARERIGHT  COMMA  padding EQUAL  PARERIGHT  PARERIGHT  EOM
return convModel EOM
convModel  EQUAL  generateCovLayer( PARERIGHT  EOM
def presplit( PARERIGHT : EOM
return inputR EOM
return [] EOM
def GenerateBLSTMTime( PARERIGHT : EOM
[]  EQUAL  preprocess( PARERIGHT  EOM
def easyreshape( PARERIGHT : EOM
xR  EQUAL  K DOT reshape(x COMMA  shape EQUAL [] PARERIGHT  EOM
return xR EOM
convoutputR  EQUAL  layers DOT Lambda( PARERIGHT ( PARERIGHT  EOM
SIZE_RLAYERS  EQUAL  256 EOM
x  EQUAL  convoutputR EOM
x  EQUAL  layers DOT Bidirectional(layers DOT LSTM(SIZE_RLAYERS COMMA  return_sequences EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA recurrent_regularizer EQUAL ( PARERIGHT  COMMA bias_regularizer EQUAL ( PARERIGHT  COMMA dropout EQUAL  COMMA recurrent_dropout EQUAL  PARERIGHT  PARERIGHT ( PARERIGHT  EOM
mask_o  EQUAL  layers DOT TimeDistributed(layers DOT Dense(out_shape[] COMMA activation EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA bias_regularizer EQUAL ( PARERIGHT  PARERIGHT  COMMA name EQUAL  PARERIGHT ( PARERIGHT  EOM
train_model  EQUAL  models DOT Model( PARERIGHT  EOM
return train_model EOM
def GenerateBLSTMFrequency( PARERIGHT : EOM
[]  EQUAL  preprocess( PARERIGHT  EOM
SIZE_RLAYERS  EQUAL  128 EOM
rnnModel  EQUAL  models DOT Sequential( PARERIGHT  EOM
import prepare_data as pd EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Activation EOM
from keras DOT callbacks import ModelCheckpoint EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(512 COMMA nput_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def train( PARERIGHT : EOM
filepath  EQUAL  EOM
checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
callbacks_list  EQUAL  [] EOM
model DOT fit( PARERIGHT  EOM
def train_net( PARERIGHT : EOM
notes  EQUAL  pd DOT convert_from_midi( PARERIGHT  EOM
vocab  EQUAL  len(set( PARERIGHT  PARERIGHT  EOM
net_input COMMA  net_output  EQUAL  pd DOT generate_sequence( PARERIGHT  EOM
model  EQUAL  build_network( PARERIGHT  EOM
train( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
train_net( PARERIGHT from __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
from __future__ import unicode_literals EOM
import logging EOM
from rasa_core DOT policies DOT keras_policy import KerasPolicy EOM
logger  EQUAL  logging DOT getLogger( PARERIGHT  EOM
class RestaurantPolicy( PARERIGHT : EOM
def model_architecture( PARERIGHT : EOM
from keras DOT layers import LSTM COMMA  Activation COMMA  Masking COMMA  Dense EOM
from keras DOT models import Sequential EOM
from keras DOT models import Sequential EOM
from keras DOT layers import \ EOM
Masking COMMA  LSTM COMMA  Dense COMMA  TimeDistributed COMMA  Activation EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if len( PARERIGHT   EQUAL             model DOT add(Masking( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             model DOT add(Masking(mask_value EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
raise ValueError(th of output_shape  EQUAL (len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
logger DOT debug(model DOT summary( PARERIGHT  PARERIGHT  EOM
return modelimport sys EOM
import numpy as np EOM
import h5py EOM
import scipy DOT io EOM
from keras DOT optimizers import RMSprop EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten EOM
from keras DOT layers DOT convolutional import Conv1D COMMA  MaxPooling1D EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT callbacks import ModelCheckpoint COMMA  EarlyStopping EOM
from keras DOT layers DOT wrappers import Bidirectional EOM
input_file  EQUAL  sys DOT argv[] EOM
output_file  EQUAL  sys DOT argv[] EOM
forward_lstm  EQUAL  LSTM(320 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  EOM
backward_lstm  EQUAL  LSTM(320 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D(input_shape EQUAL ( PARERIGHT  COMMA padding EQUAL  COMMA strides EQUAL  COMMA activation EQUAL  COMMA kernel_size EQUAL  COMMA filters EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT load_weights( PARERIGHT  EOM
testmat  EQUAL  scipy DOT io DOT loadmat( PARERIGHT [] EOM
y  EQUAL  model DOT predict( PARERIGHT  EOM
f  EQUAL  h5py DOT File( PARERIGHT  EOM
f DOT create_dataset( PARERIGHT  EOM
f DOT close( PARERIGHT from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM COMMA  Conv1D COMMA  Flatten COMMA  Dropout EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
def convolutional_nn( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm( PARERIGHT : EOM
dimensions  EQUAL  300 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(200 COMMA   input_shape EQUAL ( PARERIGHT  COMMA   return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
top_words  EQUAL  10000 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
max_review_length  EQUAL  1600 EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL  convolutional_nn( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
from __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
from absl DOT testing import parameterized EOM
import numpy as np EOM
from tensorflow DOT python import keras EOM
from tensorflow DOT python DOT framework import test_util as tf_test_util EOM
from tensorflow DOT python DOT keras import testing_utils EOM
from tensorflow DOT python DOT platform import test EOM
from tensorflow DOT python DOT training import adam EOM
from tensorflow DOT python DOT training import gradient_descent EOM
from tensorflow DOT python DOT training DOT rmsprop import RMSPropOptimizer EOM
class LSTMLayerTest( PARERIGHT : EOM
def test_return_sequences_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA return_sequences EOM
def test_static_shape_inference_LSTM( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
inputs  EQUAL  keras DOT layers DOT Dense(embedding_dim COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
outputs  EQUAL  model DOT layers[] DOT output EOM
self DOT assertEqual(outputs DOT get_shape( PARERIGHT  DOT as_list( PARERIGHT  COMMA  [] PARERIGHT  EOM
def test_dynamic_behavior_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
layer  EQUAL  keras DOT layers DOT LSTM(units COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile(RMSPropOptimizer( PARERIGHT  COMMA   PARERIGHT  EOM
x  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_dropout_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA dropout: 0 DOT 1} COMMA put_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
def test_implementation_mode_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA implementation EOM
def test_constraints_LSTM( PARERIGHT : EOM
embedding_dim  EQUAL  4 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
k_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
r_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
b_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
layer  EQUAL  layer_class(5 COMMA return_sequences EQUAL  COMMA weights EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA kernel_constraint EQUAL  COMMA recurrent_constraint EQUAL  COMMA bias_constraint EQUAL  PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
def test_with_masking_layer_LSTM( PARERIGHT : EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT abs(np DOT random DOT random(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
targets / EQUAL  targets DOT sum( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Masking(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(layer_class( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
def test_masking_with_stacking_LSTM( PARERIGHT : EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT abs(np DOT random DOT random(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
targets / EQUAL  targets DOT sum( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Masking(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
lstm_cells  EQUAL  [] EOM
model DOT add(keras DOT layers DOT RNN( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
def test_from_config_LSTM( PARERIGHT : EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
for stateful in ( PARERIGHT : EOM
l1  EQUAL  layer_class( PARERIGHT  EOM
l2  EQUAL  layer_class DOT from_config(l1 DOT get_config( PARERIGHT  PARERIGHT  EOM
assert l1 DOT get_config( PARERIGHT   EQUAL ( PARERIGHT  EOM
def test_specify_initial_state_keras_tensor( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
if len( PARERIGHT   EQUAL       output  EQUAL  layer( PARERIGHT  EOM
else: EOM
output  EQUAL  layer( PARERIGHT  EOM
assert initial_state[] in layer DOT _inbound_nodes[] DOT input_tensors EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_specify_initial_state_non_keras_tensor( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [keras DOT backend DOT random_normal_variable( PARERIGHT  COMMA  0 COMMA  1 PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
output  EQUAL  layer( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_reset_states_with_values( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
assert len( PARERIGHT   EQUAL     assert layer DOT states[] is not None EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA np DOT zeros(keras DOT backend DOT int_shape( PARERIGHT  PARERIGHT  COMMA atol EQUAL  PARERIGHT  EOM
state_shapes  EQUAL  [] EOM
values  EQUAL  [] EOM
if len( PARERIGHT   EQUAL       values  EQUAL  values[] EOM
layer DOT reset_states( PARERIGHT  EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA np DOT ones(keras DOT backend DOT int_shape( PARERIGHT  PARERIGHT  COMMA atol EQUAL  PARERIGHT  EOM
with self DOT assertRaises( PARERIGHT : EOM
layer DOT reset_states([] * (len( PARERIGHT  + 1 PARERIGHT  PARERIGHT  EOM
def test_specify_state_with_masking( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
_  EQUAL  keras DOT layers DOT Masking( PARERIGHT ( PARERIGHT  EOM
initial_state  EQUAL  [] EOM
output  EQUAL  keras DOT layers DOT LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_return_state( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(batch_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
outputs  EQUAL  layer( PARERIGHT  EOM
state  EQUAL  outputs[] EOM
assert len( PARERIGHT   EQUAL     model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
state  EQUAL  model DOT predict( PARERIGHT  EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA  state COMMA  atol EQUAL  PARERIGHT  EOM
def test_state_reuse( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(batch_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
outputs  EQUAL  layer( PARERIGHT  EOM
output COMMA  state  EQUAL  outputs[] COMMA  outputs[] EOM
output  EQUAL  keras DOT layers DOT LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
outputs  EQUAL  model DOT predict( PARERIGHT  EOM
def test_initial_states_as_other_inputs( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
num_states  EQUAL  2 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
main_inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
inputs  EQUAL  [] + initial_state EOM
layer  EQUAL  layer_class( PARERIGHT  EOM
output  EQUAL  layer( PARERIGHT  EOM
assert initial_state[] in layer DOT _inbound_nodes[] DOT input_tensors EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
main_inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
class LSTMLayerGraphOnlyTest( PARERIGHT : EOM
def test_statefulness_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
with self DOT cached_session( PARERIGHT : EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Embedding(4 COMMA embedding_dim COMMA mask_zero EQUAL  COMMA input_length EQUAL  COMMA atch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
layer  EQUAL  layer_class( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile(optimizer EQUAL ( PARERIGHT  COMMA loss EQUAL  PARERIGHT  EOM
out1  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertEqual(out1 DOT shape COMMA  ( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch(ones(( PARERIGHT  PARERIGHT  COMMA  np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
out2  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out1 DOT max( PARERIGHT  COMMA  out2 DOT max( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
out3  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out2 DOT max( PARERIGHT  COMMA  out3 DOT max( PARERIGHT  PARERIGHT  EOM
model DOT reset_states( PARERIGHT  EOM
out4  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertAllClose( PARERIGHT  EOM
out5  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out4 DOT max( PARERIGHT  COMMA  out5 DOT max( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
left_padded_input  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
left_padded_input[]  EQUAL  0 EOM
left_padded_input[]  EQUAL  0 EOM
out6  EQUAL  model DOT predict( PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
right_padded_input  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
right_padded_input[]  EQUAL  0 EOM
right_padded_input[]  EQUAL  0 EOM
out7  EQUAL  model DOT predict( PARERIGHT  EOM
self DOT assertAllClose( PARERIGHT  EOM
def test_regularizers_LSTM( PARERIGHT : EOM
embedding_dim  EQUAL  4 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
with self DOT cached_session( PARERIGHT : EOM
layer  EQUAL  layer_class(5 COMMA return_sequences EQUAL  COMMA weights EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA recurrent_regularizer EQUAL ( PARERIGHT  COMMA bias_regularizer EQUAL  COMMA activity_regularizer EQUAL  PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
self DOT assertEqual(len( PARERIGHT  COMMA  3 PARERIGHT  EOM
x  EQUAL  keras DOT backend DOT variable(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
layer( PARERIGHT  EOM
self DOT assertEqual(len(layer DOT get_losses_for( PARERIGHT  PARERIGHT  COMMA  1 PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
test DOT main( PARERIGHT from tensorflow import keras EOM
from util_tools DOT log_utils import get_logger EOM
LOGGER  EQUAL  get_logger( PARERIGHT  EOM
sgd  EQUAL  keras DOT optimizers DOT SGD( PARERIGHT  EOM
def get_model( PARERIGHT : EOM
if  name EQUAL  EQUAL : EOM
return zzw_cnn( PARERIGHT  EOM
elif name EQUAL  EQUAL : EOM
return zzw_lstm( PARERIGHT  EOM
elif name EQUAL  EQUAL : EOM
return final_model( PARERIGHT  EOM
elif name EQUAL  EQUAL : EOM
return yeqy_cnn( PARERIGHT  EOM
elif name EQUAL  EQUAL : EOM
return yeqy_lstm_single( PARERIGHT  EOM
else: EOM
LOGGER DOT error( DOT format( PARERIGHT  PARERIGHT  EOM
assert( PARERIGHT  EOM
def final_active_func( PARERIGHT : EOM
if classify_type  EQUAL  EQUAL  4: EOM
return EOM
elif classify_type  EQUAL  EQUAL  16: EOM
return EOM
def zzw_cnn( PARERIGHT : EOM
model  EQUAL  keras DOT Sequential( PARERIGHT  EOM
e  EQUAL  keras DOT layers DOT Embedding( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT MaxPool1D( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT MaxPool1D( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT MaxPool1D( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense(classify_type COMMA  activation EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def final_model( PARERIGHT : EOM
model  EQUAL  keras DOT Sequential( PARERIGHT  EOM
e  EQUAL  keras DOT layers DOT Embedding( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT GlobalMaxPool1D( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense(classify_type COMMA  activation EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def yeqy_lstm_single( PARERIGHT : EOM
model  EQUAL  keras DOT Sequential( PARERIGHT  EOM
e  EQUAL  keras DOT layers DOT Embedding( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(keras DOT layers DOT CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense(classify_type COMMA  activation EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def yeqy_cnn( PARERIGHT : EOM
model  EQUAL  keras DOT Sequential( PARERIGHT  EOM
e  EQUAL  keras DOT layers DOT Embedding( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT GlobalMaxPool1D( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense(256 COMMA  activation EQUAL  COMMA bias_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense(classify_type COMMA  activation EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def zzw_lstm( PARERIGHT : EOM
model  EQUAL  keras DOT Sequential( PARERIGHT  EOM
e  EQUAL  keras DOT layers DOT Embedding( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(keras DOT layers DOT CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense(classify_type COMMA  activation EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT layers DOT wrappers import TimeDistributed EOM
from keras DOT models import Model EOM
from keras DOT optimizers import RMSprop EOM
from keras DOT callbacks import TensorBoard EOM
from keras import Sequential EOM
import numpy as np EOM
data_dim  EQUAL  16 EOM
timesteps  EQUAL  8 EOM
num_classes  EQUAL  10 EOM
batch_size  EQUAL  32 EOM
def hold( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(32 COMMA  return_sequences EQUAL  COMMA  stateful EQUAL  COMMA tch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
x_val  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_val  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  np DOT random DOT randint(2 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
x_val  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_val  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
max_caption_len  EQUAL  16 EOM
vocab_size  EQUAL  10000 EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(64 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM COMMA  Bidirectional EOM
from keras DOT callbacks import ModelCheckpoint EOM
from keras DOT utils import np_utils EOM
from keras DOT optimizers import SGD COMMA  Nadam EOM
def get_lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  Nadam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model COMMA optfrom keras DOT models import Sequential EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT core import Merge COMMA  Dense COMMA  Dropout EOM
import numpy as np EOM
class TGVModel: EOM
def __init__( PARERIGHT : EOM
self DOT trigram_model  EQUAL  self DOT random_first_level_network( PARERIGHT  EOM
self DOT word_network  EQUAL  self DOT first_level_network( PARERIGHT  EOM
self DOT tags_network  EQUAL  self DOT first_level_network( PARERIGHT  EOM
self DOT model  EQUAL  self DOT second_level_network( PARERIGHT  EOM
def first_level_network( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
import os EOM
global_model_version  EQUAL  44 EOM
global_batch_size  EQUAL  16 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_2  EQUAL  Sequential( PARERIGHT  EOM
branch_2 DOT add( PARERIGHT  EOM
branch_2 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_6  EQUAL  Sequential( PARERIGHT  EOM
branch_6 DOT add( PARERIGHT  EOM
branch_6 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import pytest EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras import Input COMMA  Model EOM
from keras DOT layers import Conv2D COMMA  Bidirectional EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(2 COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
inner_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_lstm  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  name EQUAL  PARERIGHT ( PARERIGHT  EOM
encoder  EQUAL  Model( PARERIGHT  EOM
outer_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_encoder  EQUAL  TimeDistributed( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
preds  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
def test_plot_sequential_embedding( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout EOM
from keras DOT layers import LSTM COMMA  Merge COMMA  Dense EOM
def VQA_MODEL( PARERIGHT : EOM
image_feature_size  EQUAL  4096 EOM
word_feature_size  EQUAL  300 EOM
number_of_LSTM  EQUAL  3 EOM
number_of_hidden_units_LSTM  EQUAL  512 EOM
max_length_questions  EQUAL  30 EOM
number_of_dense_layers  EQUAL  3 EOM
number_of_hidden_units  EQUAL  1024 EOM
activation_function  EQUAL  EOM
dropout_pct  EQUAL  0 DOT 5 EOM
model_image  EQUAL  Sequential( PARERIGHT  EOM
model_image DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language  EQUAL  Sequential( PARERIGHT  EOM
model_language DOT add(LSTM(number_of_hidden_units_LSTM COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return modelfrom __future__ import print_function EOM
from hyperopt import Trials COMMA  STATUS_OK COMMA  tpe EOM
from keras DOT datasets import mnist EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT models import Sequential EOM
from keras DOT utils import np_utils EOM
import numpy as np EOM
from hyperas import optim EOM
from keras DOT models import model_from_json EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT optimizers import SGD  COMMA  Adam EOM
import tensorflow as tf EOM
import keras DOT backend as K EOM
from hyperas DOT distributions import choice COMMA  uniform COMMA  conditional EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
__author__  EQUAL  EOM
def data( PARERIGHT : EOM
x  EQUAL  np DOT load( PARERIGHT  EOM
x  EQUAL  x DOT reshape( PARERIGHT  EOM
y  EQUAL  np DOT load( PARERIGHT  EOM
y  EQUAL  y DOT reshape( PARERIGHT  EOM
x_train  COMMA x_test   EQUAL  np DOT split( PARERIGHT  EOM
y_train  COMMA  y_test EQUAL  np DOT split( PARERIGHT  EOM
return x_train COMMA  y_train COMMA  x_test COMMA  y_test EOM
def model( PARERIGHT : EOM
model_lstm  DOT add(LSTM({{choice( PARERIGHT }} COMMA  dropout EQUAL ( PARERIGHT }} COMMA atch_input_shape EQUAL ( PARERIGHT  COMMA urrent_dropout EQUAL ( PARERIGHT }} COMMA return_sequences  EQUAL  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
condition  EQUAL  conditional({{choice( PARERIGHT }} PARERIGHT  EOM
if condition  EQUAL  EQUAL  : EOM
pass EOM
elif condition  EQUAL  EQUAL  : EOM
model_lstm  DOT add(LSTM({{choice( PARERIGHT }} COMMA  dropout EQUAL ( PARERIGHT }} COMMA ecurrent_dropout EQUAL ( PARERIGHT }} COMMA turn_sequences  EQUAL  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
elif condition   EQUAL  EQUAL  : EOM
model_lstm  DOT add(LSTM({{choice( PARERIGHT }} COMMA  dropout EQUAL ( PARERIGHT }} COMMA ecurrent_dropout EQUAL ( PARERIGHT }} COMMA turn_sequences  EQUAL  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense({{choice( PARERIGHT }} PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation({{choice( PARERIGHT }} PARERIGHT  PARERIGHT  EOM
elif condition  EQUAL  EQUAL  : EOM
model_lstm  DOT add(LSTM({{choice( PARERIGHT }} COMMA  dropout EQUAL ( PARERIGHT }} COMMA ecurrent_dropout EQUAL ( PARERIGHT }} COMMA turn_sequences  EQUAL  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense({{choice( PARERIGHT }} PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation({{choice( PARERIGHT }} PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dense({{choice( PARERIGHT }} COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation({{choice( PARERIGHT }} PARERIGHT  PARERIGHT  EOM
model_lstm  DOT add(Dense( PARERIGHT  PARERIGHT  EOM
adam  EQUAL  Adam( PARERIGHT  EOM
model_lstm  DOT compile( PARERIGHT  EOM
model_lstm DOT summary( PARERIGHT  EOM
model_lstm DOT fit(x_train COMMA  y_train COMMA batch_size EQUAL  COMMA epochs EQUAL  COMMA verbose EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
loss COMMA  acc  EQUAL  model_lstm DOT evaluate( PARERIGHT  EOM
return {: -acc COMMA  : STATUS_OK COMMA  : model_lstm} EOM
if __name__  EQUAL  EQUAL  : EOM
import gc gc DOT collect( PARERIGHT  EOM
best_run COMMA  best_model  EQUAL  optim DOT minimize(model EQUAL  COMMA data EQUAL  COMMA algo EQUAL  COMMA max_evals EQUAL  COMMA trials EQUAL ( PARERIGHT  PARERIGHT  EOM
X_train COMMA  Y_train COMMA  X_test COMMA  Y_test  EQUAL  data( PARERIGHT  EOM
import h5py EOM
from base_model import BaseModel EOM
from data_source import DataSource EOM
from keras DOT layers import concatenate EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import GRU EOM
from keras DOT layers import Input EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Conv1D EOM
from keras DOT layers import Conv2D EOM
from keras DOT layers import MaxPooling1D EOM
from keras DOT layers import MaxPooling2D EOM
from keras DOT layers import Merge EOM
from keras DOT layers DOT core import Flatten EOM
from keras DOT layers DOT core import Reshape EOM
from keras DOT layers DOT wrappers import Bidirectional EOM
from keras DOT models import Model EOM
from keras DOT models import Sequential EOM
from keras DOT models import load_model EOM
import numpy as np EOM
from utils DOT vocabulary import Vocabulary EOM
DROPOUT  EQUAL  0 DOT 2 EOM
LSTM_SIZE  EQUAL  1024 EOM
SEQ_LEN  EQUAL  40 EOM
OPENAI_FEATURE_SIZE  EQUAL  4096 EOM
OPENAI_REDUCED_SIZE  EQUAL  25 EOM
BATCH_SIZE  EQUAL  64 EOM
class Model( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
BaseModel DOT __init__( PARERIGHT  EOM
self DOT filter_sizes  EQUAL  [] EOM
self DOT num_filters  EQUAL  256 EOM
def create_model( PARERIGHT : EOM
if ckpt_file is None: EOM
if self DOT arch  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add( PARERIGHT  EOM
self DOT model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif self DOT arch  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add( PARERIGHT  EOM
self DOT model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif self DOT arch  EQUAL  EQUAL  : EOM
conv_filters  EQUAL  [] EOM
for filter_size in self DOT filter_sizes: EOM
conv_filters DOT append(Sequential( PARERIGHT  PARERIGHT  EOM
conv_filters[] DOT add( PARERIGHT  EOM
conv_filters[] DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
conv_filters[] DOT add(MaxPooling1D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif self DOT arch  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
filter_size  EQUAL  3 EOM
self DOT model DOT add( PARERIGHT  EOM
self DOT model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Conv1D(filters EQUAL ( PARERIGHT  COMMA  kernel_size EQUAL  COMMA rides EQUAL  COMMA  padding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif self DOT arch  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
filter_size  EQUAL  3 EOM
self DOT model DOT add( PARERIGHT  EOM
self DOT model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Conv1D(filters EQUAL ( PARERIGHT  COMMA  kernel_size EQUAL  COMMA rides EQUAL  COMMA  padding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Conv1D(filters EQUAL ( PARERIGHT  COMMA  kernel_size EQUAL  COMMA rides EQUAL  COMMA  padding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Conv1D(filters EQUAL ( PARERIGHT  COMMA  kernel_size EQUAL  COMMA rides EQUAL  COMMA  padding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif self DOT arch  EQUAL  EQUAL  : EOM
branch1  EQUAL  Sequential( PARERIGHT  EOM
branch1 DOT add( PARERIGHT  EOM
branch1 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
conv_filters  EQUAL  [] EOM
for filter_size in self DOT filter_sizes: EOM
conv_filters DOT append(Sequential( PARERIGHT  PARERIGHT  EOM
conv_filters[] DOT add( PARERIGHT  EOM
conv_filters[] DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
conv_filters[] DOT add(MaxPooling1D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2  EQUAL  Sequential( PARERIGHT  EOM
branch2 DOT add(Merge( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif self DOT arch  EQUAL  EQUAL  : EOM
branch1  EQUAL  Sequential( PARERIGHT  EOM
branch1 DOT add( PARERIGHT  EOM
branch1 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch2  EQUAL  Sequential( PARERIGHT  EOM
branch2 DOT add(Dense(OPENAI_REDUCED_SIZE COMMA ctivation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif self DOT arch  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add( PARERIGHT  EOM
self DOT model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif self DOT arch  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add( PARERIGHT  EOM
lstm_layer  EQUAL  LSTM( PARERIGHT  EOM
self DOT model DOT add(Bidirectional( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
else: EOM
raise NotImplementedError( PARERIGHT  EOM
else: EOM
self DOT model  EQUAL  load_model( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( COMMA  type EQUAL  COMMA  default EQUAL  COMMA  nargs EQUAL  COMMA Type of word embedding Word2Vec or Glove EOM
args  EQUAL  parser DOT parse_args( PARERIGHT  EOM
vocab  EQUAL  Vocabulary( PARERIGHT  EOM
openai_features_dir  EQUAL  None EOM
if args DOT lstm_arch  EQUAL  EQUAL  : EOM
openai_features_dir  EQUAL  EOM
data_source  EQUAL  DataSource(vocab EQUAL  COMMA labeled_data_file EQUAL  COMMA test_data_file EQUAL  COMMA embedding_file EQUAL ( PARERIGHT  COMMA embedding_dim EQUAL  COMMA seq_length EQUAL  COMMA embedding_type EQUAL  COMMA openai_features_dir EQUAL  PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
if args DOT is_train: EOM
model DOT create_model( PARERIGHT  EOM
model DOT train( PARERIGHT  EOM
elif args DOT is_eval: EOM
model DOT create_model( PARERIGHT  EOM
y_test COMMA  y_probs  EQUAL  model DOT predict( PARERIGHT  EOM
with open( PARERIGHT  as f: EOM
f DOT write( PARERIGHT  EOM
for idx COMMA  y in zip(np DOT arange( PARERIGHT  COMMA  y_test PARERIGHT : EOM
f DOT write(str( PARERIGHT  +  + str( PARERIGHT  +  PARERIGHT  EOM
else: EOM
model DOT create_model( PARERIGHT  EOM
y_test COMMA  y_probs  EQUAL  model DOT predict( PARERIGHT  EOM
with open( PARERIGHT  as f: EOM
f DOT write( PARERIGHT  EOM
for idx COMMA  y in zip(np DOT arange( PARERIGHT  COMMA  y_test PARERIGHT : EOM
f DOT write(str( PARERIGHT  +  + str( PARERIGHT  +  PARERIGHT  EOM
with open( PARERIGHT  as f: EOM
f DOT write( PARERIGHT  EOM
for idx COMMA  y in zip(np DOT arange( PARERIGHT  COMMA  y_probs PARERIGHT : EOM
f DOT write(str( PARERIGHT  +  + str( PARERIGHT  +  PARERIGHT  EOM
y_val COMMA  y_probs  EQUAL  model DOT predict(data_source DOT validation( PARERIGHT [] PARERIGHT  EOM
with open( PARERIGHT  as f: EOM
f DOT write( PARERIGHT  EOM
for idx COMMA  probs COMMA  pred_y COMMA  true_y in zip( np DOT arange( PARERIGHT  COMMA  y_probs COMMA _val COMMA  data_source DOT validation( PARERIGHT [] PARERIGHT : EOM
f DOT write(str( PARERIGHT  +  + str( PARERIGHT  +  + str( PARERIGHT  ++ str( PARERIGHT  + EOM
import numpy as np EOM
import pandas as pd EOM
import datetime EOM
import matplotlib DOT pyplot as plt EOM
from sklearn DOT preprocessing import MinMaxScaler EOM
from keras DOT callbacks import EarlyStopping COMMA  ReduceLROnPlateau COMMA  ModelCheckpoint COMMA  TensorBoard EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA Conv1D COMMA MaxPooling1D COMMA Flatten COMMA LSTM COMMA GRU EOM
import pywt EOM
from collections import defaultdict EOM
from keras import losses EOM
from sklearn import metrics EOM
import math EOM
import sys EOM
from keras DOT callbacks import History EOM
def mean_absolute_percentage_error( PARERIGHT : EOM
return np DOT mean(np DOT abs(( PARERIGHT  / y_true PARERIGHT  PARERIGHT *100 EOM
def multivariateGRU( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(GRU(nodes COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def multivariateLSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(nodes COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def multivariateLSTM_sequence( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(nodes COMMA  input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(nodes COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def singleLSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(nodes COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def singleLSTM_sequences( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(nodes COMMA  input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(nodes COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def singleGRU( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(GRU(nodes COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def Ensemble_Network( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(GRU(nodes COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def train( PARERIGHT : EOM
history  EQUAL  History( PARERIGHT  EOM
reduce_lr  EQUAL  ReduceLROnPlateau( PARERIGHT  EOM
checkpointer EQUAL ModelCheckpoint( PARERIGHT  EOM
earlystopper EQUAL EarlyStopping( PARERIGHT  EOM
model DOT fit(x COMMA  y COMMA  validation_data EQUAL ( PARERIGHT  COMMA epochs EQUAL  COMMA  batch_size EQUAL  COMMA  verbose EQUAL  COMMA  shuffle EQUAL  COMMA callbacks EQUAL [] PARERIGHT  EOM
lowest_val_loss EQUAL min( PARERIGHT  EOM
return model COMMA lowest_val_lossimport pytest EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras import Input COMMA  Model EOM
from keras DOT layers import Conv2D COMMA  Bidirectional EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(2 COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
inner_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_lstm  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  name EQUAL  PARERIGHT ( PARERIGHT  EOM
encoder  EQUAL  Model( PARERIGHT  EOM
outer_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_encoder  EQUAL  TimeDistributed( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
preds  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
def test_plot_sequential_embedding( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT from __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
from __future__ import unicode_literals EOM
import logging EOM
from rasa_core DOT policies DOT keras_policy import KerasPolicy EOM
logger  EQUAL  logging DOT getLogger( PARERIGHT  EOM
class JobsPolicy( PARERIGHT : EOM
def model_architecture( PARERIGHT : EOM
from keras DOT layers import LSTM COMMA  Activation COMMA  Masking COMMA  Dense EOM
from keras DOT models import Sequential EOM
from keras DOT models import Sequential EOM
from keras DOT layers import \ EOM
Masking COMMA  LSTM COMMA  Dense COMMA  TimeDistributed COMMA  Activation EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if len( PARERIGHT   EQUAL             model DOT add(Masking( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             model DOT add(Masking(mask_value EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
raise ValueError(th of output_shape  EQUAL (len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
logger DOT debug(model DOT summary( PARERIGHT  PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT models import load_model EOM
from sklearn DOT preprocessing import MinMaxScaler EOM
from config import MODEL_DIR COMMA  SCORE_COLUMNS EOM
import os DOT path as osp EOM
def build_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(4 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def train_model( PARERIGHT : EOM
model  EQUAL  build_model( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
model DOT save(osp DOT join( PARERIGHT  PARERIGHT  EOM
def test_model( PARERIGHT : EOM
model  EQUAL  load_model(osp DOT join( PARERIGHT  PARERIGHT  EOM
loss  EQUAL  model DOT evaluate( PARERIGHT  EOM
return lossimport numpy as np EOM
from keras DOT layers import Input COMMA  Dense EOM
from keras DOT models import Model EOM
X  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
h  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model2  EQUAL  Model( PARERIGHT  EOM
model2 DOT compile( PARERIGHT  EOM
out  EQUAL  model2 DOT predict( PARERIGHT  EOM
out DOT shape EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Activation EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import LSTM EOM
import reader EOM
[]  EQUAL  reader DOT get_formatted_data( PARERIGHT  EOM
responses  EQUAL  reader DOT get_response( PARERIGHT  EOM
input_layer_matrix  EQUAL  reader DOT get_embedding_matrix_input( PARERIGHT  EOM
word_indices  EQUAL  reader DOT get_word_index( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(len( PARERIGHT  + 1 COMMA 300 COMMA weights EQUAL [] COMMA input_length EQUAL  COMMA trainable EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
import numpy as np EOM
from keras DOT layers import Input COMMA  Dense EOM
from keras DOT models import Model EOM
from keras DOT layers DOT embeddings import Embedding EOM
X  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
h  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
output  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model2  EQUAL  Model( PARERIGHT  EOM
model2 DOT compile( PARERIGHT  EOM
out  EQUAL  model2 DOT predict( PARERIGHT  EOM
out DOT shape EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation EOM
from keras DOT layers DOT recurrent import LSTM EOM
in_out_neurons  EQUAL  2 EOM
hidden_neurons  EQUAL  300 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
import numpy as np EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers import Input COMMA  Dense EOM
from keras DOT models import Model EOM
from keras DOT layers DOT core import Reshape EOM
X  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
flatten  EQUAL  Reshape(( PARERIGHT  PARERIGHT  ( PARERIGHT  EOM
h  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
model2  EQUAL  Model( PARERIGHT  EOM
model2 DOT compile( PARERIGHT  EOM
out  EQUAL  model2 DOT predict( PARERIGHT  EOM
out DOT shapefrom keras DOT layers import Input COMMA  Dense COMMA  Conv2D COMMA  MaxPooling2D COMMA  UpSampling2D COMMA  LSTM COMMA  Embedding COMMA  Dropout EOM
from keras DOT models import Model COMMA  Sequential EOM
from keras import layers EOM
from keras import backend as K EOM
from keras DOT callbacks import ModelCheckpoint EOM
from keras import callbacks EOM
from keras DOT callbacks import TensorBoard EOM
from keras import metrics EOM
from keras import optimizers EOM
def model_v34( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(52 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v35( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(52 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v38( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(52 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v39( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v40( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v41( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v42( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v43( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v44( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v45( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v46( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v47( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v48( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v49( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v50( PARERIGHT : EOM
model  EQUAL  model_v49( PARERIGHT  EOM
return model EOM
def model_v51( PARERIGHT : EOM
model  EQUAL  model_v49( PARERIGHT  EOM
return model EOM
def model_v52( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(39 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v53( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(256 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_v54( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(256 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT callbacks import EarlyStopping EOM
from keras DOT optimizers import Nadam EOM
from keras DOT layers import Merge EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT utils DOT np_utils import to_categorical EOM
import numpy as np EOM
from sklearn DOT metrics import confusion_matrix COMMA  accuracy_score EOM
from import_dataset import x_accel_test COMMA  x_accel_validation COMMA  x_accel_train COMMA  y_accel_test COMMA  y_accel_validation COMMA  y_accel_train COMMA  z_accel_test COMMA  z_accel_validation COMMA  z_accel_train COMMA  x_gyro_test COMMA  x_gyro_validation COMMA  x_gyro_train COMMA  y_gyro_test COMMA  y_gyro_validation COMMA  y_gyro_train COMMA  z_gyro_test COMMA  z_gyro_validation COMMA  z_gyro_train COMMA  y_test COMMA  y_validation COMMA  y_train EOM
if __name__  EQUAL  EQUAL  : EOM
subsample  EQUAL  2 EOM
N_dense  EQUAL  60 EOM
N_LSTM  EQUAL  40 EOM
lr  EQUAL  9 DOT 7e-4 EOM
b1  EQUAL  0 DOT 9 EOM
b2  EQUAL  0 DOT 9 EOM
model_x_acc  EQUAL  Sequential( PARERIGHT  EOM
model_x_acc DOT add(LSTM(N_LSTM COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_y_acc  EQUAL  Sequential( PARERIGHT  EOM
model_y_acc DOT add(LSTM(N_LSTM COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_z_acc  EQUAL  Sequential( PARERIGHT  EOM
model_z_acc DOT add(LSTM(N_LSTM COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_x_gyr  EQUAL  Sequential( PARERIGHT  EOM
model_x_gyr DOT add(LSTM(N_LSTM COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_y_gyr  EQUAL  Sequential( PARERIGHT  EOM
model_y_gyr DOT add(LSTM(N_LSTM COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_z_gyr  EQUAL  Sequential( PARERIGHT  EOM
model_z_gyr DOT add(LSTM(N_LSTM COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
merged  EQUAL  Merge( PARERIGHT  EOM
final_model  EQUAL  Sequential( PARERIGHT  EOM
final_model DOT add( PARERIGHT  EOM
final_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
final_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
early_stopping  EQUAL  EarlyStopping( PARERIGHT  EOM
nadam  EQUAL  Nadam( PARERIGHT  EOM
final_model DOT compile( PARERIGHT  EOM
y_train_c  EQUAL  to_categorical( PARERIGHT  EOM
y_validation_c  EQUAL  to_categorical( PARERIGHT  EOM
final_model DOT fit([] COMMA y_train_c COMMA validation_data EQUAL ( PARERIGHT  COMMA nb_epoch EQUAL  COMMA callbacks EQUAL [] PARERIGHT  EOM
predictions  EQUAL  np DOT argmax(final_model DOT predict( PARERIGHT  COMMA  axis EQUAL  PARERIGHT  EOM
predictions_train  EQUAL  np DOT argmax(final_model DOT predict( PARERIGHT  COMMA  axis EQUAL  PARERIGHT  EOM
predictions_val  EQUAL  np DOT argmax(final_model DOT predict( PARERIGHT  COMMA  axis EQUAL  PARERIGHT  EOM
test_acc  EQUAL  accuracy_score( PARERIGHT  EOM
train_acc  EQUAL  accuracy_score( PARERIGHT  EOM
val_acc  EQUAL  accuracy_score( PARERIGHT  EOM
final_model DOT save( PARERIGHT  EOM
final_model DOT save_weights( PARERIGHT from __future__ import print_function EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT optimizers import Adam EOM
from keras DOT datasets import imdb EOM
from keras DOT callbacks import TensorBoard COMMA  ModelCheckpoint EOM
from keras_diagram import ascii EOM
def binary_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def multiclass_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom __future__ import print_function EOM
import numpy as np EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Lambda EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Convolution1D COMMA MaxPooling1D COMMA  Flatten EOM
from keras DOT datasets import imdb EOM
from keras import backend as K EOM
from sklearn DOT cross_validation import train_test_split EOM
import pandas as pd EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from sklearn DOT preprocessing import Normalizer EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Convolution1D COMMA  Dense COMMA  Dropout COMMA  Flatten COMMA  MaxPooling1D EOM
from keras DOT utils import np_utils EOM
import numpy as np EOM
import h5py EOM
from keras import callbacks EOM
from keras DOT layers import LSTM COMMA  GRU COMMA  SimpleRNN EOM
from keras DOT callbacks import CSVLogger EOM
from keras DOT callbacks import ModelCheckpoint COMMA  EarlyStopping COMMA  ReduceLROnPlateau COMMA  CSVLogger EOM
import csv EOM
from sklearn DOT cross_validation import StratifiedKFold EOM
from sklearn DOT cross_validation import cross_val_score EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
with open( PARERIGHT  as f: EOM
reader  EQUAL  csv DOT reader( PARERIGHT  EOM
your_list  EQUAL  list( PARERIGHT  EOM
trainX  EQUAL  np DOT array( PARERIGHT  EOM
traindata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
Y  EQUAL  traindata DOT iloc[] EOM
y_train1  EQUAL  np DOT array( PARERIGHT  EOM
y_train EQUAL  to_categorical( PARERIGHT  EOM
maxlen  EQUAL  2000 EOM
trainX  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_train  EQUAL  np DOT reshape(trainX COMMA  ( PARERIGHT  PARERIGHT  EOM
with open( PARERIGHT  as f: EOM
reader1  EQUAL  csv DOT reader( PARERIGHT  EOM
your_list1  EQUAL  list( PARERIGHT  EOM
testX  EQUAL  np DOT array( PARERIGHT  EOM
testdata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
Y1  EQUAL  testdata DOT iloc[] EOM
y_test1  EQUAL  np DOT array( PARERIGHT  EOM
y_test EQUAL  to_categorical( PARERIGHT  EOM
maxlen  EQUAL  2000 EOM
testX  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  np DOT reshape(testX COMMA  ( PARERIGHT  PARERIGHT  EOM
batch_size  EQUAL  5 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
checkpointer  EQUAL  callbacks DOT ModelCheckpoint( PARERIGHT  EOM
model DOT fit(X_train COMMA  y_train COMMA  batch_size EQUAL  COMMA  nb_epoch EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  COMMA callbacks EQUAL [] PARERIGHT  EOM
model DOT save( PARERIGHT  from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT callbacks import ModelCheckpoint EOM
def lstm_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(n_neurons COMMA nput_shape EQUAL (seq_length COMMA  len( PARERIGHT  PARERIGHT  COMMA dropout EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(len( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
from math import sqrt EOM
from numpy import concatenate EOM
from matplotlib import pyplot EOM
import numpy as np EOM
from pandas import read_csv EOM
from pandas import DataFrame EOM
from keras DOT models import load_model EOM
from pandas import concat EOM
from sklearn DOT preprocessing import MinMaxScaler EOM
from sklearn DOT preprocessing import LabelEncoder EOM
from sklearn DOT metrics import mean_squared_error EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT core import RepeatVector EOM
from keras DOT layers import Dropout COMMA  Activation COMMA  Flatten EOM
from keras DOT layers import Convolution2D COMMA  MaxPooling2D EOM
from keras DOT optimizers import SGD EOM
from keras DOT models import model_from_yaml EOM
import os EOM
from keras DOT utils import plot_model EOM
from keras DOT utils DOT vis_utils import plot_model EOM
from keras DOT utils DOT vis_utils import model_to_dot EOM
i  EQUAL  0 EOM
filenamelist  EQUAL  list( PARERIGHT  EOM
wholefilepath  EQUAL  dir +  + filename EOM
filenamelist DOT append( PARERIGHT  EOM
return filenamelist EOM
def data_to_reconstruction_problem( PARERIGHT : EOM
df  EQUAL  DataFrame( PARERIGHT  EOM
list_concat  EQUAL  list( PARERIGHT  EOM
for i in range( PARERIGHT : EOM
tempdf  EQUAL  df DOT shift( PARERIGHT  EOM
list_concat DOT append( PARERIGHT  EOM
data_for_autoencoder  EQUAL  concat( PARERIGHT  EOM
data_for_autoencoder DOT dropna( PARERIGHT  EOM
return data_for_autoencoder EOM
def out_put_core( PARERIGHT : EOM
thefile  EQUAL  open( PARERIGHT  EOM
for item in writting_list: EOM
thefile DOT write( PARERIGHT  EOM
def data_preprocess( PARERIGHT : EOM
dataset  EQUAL  read_csv( PARERIGHT  EOM
if dataset DOT shape[]<16: EOM
return 0 COMMA 0 EOM
values  EQUAL  dataset DOT values EOM
reframed  EQUAL  data_to_reconstruction_problem( PARERIGHT  EOM
reframedvalues  EQUAL  reframed EOM
reframed  EQUAL  reframed DOT astype( PARERIGHT  EOM
scaler  EQUAL  MinMaxScaler(feature_range EQUAL ( PARERIGHT  PARERIGHT  EOM
scaled  EQUAL  scaler DOT fit_transform( PARERIGHT  EOM
dfscaled  EQUAL  DataFrame( PARERIGHT  EOM
valuescaled  EQUAL dfscaled DOT values EOM
return  valuescaled COMMA scaler COMMA reframedvalues EOM
def SingleFileLstmAutoencoder( PARERIGHT : EOM
W_Hidden1_list  EQUAL  list( PARERIGHT  EOM
W_Hidden2_list  EQUAL  list( PARERIGHT  EOM
W_Hidden3_list  EQUAL  list( PARERIGHT  EOM
W_Hidden4_list  EQUAL  list( PARERIGHT  EOM
W_Hidden5_list  EQUAL  list( PARERIGHT  EOM
train_X COMMA  scaler COMMA  y  EQUAL  data_preprocess( PARERIGHT  EOM
train_X  EQUAL  train_X DOT reshape(( PARERIGHT  PARERIGHT  EOM
sample_number  EQUAL  train_X DOT shape[] EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def train5modelAE( PARERIGHT : EOM
k1  EQUAL  SingleFileLstmAutoencoder( PARERIGHT  EOM
k2  EQUAL  SingleFileLstmAutoencoder( PARERIGHT  EOM
k3  EQUAL  SingleFileLstmAutoencoder( PARERIGHT  EOM
k4  EQUAL  SingleFileLstmAutoencoder( PARERIGHT  EOM
k5  EQUAL  SingleFileLstmAutoencoder( PARERIGHT  EOM
return k1 COMMA  k2 COMMA  k3 COMMA  k4 COMMA  k5 EOM
apa  EQUAL  200 EOM
batch  EQUAL  10 EOM
timestep  EQUAL  16 EOM
numfeature  EQUAL  25 EOM
data_for_model_training_1  EQUAL  r EOM
data_for_model_training_2  EQUAL  r EOM
data_for_model_training_3  EQUAL  r EOM
data_for_model_training_4  EQUAL  r EOM
data_for_model_training_5  EQUAL  r EOM
k1 COMMA  k2 COMMA  k3 COMMA  k4 COMMA  k5  EQUAL  train5modelAE( PARERIGHT  EOM
filename  EQUAL   r EOM
timestep  EQUAL  16 EOM
numfeature  EQUAL  25 EOM
apa  EQUAL  10 EOM
batch  EQUAL  4 EOM
def postboosting( PARERIGHT : EOM
test_x COMMA  scaler COMMA y  EQUAL  data_preprocess( PARERIGHT  EOM
test_x  EQUAL  test_x DOT reshape( PARERIGHT  EOM
yhatk1  EQUAL  k1 DOT predict( PARERIGHT  EOM
yhatk2  EQUAL  k2 DOT predict( PARERIGHT  EOM
yhatk3  EQUAL  k3 DOT predict( PARERIGHT  EOM
yhatk4  EQUAL  k4 DOT predict( PARERIGHT  EOM
yhatk5  EQUAL  k5 DOT predict( PARERIGHT  EOM
inputofdense  EQUAL  np DOT concatenate(( PARERIGHT  COMMA  1 PARERIGHT  DOT reshape( PARERIGHT  EOM
test_x  EQUAL  test_x DOT reshape( PARERIGHT  EOM
modelmerge  EQUAL  Sequential( PARERIGHT  EOM
modelmerge DOT add(Convolution2D(nb_filter  EQUAL  COMMA nb_row  EQUAL  COMMA nb_col  EQUAL  COMMA  border_mode EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
modelmerge DOT compile( PARERIGHT  EOM
history  EQUAL  modelmerge DOT fit( PARERIGHT  EOM
return modelmerge EOM
modelmerge  EQUAL postboosting( PARERIGHT  EOM
filepathlist  EQUAL  r EOM
test_x COMMA  scaler COMMA y  EQUAL  data_preprocess( PARERIGHT  EOM
test_x  EQUAL  test_x DOT reshape( PARERIGHT  EOM
yhatk1  EQUAL  k1 DOT predict( PARERIGHT  EOM
yhatk2  EQUAL  k2 DOT predict( PARERIGHT  EOM
yhatk3  EQUAL  k3 DOT predict( PARERIGHT  EOM
yhatk4  EQUAL  k4 DOT predict( PARERIGHT  EOM
yhatk5  EQUAL  k5 DOT predict( PARERIGHT  EOM
inputofdense  EQUAL  np DOT concatenate(( PARERIGHT  COMMA  1 PARERIGHT  DOT reshape( PARERIGHT  EOM
yhat  EQUAL  modelmerge DOT predict( PARERIGHT  EOM
yhat  EQUAL  yhat DOT reshape( PARERIGHT  EOM
yhat  EQUAL  scaler DOT inverse_transform( PARERIGHT  EOM
rmse  EQUAL  np DOT sqrt(np DOT mean((( PARERIGHT  ** 2 PARERIGHT  COMMA axis EQUAL  PARERIGHT  PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout COMMA  RepeatVector COMMA  Merge EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
lstm  EQUAL  LSTM(200 COMMA  dropout_W EQUAL  COMMA  dropout_U EQUAL  COMMA  EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(Dropout(0 DOT 3 COMMA  name EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
def get_vocab( PARERIGHT : EOM
vocab_count COMMA  vocab  EQUAL  Counter(w for txt in lst for w in txt DOT split( PARERIGHT  PARERIGHT  EOM
return vocab COMMA  vocab_count EOM
import pytest EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras import Input COMMA  Model EOM
from keras DOT layers import Conv2D COMMA  Bidirectional EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(2 COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
inner_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_lstm  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  name EQUAL  PARERIGHT ( PARERIGHT  EOM
encoder  EQUAL  Model( PARERIGHT  EOM
outer_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_encoder  EQUAL  TimeDistributed( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
preds  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
def test_plot_sequential_embedding( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT import random EOM
import sys EOM
import numpy as np EOM
from sklearn DOT cross_validation import train_test_split EOM
from save_load_model import * EOM
from keras DOT models import Sequential EOM
from keras DOT models import model_from_json EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT regularizers import l1 COMMA  l2 COMMA  activity_l1 COMMA  activity_l2 EOM
from keras DOT utils DOT visualize_util import plot EOM
def createModel( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(settings DOT hiddenNodes COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
if ( PARERIGHT : EOM
model DOT add(Dense(settings DOT N_values COMMA  W_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
elif settings DOT l2Amount > 0: EOM
model DOT add(Dense(settings DOT N_values COMMA  W_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
settings DOT filename  EQUAL  settings DOT activation +  + settings DOT trainingset +  + str( PARERIGHT  + + str( PARERIGHT  +  + str( PARERIGHT  +  + str( PARERIGHT  +  + str( PARERIGHT  +  + str( PARERIGHT  EOM
save_model_scratch( PARERIGHT  EOM
with open( PARERIGHT  as settingsFile: EOM
for ( PARERIGHT  in vars( PARERIGHT  DOT items( PARERIGHT : EOM
settingsFile DOT write(setting +  + str( PARERIGHT  +  PARERIGHT  EOM
if createPlot: EOM
plot( PARERIGHT  EOM
return model EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
from sklearn DOT model_selection import StratifiedKFold EOM
from sklearn DOT model_selection import cross_val_score EOM
from sklearn DOT model_selection import GridSearchCV EOM
import numpy EOM
from babeltraceReader import * EOM
from sklearn DOT externals import joblib EOM
import babeltrace EOM
import threading COMMA  queue EOM
from datetime import datetime EOM
import os EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
from sklearn DOT model_selection import GridSearchCV EOM
import numpy EOM
from testFeatureExtraction import * EOM
import os EOM
def create_model1( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def create_model2( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def create_model3( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def benchmarkLSTM( PARERIGHT : EOM
seed  EQUAL  7 EOM
numpy DOT random DOT seed( PARERIGHT  EOM
os DOT system( PARERIGHT  EOM
vec  EQUAL  DictVectorizer( PARERIGHT  EOM
listeOutput  EQUAL  [] EOM
dictDataset  EQUAL  itertools DOT chain DOT from_iterable(readCSV_data( PARERIGHT  PARERIGHT  EOM
for item in readCSV_output( PARERIGHT : EOM
listeOutput  EQUAL  listeOutput  + item EOM
X  EQUAL  vec DOT fit_transform( PARERIGHT  DOT toarray( PARERIGHT  EOM
Y  EQUAL  listeOutput EOM
scoring  EQUAL  [] EOM
kfold  EQUAL  StratifiedKFold( PARERIGHT  EOM
model2  EQUAL  KerasClassifier( PARERIGHT  EOM
scores2  EQUAL  cross_validate( PARERIGHT  EOM
save  EQUAL  joblib DOT dump( PARERIGHT  EOM
save  EQUAL  None EOM
save  EQUAL  joblib DOT dump( PARERIGHT  EOM
if save ! EQUAL  None : EOM
else: EOM
def LSTMFromCSV( PARERIGHT : EOM
seed  EQUAL  7 EOM
numpy DOT random DOT seed( PARERIGHT  EOM
os DOT system( PARERIGHT  EOM
vec  EQUAL  DictVectorizer( PARERIGHT  EOM
listeOutput  EQUAL  [] EOM
dictDataset  EQUAL  itertools DOT chain DOT from_iterable(readCSV_data( PARERIGHT  PARERIGHT  EOM
for item in readCSV_output( PARERIGHT : EOM
listeOutput  EQUAL  listeOutput  + item EOM
X  EQUAL  vec DOT fit_transform( PARERIGHT  DOT toarray( PARERIGHT  EOM
Y  EQUAL  listeOutput EOM
kfold  EQUAL  StratifiedKFold( PARERIGHT  EOM
model1  EQUAL  KerasClassifier( PARERIGHT  EOM
save  EQUAL  joblib DOT dump( PARERIGHT  EOM
save  EQUAL  None EOM
save  EQUAL  joblib DOT dump( PARERIGHT  EOM
if save ! EQUAL  None : EOM
else: EOM
def LSTMPredict( PARERIGHT : EOM
modele  EQUAL  EOM
dictVec  EQUAL  EOM
clf  EQUAL  joblib DOT load( PARERIGHT  EOM
vec  EQUAL  joblib DOT load( PARERIGHT  EOM
trace_collection  EQUAL  babeltrace DOT TraceCollection( PARERIGHT  EOM
trace_handle  EQUAL  trace_collection DOT add_trace( PARERIGHT  EOM
listeMachines  EQUAL  [] EOM
dicTid  EQUAL  {} EOM
dictCPUid  EQUAL  {} EOM
tempsDebut  EQUAL  datetime DOT now( PARERIGHT  DOT time( PARERIGHT  EOM
for event in trace_collection DOT events: EOM
try : EOM
eventpreprocessed  EQUAL  preprocessMoreEventsklearn( PARERIGHT  EOM
if clf DOT predict(vec DOT transform( PARERIGHT  DOT toarray( PARERIGHT  PARERIGHT  ! EQUAL []: EOM
pass EOM
except TypeError: EOM
pass EOM
def benchmarkPredictLSTM( PARERIGHT : EOM
path  EQUAL  EOM
listeDirectory  EQUAL  [] EOM
listeDirectory  EQUAL  [] EOM
tempsDebut  EQUAL  EOM
tempsFin  EQUAL  EOM
for directory in listeDirectory: EOM
LSTMPredict( PARERIGHT  EOM
tempsFin  EQUAL  datetime DOT now( PARERIGHT  DOT time( PARERIGHT  EOM
def main( PARERIGHT : EOM
benchmarkPredictLSTM( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
main( PARERIGHT  EOM
import keras EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import LSTM COMMA  SimpleDeepRNN EOM
def simpleLSTM( PARERIGHT  : EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def LSTM512( PARERIGHT  : EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def simpleRNN( PARERIGHT  : EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(SimpleDeepRNN( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def RNN512( PARERIGHT  : EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(SimpleDeepRNN( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def GRU512( PARERIGHT  : EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT recurrent DOT GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
Models  EQUAL  {:simpleRNN COMMA  :simpleLSTM COMMA  :LSTM512 COMMA  :RNN512 COMMA  :GRU512} EOM
AllModels  EQUAL  Models DOT keys( PARERIGHT  EOM
def getModel( PARERIGHT  : EOM
return Models[]( PARERIGHT  EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout EOM
from keras DOT layers import LSTM COMMA  Merge COMMA  Dense EOM
from keras DOT layers DOT merge import Concatenate COMMA  Add COMMA  add EOM
def VQA_MODEL( PARERIGHT : EOM
word_feature_size  EQUAL  300 EOM
number_of_hidden_units_LSTM  EQUAL  512 EOM
max_length_questions  EQUAL  30 EOM
number_of_dense_layers  EQUAL  3 EOM
number_of_hidden_units  EQUAL  1024 EOM
activation_function  EQUAL  EOM
dropout_pct  EQUAL  0 DOT 5 EOM
model_image  EQUAL  Sequential( PARERIGHT  EOM
model_image DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language  EQUAL  Sequential( PARERIGHT  EOM
model_language DOT add(LSTM(number_of_hidden_units_LSTM COMMA  return_sequences EQUAL  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
import numpy as np EOM
from __future__ import print_function EOM
from sklearn DOT cross_validation import train_test_split EOM
import pandas as pd EOM
import numpy as np EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import np_utils EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Embedding EOM
from keras DOT layers import LSTM COMMA  SimpleRNN COMMA  GRU EOM
from keras DOT datasets import imdb EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from sklearn DOT metrics import ( PARERIGHT  EOM
from sklearn import metrics EOM
from sklearn DOT preprocessing import Normalizer EOM
import h5py EOM
from keras import callbacks EOM
from keras DOT callbacks import ModelCheckpoint COMMA  EarlyStopping COMMA  ReduceLROnPlateau COMMA  CSVLogger EOM
traindata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
testdata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
X  EQUAL  traindata DOT iloc[] EOM
Y  EQUAL  traindata DOT iloc[] EOM
C  EQUAL  testdata DOT iloc[] EOM
T  EQUAL  testdata DOT iloc[] EOM
scaler  EQUAL  Normalizer( PARERIGHT  DOT fit( PARERIGHT  EOM
trainX  EQUAL  scaler DOT transform( PARERIGHT  EOM
np DOT set_printoptions( PARERIGHT  EOM
scaler  EQUAL  Normalizer( PARERIGHT  DOT fit( PARERIGHT  EOM
testT  EQUAL  scaler DOT transform( PARERIGHT  EOM
np DOT set_printoptions( PARERIGHT  EOM
y_train  EQUAL  np DOT array( PARERIGHT  EOM
y_test  EQUAL  np DOT array( PARERIGHT  EOM
X_train  EQUAL  np DOT reshape(trainX COMMA  ( PARERIGHT  PARERIGHT  EOM
X_test  EQUAL  np DOT reshape(testT COMMA  ( PARERIGHT  PARERIGHT  EOM
batch_size  EQUAL  16 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
checkpointer  EQUAL  callbacks DOT ModelCheckpoint( PARERIGHT  EOM
csv_logger  EQUAL  CSVLogger( PARERIGHT  EOM
model DOT fit(X_train COMMA  y_train COMMA  batch_size EQUAL  COMMA  nb_epoch EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  COMMA callbacks EQUAL [] PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout COMMA  Highway EOM
from keras DOT layers import LSTM COMMA  Merge COMMA  Dense COMMA  Embedding EOM
def model( PARERIGHT : EOM
model_image  EQUAL  Sequential( PARERIGHT  EOM
model_image DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_image DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_image DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_image DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_language  EQUAL  Sequential( PARERIGHT  EOM
model_language DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM(args DOT num_hidden_units_lstm COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_language DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_language DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_language DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
for i in xrange( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return modelimport numpy EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Conv1D COMMA  MaxPooling1D EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
import wandb EOM
from wandb DOT wandb_keras import WandbKerasCallback EOM
run  EQUAL  wandb DOT init( PARERIGHT  EOM
config  EQUAL  run DOT config EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
max_review_length  EQUAL  500 EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(X_train COMMA  y_train COMMA  epochs EQUAL  COMMA  batch_size EQUAL  COMMA callbacks EQUAL [] COMMA alidation_data EQUAL ( PARERIGHT  EOM
import pytest EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras DOT layers import Conv2D EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT import pandas as pd EOM
import numpy as np EOM
def preprocess_DATA( PARERIGHT : EOM
features  EQUAL  dataset DOT shape[] EOM
dataset_train  EQUAL  dataset DOT iloc[] EOM
dataset_test  EQUAL  dataset DOT iloc[]] EOM
training_set  EQUAL  dataset_train DOT iloc[] DOT values EOM
training_set_label  EQUAL  dataset_train DOT iloc[] DOT values EOM
from sklearn DOT preprocessing import MinMaxScaler EOM
scaler_features  EQUAL  MinMaxScaler(feature_range  EQUAL ( PARERIGHT  PARERIGHT  EOM
scaler_label  EQUAL  MinMaxScaler(feature_range  EQUAL ( PARERIGHT  PARERIGHT  EOM
training_set_scaled  EQUAL  scaler_features DOT fit_transform( PARERIGHT  EOM
training_set_scaled_label  EQUAL  scaler_label DOT fit_transform( PARERIGHT  EOM
X_train  EQUAL  [] EOM
y_train  EQUAL  [] EOM
for i in range( PARERIGHT : EOM
X_train DOT append( PARERIGHT  EOM
for i in range( PARERIGHT : EOM
y_train DOT append( PARERIGHT  EOM
X_train COMMA  y_train  EQUAL  np DOT array( PARERIGHT  COMMA  np DOT array( PARERIGHT  EOM
X_train  EQUAL  np DOT reshape(X_train COMMA  ( PARERIGHT  PARERIGHT  EOM
ground_truth  EQUAL  dataset_test DOT iloc[] DOT values EOM
dataset_total  EQUAL  pd DOT concat(( PARERIGHT  COMMA  axis  EQUAL  PARERIGHT  EOM
dataset_total  EQUAL  dataset_total DOT iloc[] EOM
inputs  EQUAL  dataset_total[] DOT values EOM
inputs  EQUAL  inputs DOT reshape( PARERIGHT  EOM
inputs  EQUAL  scaler_features DOT transform( PARERIGHT  EOM
return X_train COMMA  y_train COMMA  inputs COMMA  ground_truth COMMA  scaler_features COMMA  scaler_label EOM
def build_LSTM( PARERIGHT : EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dropout EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(units  EQUAL [] COMMA  return_sequences  EQUAL  COMMA  input_shape  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def build_GRU( PARERIGHT : EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import GRU EOM
from keras DOT layers import Dropout EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(GRU(units  EQUAL [] COMMA  return_sequences  EQUAL  COMMA  input_shape  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def predict_MODEL( PARERIGHT : EOM
from math import sqrt EOM
from sklearn DOT metrics import mean_squared_error EOM
X_test  EQUAL  [] EOM
for i in range(timestep COMMA  int(len( PARERIGHT  PARERIGHT -Output PARERIGHT : EOM
X_test DOT append( PARERIGHT  EOM
X_test  EQUAL  np DOT array( PARERIGHT  EOM
X_test  EQUAL  np DOT reshape(X_test COMMA  ( PARERIGHT  PARERIGHT  EOM
Predicted  EQUAL  model DOT predict( PARERIGHT  EOM
True_Output  EQUAL  inputs[] EOM
RMSE  EQUAL  sqrt(mean_squared_error( PARERIGHT  PARERIGHT  EOM
Predicted  EQUAL  scaler_label DOT inverse_transform( PARERIGHT  EOM
True_Output  EQUAL  scaler_label DOT inverse_transform( PARERIGHT  EOM
return Predicted COMMA  True_Output COMMA  RMSE EOM
from keras DOT models import Sequential EOM
from keras DOT models import Model EOM
from keras DOT layers import Input EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import Bidirectional EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import Conv1D EOM
from keras DOT layers import MaxPooling1D EOM
from keras DOT layers import UpSampling1D EOM
from keras DOT layers import Concatenate EOM
from keras DOT optimizers import Adam EOM
def simple_LSTM( PARERIGHT : EOM
np DOT random DOT seed( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(512 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(len( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA  optimizer EQUAL ( PARERIGHT  COMMA  metrics EQUAL [] PARERIGHT  EOM
return model EOM
def bidirectional_LSTM( PARERIGHT : EOM
np DOT random DOT seed( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(len( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA  optimizer EQUAL ( PARERIGHT  COMMA  metrics EQUAL [] PARERIGHT  EOM
return model EOM
def conv_LSTM( PARERIGHT : EOM
np DOT random DOT seed( PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D(128 COMMA 4 COMMA padding EQUAL  COMMA activation EQUAL  COMMA strides EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(len( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def conv_LSTM( PARERIGHT : EOM
np DOT random DOT seed( PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D(128 COMMA 4 COMMA padding EQUAL  COMMA activation EQUAL  COMMA strides EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(len( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def conv_LSTM2( PARERIGHT : EOM
np DOT random DOT seed( PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D(16 COMMA 3 COMMA padding EQUAL  COMMA activation EQUAL  COMMA strides EQUAL  COMMA kernel_initializer EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(len( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def UNet_LSTM( PARERIGHT : EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
inputs  EQUAL  Input(( PARERIGHT  PARERIGHT  EOM
conv1  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
conv2  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
conv3  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
conv4  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
conv7  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
conv8  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
drop1  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
up2  EQUAL  Conv1D( PARERIGHT (UpSampling1D( PARERIGHT ( PARERIGHT  PARERIGHT  EOM
concat2  EQUAL  Concatenate( PARERIGHT ( PARERIGHT  EOM
conv11  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
conv12  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
up3  EQUAL  Conv1D( PARERIGHT (UpSampling1D( PARERIGHT ( PARERIGHT  PARERIGHT  EOM
concat3  EQUAL  Concatenate( PARERIGHT ( PARERIGHT  EOM
conv13  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
conv14  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
lstm1  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
lstm2  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
flat1  EQUAL  Flatten( PARERIGHT ( PARERIGHT  EOM
dense1  EQUAL  Dense(len( PARERIGHT  COMMA  activation EQUAL  PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
if __name__  EQUAL  EQUAL  : EOM
activities  EQUAL  list(range( PARERIGHT  PARERIGHT  EOM
model  EQUAL  UNet_LSTM( PARERIGHT from keras DOT models import Sequential EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT layers import TimeDistributed COMMA  Dense COMMA  Dropout COMMA Activation EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT optimizers import RMSprop COMMA  Adam EOM
import numpy as np EOM
def one_layer_lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
layers  EQUAL  {: inp COMMA  : hidden COMMA  : outp} EOM
layers  EQUAL  {: 16 COMMA  : 64 COMMA  : 1} EOM
model DOT add(LSTM(1 COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(layers[] COMMA nput_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
layers  EQUAL  {: 48 COMMA  : 64 COMMA   : 128 COMMA  : 1} EOM
model DOT add(LSTM(layers[] COMMA nput_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model  from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT utils DOT data_utils import get_file EOM
from keras DOT callbacks import EarlyStopping EOM
def create_lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelimport os EOM
global_model_version  EQUAL  61 EOM
global_batch_size  EQUAL  128 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  keras DOT optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import os EOM
global_model_version  EQUAL  36 EOM
global_batch_size  EQUAL  32 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_2  EQUAL  Sequential( PARERIGHT  EOM
branch_2 DOT add( PARERIGHT  EOM
branch_2 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Dense( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dense( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dense( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dense( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_6  EQUAL  Sequential( PARERIGHT  EOM
branch_6 DOT add( PARERIGHT  EOM
branch_6 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Dense( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dense( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT optimizers import RMSprop EOM
def build( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(layers[] COMMA nput_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
from keras DOT callbacks import TensorBoard COMMA  EarlyStopping COMMA  ReduceLROnPlateau EOM
def run_network( PARERIGHT : EOM
model  EQUAL  build( PARERIGHT  EOM
history  EQUAL  None EOM
try: EOM
history  EQUAL  model DOT fit(train COMMA  y_train COMMA  atch_size EQUAL  COMMA  pochs EQUAL  COMMA  validation_split EQUAL  COMMA callbacks EQUAL [] PARERIGHT  EOM
except KeyboardInterrupt: EOM
predicted  EQUAL  model DOT predict( PARERIGHT  EOM
return model COMMA  predicted COMMA  historyfrom keras DOT utils import np_utils EOM
from keras DOT models import Sequential COMMA  load_model EOM
import keras DOT layers DOT recurrent EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers DOT convolutional import Convolution1D COMMA  MaxPooling1D COMMA  Conv2D COMMA  MaxPooling2D EOM
def LSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
for ind COMMA  c in enumerate( PARERIGHT : EOM
ret_seq  EQUAL  not (ind  EQUAL ( PARERIGHT -1 PARERIGHT  EOM
if ind  EQUAL  EQUAL  0: EOM
model DOT add(keras DOT layers DOT recurrent DOT LSTM( PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras DOT layers DOT recurrent DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def Conv1D_2_class( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
filter_length_1  EQUAL  50 EOM
filter_length_2  EQUAL  25 EOM
if nb_classes ! EQUAL 2: EOM
raise Exception( PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def cifar10_net( PARERIGHT : EOM
activ  EQUAL  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(32 COMMA  ( PARERIGHT  COMMA  padding EQUAL  COMMA input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(32 COMMA  ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(64 COMMA  ( PARERIGHT  COMMA  padding EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(64 COMMA  ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  keras DOT optimizers DOT rmsprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import Activation EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT layers import Conv1D COMMA  MaxPooling1D COMMA  Flatten EOM
from keras import metrics EOM
def create_cnn_model( PARERIGHT : EOM
input_shape  EQUAL  ( PARERIGHT  EOM
output  EQUAL  y DOT shape[] EOM
regressor  EQUAL  Sequential( PARERIGHT  EOM
regressor DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
if dropout > 0: EOM
regressor DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
regressor DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
if dropout > 0: EOM
regressor DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
regressor DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
regressor DOT add(Dense( PARERIGHT  PARERIGHT  EOM
activation  EQUAL  EOM
regressor DOT add(Activation( PARERIGHT  PARERIGHT  EOM
regressor DOT compile( PARERIGHT  EOM
return regressor EOM
def create_stateless_lstm_model( PARERIGHT : EOM
stateful  EQUAL  False EOM
input_shape  EQUAL  ( PARERIGHT  EOM
output  EQUAL  y DOT shape[] EOM
regressor  EQUAL  Sequential( PARERIGHT  EOM
return_sequences  EQUAL  False if layers  EQUAL  EQUAL  1 else True EOM
regressor DOT add( PARERIGHT  PARERIGHT dropout > 0:regressor DOT add(Dropout( PARERIGHT  PARERIGHT n range( PARERIGHT :t( DOT format( PARERIGHT  PARERIGHT equences  EQUAL ( EOM
LSTM( PARERIGHT  PARERIGHT dropout > 0:regressor DOT add(Dropout( PARERIGHT  PARERIGHT regressor DOT add(Dense( PARERIGHT  PARERIGHT tivation  EQUAL (Activation( PARERIGHT  PARERIGHT regressor DOT compile( PARERIGHT  PARERIGHT dropout > 0:regressor DOT add(Dropout( PARERIGHT  PARERIGHT n range( PARERIGHT :t( DOT format( PARERIGHT  PARERIGHT regressor DOT add(LSTM(units EQUAL  COMMA  EOM
return_sequences EQUAL return_sequences COMMA  EOM
import pandas as pd EOM
import numpy as np EOM
import nltk EOM
from nltk DOT corpus import stopwords EOM
from nltk DOT stem import SnowballStemmer EOM
import re EOM
from sklearn DOT metrics import accuracy_score EOM
import datetime COMMA  time COMMA  json EOM
from string import punctuation EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Embedding COMMA  Dense COMMA  Dropout COMMA  Reshape COMMA  Merge COMMA  BatchNormalization COMMA  TimeDistributed COMMA  Lambda COMMA  Activation COMMA  LSTM COMMA  Flatten COMMA  Convolution1D COMMA  GRU COMMA  MaxPooling1D EOM
from keras DOT regularizers import l2 EOM
from keras DOT callbacks import Callback COMMA  ModelCheckpoint COMMA  EarlyStopping EOM
from keras import initializers EOM
from keras import backend as K EOM
from keras DOT optimizers import SGD EOM
from keras DOT optimizers import Adadelta EOM
from collections import defaultdict EOM
from keras DOT utils import np_utils EOM
from keras DOT layers DOT advanced_activations import PReLU EOM
import codecs EOM
import random EOM
corpus  EQUAL  pd DOT read_csv( PARERIGHT  EOM
np DOT random DOT seed( PARERIGHT  EOM
corpus  EQUAL  corpus DOT reindex(np DOT random DOT permutation( PARERIGHT  PARERIGHT  EOM
def process_blog( PARERIGHT : EOM
random DOT shuffle( PARERIGHT  EOM
corpus_post COMMA  y_train  EQUAL  zip( PARERIGHT  EOM
c EQUAL [] EOM
import tensorflow as tf EOM
import os EOM
os DOT environ[]  EQUAL  EOM
Sequential  EQUAL  tf DOT keras DOT models DOT Sequential EOM
Dense  EQUAL  tf DOT keras DOT layers DOT Dense EOM
Dropout  EQUAL  tf DOT keras DOT layers DOT Dropout EOM
LSTM  EQUAL  tf DOT keras DOT layers DOT LSTM EOM
mnist  EQUAL tf DOT keras DOT datasets DOT mnist EOM
( PARERIGHT  COMMA ( PARERIGHT   EQUAL ( PARERIGHT  EOM
x_test  EQUAL  x_test/255 EOM
x_train  EQUAL  x_train/255 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(128 COMMA input_shape EQUAL ( PARERIGHT  COMMA activation EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  tf DOT keras DOT optimizers DOT Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(x_train COMMA y_train COMMA epochs EQUAL  COMMA validation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT save( PARERIGHT import logging EOM
from rasa_core DOT policies DOT keras_policy import KerasPolicy EOM
logger  EQUAL  logging DOT getLogger( PARERIGHT  EOM
class BotPolicy( PARERIGHT : EOM
def model_architecture( PARERIGHT : EOM
from keras DOT layers import LSTM COMMA  Activation COMMA  Masking COMMA  Dense EOM
from keras DOT models import Sequential EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Masking COMMA  LSTM COMMA  Dense COMMA  TimeDistributed COMMA  Activation EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if len( PARERIGHT   EQUAL             model DOT add(Masking( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             model DOT add(Masking(mask_value EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
raise ValueError(th of output_shape  EQUAL (len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
logger DOT debug(model DOT summary( PARERIGHT  PARERIGHT  EOM
return modelfrom sentifmdetect import featurizer EOM
from sentifmdetect import util EOM
import os EOM
import keras EOM
from keras DOT optimizers import Adam EOM
from keras import backend EOM
from keras DOT layers import Dense COMMA  Input COMMA  Flatten COMMA  Dropout COMMA  Merge COMMA  BatchNormalization EOM
from keras DOT layers import Conv1D COMMA  MaxPooling1D COMMA  Embedding COMMA  LSTM COMMA  Bidirectional EOM
from keras DOT models import Model COMMA  Sequential EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
from sklearn DOT model_selection import train_test_split COMMA  RandomizedSearchCV EOM
from sklearn DOT metrics import precision_recall_fscore_support COMMA  classification_report COMMA  f1_score COMMA  precision_score COMMA \ EOM
recall_score COMMA  roc_auc_score EOM
import numpy as np EOM
def create_emb_lstm(bidirectional EQUAL  COMMA lstm_units EQUAL  COMMA lstm_dropout EQUAL  COMMA lstm_recurrent_dropout EQUAL  COMMA ptimizer EQUAL ( PARERIGHT  COMMA metrics EQUAL [] PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
embeddings_index  EQUAL  featurizer DOT load_emb( PARERIGHT  EOM
EMBEDDINGS_MATRIX  EQUAL  featurizer DOT make_embedding_matrix( PARERIGHT  EOM
EMB_DIM  EQUAL  EMBEDDINGS_MATRIX DOT shape[] EOM
model DOT add(edding( PARERIGHT  PARERIGHT  EOM
elif isinstance( PARERIGHT : EOM
EMB_DIM  EQUAL  wvec EOM
model DOT add(bedding( PARERIGHT  PARERIGHT  EOM
else: EOM
logging DOT error( PARERIGHT  EOM
if bidirectional: EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA  optimizer EQUAL []( PARERIGHT  COMMA  metrics EQUAL  PARERIGHT  EOM
return model EOM
class KerasClassifierCustom( PARERIGHT : EOM
return self DOT model DOT predict( PARERIGHT  EOM
class GlobalMetrics( PARERIGHT : EOM
self DOT from_categorical  EQUAL  True EOM
if isinstance( PARERIGHT : EOM
self DOT global_metrics  EQUAL  metrics EOM
else: EOM
raise TypeError( PARERIGHT  EOM
self DOT global_scores  EQUAL  {} EOM
def on_epoch_end( PARERIGHT : EOM
predict  EQUAL  np DOT asarray(self DOT model DOT predict( PARERIGHT  PARERIGHT  EOM
targ  EQUAL  self DOT validation_data[] EOM
if self DOT from_categorical: EOM
predict  EQUAL  predict DOT argmax( PARERIGHT  EOM
targ  EQUAL  targ DOT argmax( PARERIGHT  EOM
for metric COMMA  kwargs in self DOT global_metrics: EOM
self DOT global_scores[]  EQUAL  metric( PARERIGHT  EOM
return EOM
class KerasRandomizedSearchCV( PARERIGHT : EOM
pred  EQUAL  super( PARERIGHT  DOT predict( PARERIGHT  EOM
backend DOT clear_session( PARERIGHT  EOM
return pred EOM
if __name__  EQUAL  EQUAL  : EOM
from sklearn DOT datasets import make_moons EOM
from sklearn DOT model_selection import RandomizedSearchCV EOM
from keras DOT regularizers import l2 EOM
dataset  EQUAL  make_moons( PARERIGHT  EOM
def build_fn( PARERIGHT : EOM
result_model  EQUAL  Sequential( PARERIGHT  EOM
result_model DOT add(Dense(first_layer_size COMMA input_dim EQUAL  COMMA activation EQUAL  COMMA W_regularizer EQUAL ( PARERIGHT  COMMA activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
current_layer_size  EQUAL  int( PARERIGHT  + 1 EOM
for index_of_layer in range( PARERIGHT : EOM
result_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
result_model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
result_model DOT add(Dense(current_layer_size COMMA W_regularizer EQUAL ( PARERIGHT  COMMA activation EQUAL  COMMA activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
current_layer_size  EQUAL  int( PARERIGHT  + 1 EOM
result_model DOT add(Dense(1 COMMA activation EQUAL  COMMA W_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
result_model DOT compile( PARERIGHT  EOM
return result_model EOM
NeuralNet  EQUAL  KerasClassifier( PARERIGHT import numpy EOM
import pandas EOM
from sklearn import preprocessing EOM
from sklearn import cross_validation EOM
from matplotlib import pyplot EOM
import pandas as pd EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dense COMMA  Dropout EOM
from sklearn DOT preprocessing import MinMaxScaler EOM
from keras import callbacks EOM
from keras DOT callbacks import CSVLogger EOM
from keras DOT callbacks import ModelCheckpoint COMMA  EarlyStopping COMMA  ReduceLROnPlateau COMMA  CSVLogger EOM
from keras DOT layers DOT recurrent import LSTM EOM
numpy DOT random DOT seed( PARERIGHT  EOM
traindata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
scaler  EQUAL  MinMaxScaler(feature_range EQUAL ( PARERIGHT  PARERIGHT  EOM
train  EQUAL  scaler DOT fit_transform( PARERIGHT  EOM
train  EQUAL  np DOT reshape(train COMMA  ( PARERIGHT  PARERIGHT  EOM
trainlabel  EQUAL  pandas DOT read_csv( PARERIGHT  EOM
scaler  EQUAL  MinMaxScaler(feature_range EQUAL ( PARERIGHT  PARERIGHT  EOM
train_label  EQUAL  scaler DOT fit_transform( PARERIGHT  EOM
train  EQUAL  np DOT array( PARERIGHT  EOM
train_label  EQUAL  np DOT array( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
checkpointer  EQUAL  callbacks DOT ModelCheckpoint( PARERIGHT  EOM
csv_logger  EQUAL  CSVLogger( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
import time EOM
from keras DOT layers DOT core import Dense EOM
from keras DOT layers DOT core import Dropout COMMA  Activation EOM
from keras DOT layers DOT recurrent import LSTM COMMA  SimpleRNN EOM
from keras DOT models import Sequential EOM
def build_model_mlp( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(output_dim EQUAL  COMMA input_shape EQUAL ( PARERIGHT  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
start  EQUAL  time DOT time( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def build_model_recurrent( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(SimpleRNN(output_dim EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
start  EQUAL  time DOT time( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def build_model_lstm_simple( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(output_dim EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
start  EQUAL  time DOT time( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def build_model_lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(output_dim EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
start  EQUAL  time DOT time( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
import numpy as np EOM
from tensorflow DOT python import keras EOM
from tensorflow DOT python DOT framework import test_util as tf_test_util EOM
from tensorflow DOT python DOT keras import testing_utils EOM
from tensorflow DOT python DOT platform import test EOM
from tensorflow DOT python DOT training import adam EOM
from tensorflow DOT python DOT training import gradient_descent EOM
from tensorflow DOT python DOT training DOT rmsprop import RMSPropOptimizer EOM
class LSTMLayerTest( PARERIGHT : EOM
def test_return_sequences_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA return_sequences EOM
def test_static_shape_inference_LSTM( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
inputs  EQUAL  keras DOT layers DOT Dense(embedding_dim COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
outputs  EQUAL  model DOT layers[] DOT output EOM
self DOT assertEquals(outputs DOT get_shape( PARERIGHT  DOT as_list( PARERIGHT  COMMA  [] PARERIGHT  EOM
def test_dynamic_behavior_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
layer  EQUAL  keras DOT layers DOT LSTM(units COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile(RMSPropOptimizer( PARERIGHT  COMMA   PARERIGHT  EOM
x  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_dropout_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA dropout: 0 DOT 1} COMMA put_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
def test_implementation_mode_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
for mode in []: EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA implementation EOM
def test_constraints_LSTM( PARERIGHT : EOM
embedding_dim  EQUAL  4 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
k_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
r_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
b_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
layer  EQUAL  layer_class(5 COMMA return_sequences EQUAL  COMMA weights EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA kernel_constraint EQUAL  COMMA recurrent_constraint EQUAL  COMMA bias_constraint EQUAL  PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
def test_with_masking_layer_LSTM( PARERIGHT : EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT abs(np DOT random DOT random(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
targets / EQUAL  targets DOT sum( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Masking(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(layer_class( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
def test_masking_with_stacking_LSTM( PARERIGHT : EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT abs(np DOT random DOT random(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
targets / EQUAL  targets DOT sum( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Masking(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
lstm_cells  EQUAL  [] EOM
model DOT add(keras DOT layers DOT RNN( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
def test_from_config_LSTM( PARERIGHT : EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
for stateful in ( PARERIGHT : EOM
l1  EQUAL  layer_class( PARERIGHT  EOM
l2  EQUAL  layer_class DOT from_config(l1 DOT get_config( PARERIGHT  PARERIGHT  EOM
assert l1 DOT get_config( PARERIGHT   EQUAL ( PARERIGHT  EOM
def test_specify_initial_state_keras_tensor( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
if len( PARERIGHT   EQUAL       output  EQUAL  layer( PARERIGHT  EOM
else: EOM
output  EQUAL  layer( PARERIGHT  EOM
assert initial_state[] in layer DOT _inbound_nodes[] DOT input_tensors EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_specify_initial_state_non_keras_tensor( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [keras DOT backend DOT random_normal_variable( PARERIGHT  COMMA  0 COMMA  1 PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
output  EQUAL  layer( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_reset_states_with_values( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
assert len( PARERIGHT   EQUAL     assert layer DOT states[] is not None EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA np DOT zeros(keras DOT backend DOT int_shape( PARERIGHT  PARERIGHT  COMMA atol EQUAL  PARERIGHT  EOM
state_shapes  EQUAL  [] EOM
values  EQUAL  [] EOM
if len( PARERIGHT   EQUAL       values  EQUAL  values[] EOM
layer DOT reset_states( PARERIGHT  EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA np DOT ones(keras DOT backend DOT int_shape( PARERIGHT  PARERIGHT  COMMA atol EQUAL  PARERIGHT  EOM
with self DOT assertRaises( PARERIGHT : EOM
layer DOT reset_states([] * (len( PARERIGHT  + 1 PARERIGHT  PARERIGHT  EOM
def test_specify_state_with_masking( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
_  EQUAL  keras DOT layers DOT Masking( PARERIGHT ( PARERIGHT  EOM
initial_state  EQUAL  [] EOM
output  EQUAL  keras DOT layers DOT LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_return_state( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(batch_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
outputs  EQUAL  layer( PARERIGHT  EOM
state  EQUAL  outputs[] EOM
assert len( PARERIGHT   EQUAL     model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
state  EQUAL  model DOT predict( PARERIGHT  EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA  state COMMA  atol EQUAL  PARERIGHT  EOM
def test_state_reuse( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(batch_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
outputs  EQUAL  layer( PARERIGHT  EOM
output COMMA  state  EQUAL  outputs[] COMMA  outputs[] EOM
output  EQUAL  keras DOT layers DOT LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
outputs  EQUAL  model DOT predict( PARERIGHT  EOM
def test_initial_states_as_other_inputs( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
num_states  EQUAL  2 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
main_inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
inputs  EQUAL  [] + initial_state EOM
layer  EQUAL  layer_class( PARERIGHT  EOM
output  EQUAL  layer( PARERIGHT  EOM
assert initial_state[] in layer DOT _inbound_nodes[] DOT input_tensors EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
main_inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
class LSTMLayerGraphOnlyTest( PARERIGHT : EOM
def test_statefulness_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
with self DOT cached_session( PARERIGHT : EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Embedding(4 COMMA embedding_dim COMMA mask_zero EQUAL  COMMA input_length EQUAL  COMMA atch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
layer  EQUAL  layer_class( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile(optimizer EQUAL ( PARERIGHT  COMMA loss EQUAL  PARERIGHT  EOM
out1  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertEqual(out1 DOT shape COMMA  ( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch(ones(( PARERIGHT  PARERIGHT  COMMA  np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
out2  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out1 DOT max( PARERIGHT  COMMA  out2 DOT max( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
out3  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out2 DOT max( PARERIGHT  COMMA  out3 DOT max( PARERIGHT  PARERIGHT  EOM
model DOT reset_states( PARERIGHT  EOM
out4  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertAllClose( PARERIGHT  EOM
out5  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out4 DOT max( PARERIGHT  COMMA  out5 DOT max( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
left_padded_input  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
left_padded_input[]  EQUAL  0 EOM
left_padded_input[]  EQUAL  0 EOM
out6  EQUAL  model DOT predict( PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
right_padded_input  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
right_padded_input[]  EQUAL  0 EOM
right_padded_input[]  EQUAL  0 EOM
out7  EQUAL  model DOT predict( PARERIGHT  EOM
self DOT assertAllClose( PARERIGHT  EOM
def test_regularizers_LSTM( PARERIGHT : EOM
embedding_dim  EQUAL  4 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
with self DOT cached_session( PARERIGHT : EOM
layer  EQUAL  layer_class(5 COMMA return_sequences EQUAL  COMMA weights EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA recurrent_regularizer EQUAL ( PARERIGHT  COMMA bias_regularizer EQUAL  COMMA activity_regularizer EQUAL  PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
self DOT assertEqual(len( PARERIGHT  COMMA  3 PARERIGHT  EOM
x  EQUAL  keras DOT backend DOT variable(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
layer( PARERIGHT  EOM
self DOT assertEqual(len(layer DOT get_losses_for( PARERIGHT  PARERIGHT  COMMA  1 PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
test DOT main( PARERIGHT import pandas as pd EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Activation COMMA  Dense COMMA  Embedding COMMA  SimpleRNN COMMA  LSTM EOM
from keras import backend as K EOM
from keras_tqdm import TQDMNotebookCallback EOM
from keras DOT callbacks import ReduceLROnPlateau COMMA  EarlyStopping COMMA  ModelCheckpoint EOM
from keras DOT callbacks import TensorBoard EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
imdb_df  EQUAL  pd DOT read_csv( PARERIGHT  EOM
pd DOT set_option( PARERIGHT  EOM
num_words  EQUAL  10000 EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts( PARERIGHT  EOM
sequences  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
y  EQUAL  np DOT array( PARERIGHT  EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
max_review_length  EQUAL  552 EOM
pad  EQUAL  EOM
X  EQUAL  pad_sequences( PARERIGHT  EOM
from sklearn DOT model_selection import train_test_split EOM
X_train COMMA  X_test COMMA  y_train COMMA  y_test  EQUAL  train_test_split( PARERIGHT  EOM
input_shape  EQUAL  X_train DOT shape EOM
K DOT clear_session( PARERIGHT  EOM
modelLSTM_2a  EQUAL  Sequential( PARERIGHT  EOM
modelLSTM_2a DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
modelLSTM_2a DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
modelLSTM_2a DOT add(Dense( PARERIGHT  PARERIGHT  EOM
modelLSTM_2a DOT add(Activation( PARERIGHT  PARERIGHT  EOM
modelLSTM_2a DOT summary( PARERIGHT  EOM
modelLSTM_2a DOT compile( PARERIGHT  EOM
LSTM_history  EQUAL  modelLSTM_2a DOT fit(X_train COMMA y_train COMMA epochs EQUAL  COMMA batch_size EQUAL  COMMA validation_split EQUAL from keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Dense COMMA  Activation EOM
from keras DOT layers import TimeDistributed COMMA  GaussianNoise COMMA  GaussianDropout COMMA  Dropout EOM
from keras DOT models import Model EOM
def build_model_without_TS( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(n_neuron COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def build_model_with_TS( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(n_neuron COMMA  return_sequences EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
return model EOM
from __future__ import print_function EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout EOM
from keras DOT layers import LSTM EOM
from keras import regularizers EOM
def mlp_softmax( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm_stack( PARERIGHT : EOM
model DOT add(LSTM(32 COMMA  return_sequences EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(32 COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT layers import Embedding COMMA  LSTM COMMA  TimeDistributed COMMA  Dense COMMA  Dropout EOM
from keras DOT layers DOT wrappers import Bidirectional EOM
from keras DOT optimizers import Adam EOM
from Tokenizer import constant EOM
class Model( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT  EOM
model DOT add(Bidirectional( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT  EOM
model DOT add(Bidirectional( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT  EOM
model DOT add(Bidirectional( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT model  EQUAL  modelimport pandas as pd EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Activation COMMA  Dense COMMA  Embedding COMMA  SimpleRNN COMMA  LSTM COMMA  Dropout EOM
from keras import backend as K EOM
from keras DOT callbacks import ReduceLROnPlateau COMMA  EarlyStopping COMMA  ModelCheckpoint EOM
from keras DOT callbacks import TensorBoard EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
imdb_df  EQUAL  pd DOT read_csv( PARERIGHT  EOM
pd DOT set_option( PARERIGHT  EOM
num_words  EQUAL  10000 EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts( PARERIGHT  EOM
sequences  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
y  EQUAL  np DOT array( PARERIGHT  EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
max_review_length  EQUAL  552 EOM
pad  EQUAL  EOM
X  EQUAL  pad_sequences( PARERIGHT  EOM
from sklearn DOT model_selection import train_test_split EOM
X_train COMMA  X_test COMMA  y_train COMMA  y_test  EQUAL  train_test_split( PARERIGHT  EOM
input_shape  EQUAL  X_train DOT shape EOM
K DOT clear_session( PARERIGHT  EOM
LSTM_model  EQUAL  Sequential( PARERIGHT  EOM
LSTM_model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT summary( PARERIGHT  EOM
LSTM_model DOT compile( PARERIGHT  EOM
LSTM_history  EQUAL  LSTM_model DOT fit(X_train COMMA y_train COMMA epochs EQUAL  COMMA batch_size EQUAL  COMMA validation_split EQUAL import pytest EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras DOT layers import Conv2D EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT from __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
from __future__ import unicode_literals EOM
import logging EOM
from rasa_core DOT policies DOT keras_policy import KerasPolicy EOM
logger  EQUAL  logging DOT getLogger( PARERIGHT  EOM
class RestaurantPolicy( PARERIGHT : EOM
def model_architecture( PARERIGHT : EOM
from keras DOT layers import LSTM COMMA  Activation COMMA  Masking COMMA  Dense EOM
from keras DOT models import Sequential EOM
from keras DOT models import Sequential EOM
from keras DOT layers import \ EOM
Masking COMMA  LSTM COMMA  Dense COMMA  TimeDistributed COMMA  Activation EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if len( PARERIGHT   EQUAL             model DOT add(Masking( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             model DOT add(Masking(mask_value EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
raise ValueError(th of output_shape  EQUAL (len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
logger DOT debug(model DOT summary( PARERIGHT  PARERIGHT  EOM
return modelfrom random import random EOM
from numpy import array EOM
from numpy import cumsum EOM
from matplotlib import pyplot EOM
from pandas import DataFrame EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dense EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT layers import Bidirectional EOM
def get_sequence( PARERIGHT : EOM
X  EQUAL  array([] PARERIGHT  EOM
limit  EQUAL  n_timesteps / 4 DOT 0 EOM
y  EQUAL  array([] PARERIGHT  EOM
X  EQUAL  X DOT reshape( PARERIGHT  EOM
y  EQUAL  y DOT reshape( PARERIGHT  EOM
return X COMMA  y EOM
def get_lstm_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(20 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  COMMA  go_backwards EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def get_bi_lstm_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  merge_mode EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def train_model( PARERIGHT : EOM
loss  EQUAL  list( PARERIGHT  EOM
for _ in range( PARERIGHT : EOM
X COMMA  y  EQUAL  get_sequence( PARERIGHT  EOM
hist  EQUAL  model DOT fit( PARERIGHT  EOM
loss DOT append( PARERIGHT  EOM
return loss EOM
n_timesteps  EQUAL  10 EOM
results  EQUAL  DataFrame( PARERIGHT  EOM
model  EQUAL  get_lstm_model( PARERIGHT  EOM
results[]  EQUAL  train_model( PARERIGHT  EOM
model  EQUAL  get_lstm_model( PARERIGHT  EOM
results[]  EQUAL  train_model( PARERIGHT  EOM
model  EQUAL  get_bi_lstm_model( PARERIGHT  EOM
results[]  EQUAL  train_model( PARERIGHT  EOM
results DOT plot( PARERIGHT  EOM
pyplot DOT show( PARERIGHT from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers import LSTM EOM
from keras DOT models import Sequential EOM
from keras DOT optimizers import RMSprop EOM
class LSTMRNN( PARERIGHT : EOM
def build( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(512 COMMA 		input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelimport pandas as pd EOM
import tensorflow as tf EOM
import matplotlib DOT pyplot as plt EOM
import keras EOM
import numpy as np EOM
import scikitplot DOT plotters as skplt EOM
from sklearn DOT model_selection import train_test_split EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Embedding COMMA  LSTM EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from keras DOT callbacks import ModelCheckpoint EOM
from keras DOT models import load_model EOM
from keras DOT optimizers import Adam EOM
train  EQUAL  pd DOT read_pickle( PARERIGHT  EOM
test  EQUAL  pd DOT read_pickle( PARERIGHT  EOM
num_words  EQUAL  2000 EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts( PARERIGHT  EOM
X  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
X  EQUAL  pad_sequences( PARERIGHT  EOM
embed_dim  EQUAL  128 EOM
ckpt_callback  EQUAL  ModelCheckpoint( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
Y  EQUAL  pd DOT get_dummies( PARERIGHT  DOT values EOM
X_train COMMA  X_test COMMA  Y_train COMMA  Y_test  EQUAL  train_test_split( PARERIGHT  EOM
batch_size  EQUAL  64 EOM
model DOT fit( PARERIGHT  EOM
model  EQUAL  load_model( PARERIGHT  EOM
probas  EQUAL  model DOT predict( PARERIGHT  EOM
pred_indices  EQUAL  np DOT argmax( PARERIGHT  EOM
classes  EQUAL  np DOT array(range( PARERIGHT  PARERIGHT  EOM
preds  EQUAL  classes[] EOM
skplt DOT plot_confusion_matrix(classes[] COMMA  preds PARERIGHT  EOM
Xtest  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
Xtest  EQUAL  pad_sequences( PARERIGHT  EOM
probas  EQUAL  model DOT predict( PARERIGHT  EOM
submission_df  EQUAL  pd DOT DataFrame(probas COMMA  columns EQUAL [] PARERIGHT  EOM
submission_df[]  EQUAL  df_test[] EOM
submission_df DOT head( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout COMMA  Highway EOM
from keras DOT layers import LSTM COMMA  Merge COMMA  Dense COMMA  Embedding EOM
def model( PARERIGHT : EOM
model_image  EQUAL  Sequential( PARERIGHT  EOM
model_image DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language  EQUAL  Sequential( PARERIGHT  EOM
model_language DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM(args DOT num_hidden_units_lstm COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
for i in xrange( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers import Bidirectional COMMA  LSTM EOM
from keras DOT layers DOT core import Dropout COMMA  Dense EOM
class BidirectionalLSTMNet: EOM
def build_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
class TimeDistributedLSTMNet: EOM
def build_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(TimeDistributed(Dense(64 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers import ConvLSTM2D EOM
class Models( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT n_timesteps  EQUAL  n_timesteps EOM
self DOT n_features  EQUAL  n_features EOM
self DOT n_outputs  EQUAL  n_outputs EOM
self DOT n_steps  EQUAL  n_steps EOM
self DOT n_length  EQUAL  n_length EOM
if model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT lstm( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT cnnlstm( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT convlstm( PARERIGHT  EOM
else: EOM
sys DOT exit( PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
def lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def cnnlstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(TimeDistributed(Conv1D( PARERIGHT  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv1D( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dropout( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling1D( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Flatten( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def convlstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(ConvLSTM2D(filters EQUAL  COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  activation EQUAL  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return modelimport os EOM
global_model_version  EQUAL  38 EOM
global_batch_size  EQUAL  32 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_2  EQUAL  Sequential( PARERIGHT  EOM
branch_2 DOT add( PARERIGHT  EOM
branch_2 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_6  EQUAL  Sequential( PARERIGHT  EOM
branch_6 DOT add( PARERIGHT  EOM
branch_6 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers DOT convolutional import Convolution1D COMMA  MaxPooling1D EOM
from keras DOT layers DOT recurrent import LSTM EOM
from DSTC2 DOT traindev DOT scripts import myLogger EOM
from keras DOT layers DOT pooling import GlobalMaxPooling1D EOM
from keras DOT models import Sequential EOM
from keras DOT preprocessing import sequence EOM
from keras DOT layers import Embedding EOM
from keras DOT datasets import imdb EOM
from keras DOT utils DOT visualize_util import plot EOM
import numpy as np EOM
__author__  EQUAL  EOM
def basic_cnn_LSTM_init( PARERIGHT : EOM
return input_mtr COMMA  output_mtr EOM
def output_shape( PARERIGHT : EOM
y_train  EQUAL  np DOT array(map(lambda session: reduce(lambda sentence1 COMMA  sentence2: np DOT hstack(( PARERIGHT  PARERIGHT  COMMA  session PARERIGHT  COMMA  y_train PARERIGHT  PARERIGHT  EOM
y_test  EQUAL  np DOT array(map(lambda session: reduce(lambda sentence1 COMMA  sentence2: np DOT hstack(( PARERIGHT  PARERIGHT  COMMA  session PARERIGHT  COMMA  y_test PARERIGHT  PARERIGHT  EOM
return y_train COMMA  y_test EOM
def get_mixed( PARERIGHT : EOM
logger  EQUAL  myLogger DOT myLogger( PARERIGHT  EOM
logger DOT info( PARERIGHT  EOM
filter_length  EQUAL  5 EOM
nb_filter  EQUAL  16 EOM
pool_length  EQUAL  4 EOM
lstm_output_size  EQUAL  1024 EOM
layer  EQUAL  3 EOM
hidden_size  EQUAL  1024 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
plot( PARERIGHT  EOM
return model EOM
def sample_mixed( PARERIGHT : EOM
max_features  EQUAL  20000 EOM
maxlen  EQUAL  100 EOM
embedding_size  EQUAL  128 EOM
filter_length  EQUAL  5 EOM
nb_filter  EQUAL  64 EOM
pool_length  EQUAL  4 EOM
lstm_output_size  EQUAL  70 EOM
batch_size  EQUAL  30 EOM
nb_epoch  EQUAL  2 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(X_train COMMA  y_train COMMA  batch_size EQUAL  COMMA  nb_epoch EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
score COMMA  acc  EQUAL  model DOT evaluate( PARERIGHT  EOM
import pickle EOM
from keras DOT callbacks import ModelCheckpoint COMMA  RemoteMonitor EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT models import Sequential EOM
import dataset as ds EOM
from sample_model import SampleModelCallback EOM
batches_per_epoch  EQUAL  1500 EOM
batch_size  EQUAL  256 EOM
samples_per_epoch  EQUAL  batches_per_epoch * batch_size EOM
seq_length  EQUAL  50 EOM
vocab_length  EQUAL  ds DOT vocab_length( PARERIGHT  EOM
generator  EQUAL  ds DOT dataset( PARERIGHT  EOM
def large_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(256 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def small_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(256 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
model  EQUAL  large_model( PARERIGHT  EOM
filename  EQUAL  EOM
if os DOT path DOT isfile( PARERIGHT : EOM
model DOT load_weights( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
filepath  EQUAL  EOM
checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
sample  EQUAL  SampleModelCallback( PARERIGHT  EOM
remote  EQUAL  RemoteMonitor( PARERIGHT  EOM
callbacks_list  EQUAL  [] EOM
history  EQUAL  model DOT fit_generator( PARERIGHT  EOM
import os EOM
global_model_version  EQUAL  39 EOM
global_batch_size  EQUAL  32 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_2  EQUAL  Sequential( PARERIGHT  EOM
branch_2 DOT add( PARERIGHT  EOM
branch_2 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_6  EQUAL  Sequential( PARERIGHT  EOM
branch_6 DOT add( PARERIGHT  EOM
branch_6 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Merge COMMA  Dropout COMMA  Reshape EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT utils DOT visualize_util import plot EOM
num_hidden_units_mlp  EQUAL  1024 EOM
num_hidden_units_lstm  EQUAL  512 EOM
img_dim  EQUAL  900 EOM
word_vec_dim  EQUAL  300 EOM
max_len  EQUAL  100 EOM
nb_classes  EQUAL  1000 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT save( PARERIGHT import os EOM
global_model_version  EQUAL  29 EOM
global_batch_size  EQUAL  32 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3_1  EQUAL  Sequential( PARERIGHT  EOM
branch_3_1 DOT add( PARERIGHT  EOM
branch_3_1 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3_2  EQUAL  Sequential( PARERIGHT  EOM
branch_3_2 DOT add( PARERIGHT  EOM
branch_3_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4_1  EQUAL  Sequential( PARERIGHT  EOM
branch_4_1 DOT add( PARERIGHT  EOM
branch_4_1 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4_2  EQUAL  Sequential( PARERIGHT  EOM
branch_4_2 DOT add( PARERIGHT  EOM
branch_4_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5_1  EQUAL  Sequential( PARERIGHT  EOM
branch_5_1 DOT add( PARERIGHT  EOM
branch_5_1 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5_2  EQUAL  Sequential( PARERIGHT  EOM
branch_5_2 DOT add( PARERIGHT  EOM
branch_5_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_1  EQUAL  Sequential( PARERIGHT  EOM
model_1 DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model_1 DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model_1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_1 DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import os EOM
import time EOM
import numpy as np EOM
from functools import wraps EOM
from sklearn DOT externals import joblib EOM
from sklearn DOT preprocessing import LabelBinarizer EOM
from sklearn DOT model_selection import cross_val_score EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT models import load_model COMMA  Sequential EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  LSTM EOM
N_FEATURES  EQUAL  10000 EOM
DOC_LEN  EQUAL  60 EOM
N_CLASSES  EQUAL  2 EOM
def timeit( PARERIGHT : EOM
def wrapper( PARERIGHT : EOM
start  EQUAL  time DOT time( PARERIGHT  EOM
result  EQUAL  func( PARERIGHT  EOM
return result COMMA  time DOT time( PARERIGHT  - start EOM
return wrapper EOM
def documents( PARERIGHT : EOM
return list(corpus DOT reviews( PARERIGHT  PARERIGHT  EOM
def continuous( PARERIGHT : EOM
return list(corpus DOT scores( PARERIGHT  PARERIGHT  EOM
def make_categorical( PARERIGHT : EOM
return np DOT digitize(continuous( PARERIGHT  COMMA  [] PARERIGHT  EOM
def binarize( PARERIGHT : EOM
return np DOT digitize(continuous( PARERIGHT  COMMA  [] PARERIGHT  EOM
def build_nn( PARERIGHT : EOM
nn DOT add(Dense(500 COMMA  activation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
nn DOT add(Dense( PARERIGHT  PARERIGHT  EOM
nn DOT add(Dense( PARERIGHT  PARERIGHT  EOM
nn DOT compile( PARERIGHT  EOM
return nn EOM
def build_lstm( PARERIGHT : EOM
lstm  EQUAL  Sequential( PARERIGHT  EOM
lstm DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
lstm DOT compile( PARERIGHT  EOM
return lstm EOM
def train_model( PARERIGHT : EOM
corpus  EQUAL  PickledAmazonReviewsReader( PARERIGHT  EOM
X  EQUAL  documents( PARERIGHT  EOM
y  EQUAL  binarize( PARERIGHT  EOM
scores  EQUAL  cross_val_score( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
if saveto: EOM
model DOT steps[][] DOT model DOT save( PARERIGHT  EOM
model DOT steps DOT pop( PARERIGHT  EOM
joblib DOT dump( PARERIGHT  EOM
return scores EOM
if __name__  EQUAL  EQUAL  : EOM
from sklearn DOT pipeline import Pipeline EOM
from sklearn DOT feature_extraction DOT text import TfidfVectorizer EOM
from reader import PickledReviewsReader EOM
from am_reader import PickledAmazonReviewsReader EOM
from transformer import TextNormalizer COMMA  GensimDoc2Vectorizer EOM
from transformer import KeyphraseExtractor COMMA  GensimTfidfVectorizer EOM
cpath  EQUAL  EOM
mpath  EQUAL  {:  COMMA : } EOM
import sys EOM
import os EOM
import zipfile EOM
import numpy as np EOM
import tensorflow as tf EOM
from keras DOT models import Sequential EOM
from keras DOT layers import CuDNNLSTM COMMA  Dense COMMA  LSTM COMMA  Convolution1D COMMA  Flatten EOM
from keras DOT layers import Dropout COMMA  GlobalAveragePooling1D COMMA  MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras import optimizers EOM
from keras DOT backend DOT tensorflow_backend import set_session EOM
from keras DOT callbacks import TensorBoard COMMA  EarlyStopping EOM
def model_covNet( PARERIGHT : EOM
vocab_size  EQUAL  5000 EOM
embedding_size  EQUAL  32 EOM
max_review_length  EQUAL  500 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
for i in layer: EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
if i! EQUAL layer[]: EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(GlobalAveragePooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_mlp( PARERIGHT : EOM
vocab_size  EQUAL  5000 EOM
embedding_size  EQUAL  32 EOM
max_review_length  EQUAL  500 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
for i in layer: EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_lstm( PARERIGHT : EOM
vocab_size  EQUAL  5000 EOM
embedding_size  EQUAL  32 EOM
max_review_length  EQUAL  500 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def training( PARERIGHT : EOM
global np COMMA  sequence COMMA  Sequential COMMA  optimizers COMMA  TensorBoard COMMA  EarlyStopping EOM
if( PARERIGHT : EOM
data  EQUAL  np DOT load( PARERIGHT  EOM
else: EOM
data  EQUAL  np DOT load( PARERIGHT  EOM
data EQUAL data DOT item( PARERIGHT  EOM
reviews_feats  EQUAL  data[] EOM
ratings  EQUAL  data[] EOM
max_review_length  EQUAL  500 EOM
X  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
ratings  EQUAL  np DOT array( PARERIGHT  EOM
X_train  EQUAL  X EOM
y_train  EQUAL  ratings EOM
data  EQUAL  np DOT load( PARERIGHT  EOM
data EQUAL data DOT item( PARERIGHT  EOM
reviews_feats  EQUAL  data[] EOM
ratings  EQUAL  data[] EOM
max_review_length  EQUAL  500 EOM
X  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
ratings  EQUAL  np DOT array( PARERIGHT  EOM
X_test  EQUAL  X EOM
y_test  EQUAL  ratings EOM
if model  EQUAL  EQUAL  : EOM
model  EQUAL  model_lstm( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
model  EQUAL  model_mlp( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
model  EQUAL  model_covNet( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
earlystopping  EQUAL  EarlyStopping( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
if isTrain EQUAL  EQUAL 1: EOM
model_json  EQUAL  model DOT to_json( PARERIGHT  EOM
with open( PARERIGHT  as json_file: EOM
json_file DOT write( PARERIGHT  EOM
model DOT save_weights( PARERIGHT  EOM
results  EQUAL  model DOT evaluate( PARERIGHT  EOM
return results[]**0 DOT 5 EOM
if (len( PARERIGHT  > 1 and sys DOT argv[] EQUAL  PARERIGHT : EOM
if os DOT path DOT exists( PARERIGHT : EOM
os DOT remove( PARERIGHT  EOM
with zipfile DOT ZipFile( PARERIGHT  as zip_ref: EOM
zip_ref DOT extractall( PARERIGHT  EOM
os DOT rename( PARERIGHT  EOM
f  EQUAL  open( PARERIGHT  EOM
arguments  EQUAL  f DOT readline( PARERIGHT  DOT split( PARERIGHT  EOM
model  EQUAL  arguments[] EOM
if model  EQUAL  EQUAL  : EOM
output  EQUAL  arguments[] EOM
rmse  EQUAL  training(model COMMA  int( PARERIGHT  COMMA  1 PARERIGHT  EOM
else: EOM
output  EQUAL  [] EOM
for i in range(1 COMMA  len( PARERIGHT -1 PARERIGHT : EOM
layer  EQUAL  arguments[] DOT replace( PARERIGHT  EOM
layer  EQUAL  layer DOT replace( PARERIGHT  EOM
output DOT append(int( PARERIGHT  PARERIGHT  EOM
rmse  EQUAL  training( PARERIGHT  EOM
f DOT close( PARERIGHT  EOM
from keras DOT models import Sequential COMMA load_model EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  LSTM EOM
from keras DOT utils import np_utils EOM
from keras DOT wrappers DOT scikit_learn import KerasRegressor EOM
from keras DOT callbacks import ModelCheckpoint EOM
from sklearn DOT model_selection import cross_val_score EOM
from sklearn DOT model_selection import KFold EOM
from sklearn DOT preprocessing import StandardScaler EOM
from sklearn DOT pipeline import Pipeline EOM
class network( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT model  EQUAL  self DOT getModel( PARERIGHT  EOM
def getModel( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(400 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(200 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def train( PARERIGHT : EOM
checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
callbacks_list  EQUAL  [] EOM
self DOT model DOT fit( PARERIGHT  EOM
self DOT model  EQUAL  self DOT load_best_model( PARERIGHT  EOM
return self DOT model EOM
def load_best_model( PARERIGHT : EOM
return load_model( PARERIGHT  EOM
class timing_network( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT model  EQUAL  self DOT getModel( PARERIGHT  EOM
def getModel( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(400 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(200 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def train( PARERIGHT : EOM
checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
callbacks_list  EQUAL  [] EOM
self DOT model DOT fit( PARERIGHT  EOM
self DOT model  EQUAL  self DOT load_best_model( PARERIGHT  EOM
return self DOT model EOM
def load_best_model( PARERIGHT : EOM
return load_model( PARERIGHT import tensorflow as tf EOM
import numpy as np EOM
class ConvLSTM( PARERIGHT : EOM
def __init__(self COMMA  num_classes COMMA  num_lstm_cells EQUAL  COMMA  num_lstm_layers EQUAL  COMMA el_size EQUAL ( PARERIGHT  COMMA  filter_size EQUAL [] COMMA  pool_size EQUAL ( PARERIGHT  COMMA um_cnn_layers EQUAL  COMMA  dropout_rate EQUAL  PARERIGHT : EOM
self DOT num_classes  EQUAL  num_classes EOM
self DOT num_lstm_cells  EQUAL  num_lstm_cells EOM
self DOT num_lstm_layers  EQUAL  num_cnn_layers EOM
self DOT pool_size  EQUAL  pool_size EOM
self DOT num_cnn_layers  EQUAL  num_cnn_layers EOM
self DOT num_classes  EQUAL  num_classes EOM
self DOT dropout_rate  EQUAL  dropout_rate EOM
self DOT kernel_size  EQUAL  kernel_size EOM
self DOT filter_size  EQUAL  filter_size EOM
self DOT model  EQUAL  None EOM
def create_cnn_model( PARERIGHT : EOM
model  EQUAL  tf DOT keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(tf DOT keras DOT layers DOT Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(tf DOT keras DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(tf DOT keras DOT layers DOT Activation( PARERIGHT  PARERIGHT  EOM
for layer in range( PARERIGHT : EOM
model DOT add(tf DOT keras DOT layers DOT Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(tf DOT keras DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(tf DOT keras DOT layers DOT Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(tf DOT keras DOT layers DOT AveragePooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(tf DOT keras DOT layers DOT Flatten( PARERIGHT  PARERIGHT  EOM
return model EOM
def create_lstm_model( PARERIGHT : EOM
model  EQUAL  tf DOT keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(tf DOT keras DOT layers DOT Permute(( PARERIGHT  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(tf DOT keras DOT layers DOT CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(tf DOT keras DOT layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
for layer in range( PARERIGHT : EOM
model DOT add(tf DOT keras DOT layers DOT CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(tf DOT keras DOT layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(tf DOT keras DOT layers DOT Flatten( PARERIGHT  PARERIGHT  EOM
return model EOM
def create_network( PARERIGHT : EOM
cnn_input  EQUAL  tf DOT reshape(input_data COMMA  ( PARERIGHT  PARERIGHT  EOM
lstm_input  EQUAL  tf DOT reshape(input_data COMMA  ( PARERIGHT  PARERIGHT  EOM
shape_cnn  EQUAL  cnn_input DOT shape[] EOM
shape_lstm  EQUAL  lstm_input DOT shape[] EOM
lstm_input  EQUAL  tf DOT keras DOT layers DOT Input( PARERIGHT  EOM
cnn_input  EQUAL  tf DOT keras DOT layers DOT Input( PARERIGHT  EOM
cnn_out  EQUAL  self DOT create_cnn_model( PARERIGHT ( PARERIGHT  EOM
lstm_out  EQUAL  self DOT create_lstm_model( PARERIGHT ( PARERIGHT  EOM
network_output  EQUAL  tf DOT keras DOT layers DOT concatenate( PARERIGHT  EOM
network_output  EQUAL  tf DOT keras DOT layers DOT Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  tf DOT keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT model  EQUAL  model EOM
def fit( PARERIGHT : EOM
cnn_input  EQUAL  np DOT reshape(input_data COMMA  ( PARERIGHT  PARERIGHT  EOM
lstm_input  EQUAL  np DOT reshape(input_data COMMA  ( PARERIGHT  PARERIGHT  EOM
self DOT model DOT fit( PARERIGHT  EOM
def evaluate( PARERIGHT : EOM
cnn_data  EQUAL  np DOT reshape(test_data COMMA  ( PARERIGHT  PARERIGHT  EOM
lstm_data  EQUAL  np DOT reshape(test_data COMMA  ( PARERIGHT  PARERIGHT  EOM
loss COMMA  accuracy  EQUAL  self DOT model DOT evaluate( PARERIGHT  EOM
return loss COMMA  accuracyimport numpy as np EOM
np DOT random DOT seed( PARERIGHT  EOM
from IPython DOT display import display EOM
from sklearn DOT model_selection import train_test_split EOM
from keras DOT layers import Dense COMMA  Dropout EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation COMMA Flatten COMMA  Reshape EOM
from keras DOT layers import Embedding COMMA  Masking EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Convolution2D COMMA  MaxPooling2D EOM
from keras DOT optimizers import SGD EOM
from keras DOT datasets import mnist EOM
from keras DOT layers import BatchNormalization EOM
from sklearn DOT svm import SVC EOM
from keras DOT utils import np_utils EOM
from keras DOT models import load_model EOM
from sklearn DOT utils DOT class_weight import compute_class_weight COMMA  compute_sample_weight EOM
from sklearn DOT metrics import recall_score COMMA  precision_score EOM
from keras import metrics EOM
import keras DOT backend as K EOM
from sklearn DOT metrics import confusion_matrix EOM
from keras import regularizers EOM
from sklearn DOT ensemble import RandomForestClassifier EOM
labelName EQUAL  EOM
runEpoch EQUAL 20 EOM
AE_Epochs  EQUAL  20 EOM
modelName  EQUAL  EOM
BS  EQUAL  256 EOM
Alldata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
Alldata  EQUAL  shuffle( PARERIGHT  EOM
train_all COMMA test_all EQUAL train_test_split( PARERIGHT  EOM
y_train  EQUAL  train_all DOT label EOM
y_test  EQUAL  test_all DOT label EOM
X_train  EQUAL  train_all DOT drop( PARERIGHT  EOM
X_test  EQUAL  test_all DOT drop( PARERIGHT  EOM
size_data  EQUAL  X_train DOT shape[] EOM
timesteps  EQUAL  5 EOM
data_dim  EQUAL  size_data/timesteps EOM
X_train  EQUAL  sc DOT fit_transform( PARERIGHT  EOM
X_test  EQUAL  sc DOT transform( PARERIGHT  EOM
Size1  EQUAL  256 EOM
Size2  EQUAL  128 EOM
Size3  EQUAL  64 EOM
inputSize  EQUAL size_data EOM
Autoencoder  EQUAL  Sequential( PARERIGHT  EOM
Autoencoder DOT add( PARERIGHT  EOM
Autoencoder DOT add( PARERIGHT  EOM
Autoencoder DOT add( PARERIGHT  EOM
Autoencoder DOT add( PARERIGHT  EOM
Autoencoder DOT add( PARERIGHT  EOM
Autoencoder DOT add( PARERIGHT  EOM
Autoencoder DOT compile( PARERIGHT  EOM
Autoencoder DOT fit(X_train COMMA  X_train COMMA  nb_epoch EQUAL  COMMA  shuffle EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
encoder1_train  EQUAL  Encoder1 DOT predict( PARERIGHT  EOM
encoder2_train  EQUAL  Encoder2 DOT predict( PARERIGHT  EOM
X_train  EQUAL  Encoder3 DOT predict( PARERIGHT  EOM
encoder1_test  EQUAL  Encoder1 DOT predict( PARERIGHT  EOM
encoder2_test  EQUAL  Encoder2 DOT predict( PARERIGHT  EOM
X_test  EQUAL  Encoder3 DOT predict( PARERIGHT  EOM
def classifier_builder ( PARERIGHT : EOM
classifier  EQUAL  Sequential( PARERIGHT  EOM
classifier DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
classifier DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
classifier DOT add(LSTM(128 COMMA  input_shape EQUAL ( PARERIGHT  COMMA activation EQUAL  COMMA recurrent_activation EQUAL  COMMA unit_forget_bias EQUAL  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
classifier DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
classifier DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
classifier DOT compile( PARERIGHT  EOM
return classifier EOM
class_weights  EQUAL  compute_class_weight( COMMA  np DOT unique( PARERIGHT  COMMA  y_train PARERIGHT  EOM
classifier  EQUAL  KerasClassifier( PARERIGHT  EOM
classifier DOT fit(X_train COMMA  y_train COMMA  batch_size EQUAL  COMMA  epochs EQUAL  COMMA  class_weight EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  COMMA  verbose EQUAL  PARERIGHT  EOM
y_predict EQUAL classifier DOT predict( PARERIGHT  EOM
y_predict  EQUAL   [] for j in y_predict] EOM
y_predict  EQUAL  np DOT where(np DOT array( PARERIGHT <0 DOT 5 COMMA 0 COMMA 1 PARERIGHT  EOM
precision  EQUAL  precision_score( PARERIGHT  EOM
recall  EQUAL  recall_score( PARERIGHT  EOM
confusion_matrix EQUAL confusion_matrix( PARERIGHT  EOM
import numpy EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT callbacks import ModelCheckpoint EOM
from keras DOT utils import np_utils EOM
from keras DOT optimizers import RMSprop EOM
import sys EOM
model DOT add(LSTM(128 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
trainerOpt  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
filename  EQUAL  EOM
model DOT load_weights( PARERIGHT  EOM
completeText  EQUAL  open( PARERIGHT  DOT read( PARERIGHT  DOT lower( PARERIGHT  EOM
chars  EQUAL  sorted(list(set( PARERIGHT  PARERIGHT  PARERIGHT  EOM
charToInt  EQUAL  dict(( PARERIGHT  for i COMMA c in enumerate( PARERIGHT  PARERIGHT  EOM
int_to_char  EQUAL  dict(( PARERIGHT  for i COMMA  c in enumerate( PARERIGHT  PARERIGHT  EOM
pattern  EQUAL  EOM
sort_sen  EQUAL  list( PARERIGHT  EOM
pattern  EQUAL  [] for value in sort_sen] EOM
for i in range( PARERIGHT : EOM
X  EQUAL  numpy DOT reshape(pattern COMMA  (1 COMMA  len( PARERIGHT  COMMA  1 PARERIGHT  PARERIGHT  EOM
X  EQUAL  x / float( PARERIGHT  EOM
prediction  EQUAL  model DOT predict( PARERIGHT  EOM
index  EQUAL  numpy DOT argmax( PARERIGHT  EOM
result  EQUAL  int_to_char[] EOM
seq_in  EQUAL  [] for value in pattern] EOM
sys DOT stdout DOT write( PARERIGHT  EOM
pattern DOT append( PARERIGHT  EOM
pattern  EQUAL  pattern[]__author__  EQUAL import os DOT path EOM
import numpy as np EOM
from data_manipulator import elementwise_square COMMA  roll_rows EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  AutoEncoder COMMA  Activation EOM
from keras DOT layers DOT recurrent import LSTM COMMA  GRU EOM
from keras DOT regularizers import l2 EOM
from convolutional import Convolution1D COMMA  MaxPooling1D EOM
class TimeDistributedAutoEncoder: EOM
def __init__( PARERIGHT : EOM
self DOT conf  EQUAL  conf EOM
self DOT model_dir  EQUAL  EOM
self DOT model_name  EQUAL  EOM
self DOT encoder_sizes  EQUAL  [] EOM
self DOT decoder_sizes  EQUAL  [] EOM
self DOT models  EQUAL  [] EOM
self DOT compiled  EQUAL  False EOM
def get_model_name( PARERIGHT : EOM
if not self DOT compiled: EOM
raise Exception( PARERIGHT  EOM
model_structure  EQUAL  EOM
model_name  EQUAL  model_structure % ( DOT join(str( PARERIGHT  for e in self DOT encoder_sizes PARERIGHT  DOT join(str( PARERIGHT  for d in self DOT decoder_sizes PARERIGHT  int( PARERIGHT  self DOT conf[] PARERIGHT  EOM
model_dir  EQUAL  model_name DOT replace( PARERIGHT  DOT replace( PARERIGHT  EOM
from data_manipulator import create_dir EOM
create_dir( PARERIGHT  EOM
return model_dir COMMA  model_name EOM
def compile( PARERIGHT : EOM
for model in self DOT models: EOM
if optimizer is not None: EOM
model DOT compile( PARERIGHT  EOM
else: EOM
model DOT compile( PARERIGHT  EOM
self DOT compiled  EQUAL  True EOM
def add_autoencoder( PARERIGHT : EOM
assert(len( PARERIGHT  ! EQUAL ( PARERIGHT  ! EQUAL  PARERIGHT  EOM
assert(len( PARERIGHT   EQUAL ( PARERIGHT  PARERIGHT  EOM
self DOT encoder_sizes  EQUAL  encoder_sizes EOM
self DOT decoder_sizes  EQUAL  decoder_sizes EOM
self DOT models  EQUAL  [] EOM
encoders  EQUAL  Sequential( PARERIGHT  EOM
decoders  EQUAL  Sequential( PARERIGHT  EOM
for i in range(0 COMMA  len( PARERIGHT  - 1 PARERIGHT : EOM
encoders DOT add(Dense(encoder_sizes[] COMMA  encoder_sizes[] init EQUAL [] activation EQUAL [] W_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
decoders DOT add(Dense(decoder_sizes[] COMMA  decoder_sizes[] init EQUAL [] activation EQUAL [] W_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT models[] DOT add(AutoEncoder(encoder EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
return self DOT models EOM
def add_conv_autoencoder( PARERIGHT : EOM
assert(len( PARERIGHT  ! EQUAL ( PARERIGHT  ! EQUAL  PARERIGHT  EOM
assert(len( PARERIGHT   EQUAL ( PARERIGHT  PARERIGHT  EOM
self DOT encoder_sizes  EQUAL  encoder_sizes EOM
self DOT decoder_sizes  EQUAL  decoder_sizes EOM
self DOT models  EQUAL  [] EOM
encoders  EQUAL  Sequential( PARERIGHT  EOM
decoders  EQUAL  Sequential( PARERIGHT  EOM
for i in range(0 COMMA  len( PARERIGHT  - 1 PARERIGHT : EOM
encoders DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
encoders DOT add(Activation( PARERIGHT  PARERIGHT  EOM
encoders DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
encoders DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
decoders DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
decoders DOT add(Activation( PARERIGHT  PARERIGHT  EOM
decoders DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
self DOT models[] DOT add(AutoEncoder(encoder EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
return self DOT models EOM
def add_lstm_autoencoder( PARERIGHT : EOM
assert(len( PARERIGHT  ! EQUAL ( PARERIGHT  ! EQUAL  PARERIGHT  EOM
assert(len( PARERIGHT   EQUAL ( PARERIGHT  PARERIGHT  EOM
self DOT encoder_sizes  EQUAL  encoder_sizes EOM
self DOT decoder_sizes  EQUAL  decoder_sizes EOM
self DOT models  EQUAL  [] EOM
encoders  EQUAL  Sequential( PARERIGHT  EOM
decoders  EQUAL  Sequential( PARERIGHT  EOM
for i in range(0 COMMA  len( PARERIGHT  - 1 PARERIGHT : EOM
encoders DOT add(LSTM(encoder_sizes[] COMMA  encoder_sizes[] activation EQUAL [] inner_activation EQUAL [] init EQUAL [] inner_init EQUAL [] truncate_gradient EQUAL ( PARERIGHT  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
decoders DOT add(LSTM(decoder_sizes[] COMMA  decoder_sizes[] activation EQUAL [] inner_activation EQUAL [] init EQUAL [] inner_init EQUAL [] truncate_gradient EQUAL (int( PARERIGHT  PARERIGHT rn_sequences EQUAL (i  EQUAL ( PARERIGHT  - 1 PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT models[] DOT add(AutoEncoder(encoder EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
return self DOT models EOM
return x EOM
def softmax( PARERIGHT : EOM
e_x  EQUAL  np DOT exp(x - np DOT max( PARERIGHT  PARERIGHT  EOM
out  EQUAL  e_x / e_x DOT sum( PARERIGHT  EOM
return out EOM
def sigmoid( PARERIGHT : EOM
return 1 / (1 + np DOT exp( PARERIGHT  PARERIGHT  EOM
def get_model( PARERIGHT : EOM
return self DOT models EOM
def get_model_type( PARERIGHT : EOM
return self DOT conf[] EOM
def load_model( PARERIGHT : EOM
if os DOT path DOT isfile( PARERIGHT : EOM
model DOT load_weights( PARERIGHT  EOM
return True EOM
else: EOM
return Falseimport matplotlib DOT pyplot as plt EOM
import numpy as np EOM
import time EOM
import csv EOM
import sys EOM
import tensorflow as tf EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers import Convolution2D EOM
from keras DOT layers DOT recurrent import LSTM COMMA  SimpleRNN COMMA  GRU EOM
import keras as keras EOM
np DOT random DOT seed( PARERIGHT  EOM
from keras import backend as K EOM
class multiLSTM: EOM
def __init__( PARERIGHT : EOM
self DOT lstmModels  EQUAL  [] EOM
self DOT xTest COMMA  self DOT yTest  EQUAL  None COMMA  None EOM
file_dataset  EQUAL  EOM
with open( PARERIGHT  as f: EOM
data  EQUAL  csv DOT reader( PARERIGHT  EOM
winds  EQUAL  [] EOM
for line in data: EOM
winds DOT append( PARERIGHT  EOM
self DOT means_stds  EQUAL  [] EOM
self DOT winds COMMA  self DOT means_stds  EQUAL  self DOT normalize_winds_0_1( PARERIGHT  EOM
activation  EQUAL  [] EOM
self DOT epochs COMMA  self DOT trainDataRate  EQUAL  [] COMMA  1] if realRun else [] COMMA  0 DOT 005] EOM
def normalize_winds_0_1( PARERIGHT : EOM
windMax  EQUAL  winds DOT max( PARERIGHT  EOM
windMin  EQUAL  winds DOT min( PARERIGHT  EOM
normal_winds  EQUAL  ( PARERIGHT  / windMax EOM
mins_maxs  EQUAL  [] EOM
return np DOT array( PARERIGHT  COMMA  mins_maxs EOM
def denormalize( PARERIGHT : EOM
return res EOM
def loadData_1( PARERIGHT : EOM
for index in range(len( PARERIGHT  - self DOT inputHorizon PARERIGHT : EOM
result DOT append( PARERIGHT  EOM
result  EQUAL  np DOT array( PARERIGHT  EOM
trainRow  EQUAL  int( PARERIGHT  EOM
X_train  EQUAL  result[] EOM
y_train  EQUAL  self DOT winds[] EOM
self DOT xTest  EQUAL  result[] EOM
self DOT yTest  EQUAL  self DOT winds[] EOM
self DOT predicted  EQUAL  np DOT zeros_like( PARERIGHT  EOM
return [] EOM
def loadData( PARERIGHT : EOM
for ind in range(len( PARERIGHT  - self DOT inputHorizon -1 PARERIGHT : EOM
tempInput  EQUAL  preXTrain[] EOM
temp_shape  EQUAL  tempInput DOT shape EOM
tempInput  EQUAL  np DOT reshape(tempInput COMMA  ( PARERIGHT  PARERIGHT  EOM
output  EQUAL  model DOT predict( PARERIGHT  EOM
tInput  EQUAL  np DOT reshape( PARERIGHT  EOM
tempInput  EQUAL  np DOT vstack(( PARERIGHT  PARERIGHT  EOM
tempInput  EQUAL  np DOT delete( PARERIGHT  EOM
xTrain[]  EQUAL  tempInput EOM
yTrain[]  EQUAL  preYTrain[] EOM
return [] EOM
def buildModelLSTM_1( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
in_nodes  EQUAL  out_nodes  EQUAL  self DOT inOutVecDim EOM
layers  EQUAL  [] EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  keras DOT optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def buildModelLSTM_2( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
layers  EQUAL  [] EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  keras DOT optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def buildModelLSTM_3( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
layers  EQUAL  [] EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  keras DOT optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def buildModelLSTM_4( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
layers  EQUAL  [] EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  keras DOT optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def buildModelLSTM_5( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
layers  EQUAL  [] EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  keras DOT optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def buildModelLSTM_6( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
layers  EQUAL  [] EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  keras DOT optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def buildModelLSTM( PARERIGHT : EOM
if lstmModelNum  EQUAL  EQUAL  1: EOM
return self DOT buildModelLSTM_1( PARERIGHT  EOM
elif lstmModelNum  EQUAL  EQUAL  2: EOM
return self DOT buildModelLSTM_2( PARERIGHT  EOM
elif lstmModelNum  EQUAL  EQUAL  3: EOM
return self DOT buildModelLSTM_3( PARERIGHT  EOM
elif lstmModelNum  EQUAL  EQUAL  4: EOM
return self DOT buildModelLSTM_4( PARERIGHT  EOM
elif lstmModelNum  EQUAL  EQUAL  5: EOM
return self DOT buildModelLSTM_5( PARERIGHT  EOM
elif lstmModelNum  EQUAL  EQUAL  6: EOM
return self DOT buildModelLSTM_6( PARERIGHT  EOM
def trainLSTM( PARERIGHT : EOM
lstmModel  EQUAL  self DOT buildModelLSTM( PARERIGHT  EOM
lstmModel DOT fit( PARERIGHT  EOM
return lstmModel EOM
def test( PARERIGHT : EOM
for ind in range(len( PARERIGHT  PARERIGHT : EOM
modelInd  EQUAL  ind % 6 EOM
if modelInd  EQUAL  EQUAL  0: EOM
testInputRaw  EQUAL  self DOT xTest[] EOM
testInputShape  EQUAL  testInputRaw DOT shape EOM
testInput  EQUAL  np DOT reshape( PARERIGHT  EOM
else: EOM
testInputRaw  EQUAL  np DOT vstack(( PARERIGHT  PARERIGHT  EOM
testInput  EQUAL  np DOT delete( PARERIGHT  EOM
testInputShape  EQUAL  testInput DOT shape EOM
testInput  EQUAL  np DOT reshape( PARERIGHT  EOM
self DOT predicted[]  EQUAL  self DOT lstmModels[] DOT predict( PARERIGHT  EOM
def errorMeasures( PARERIGHT : EOM
mae  EQUAL  np DOT mean(np DOT absolute( PARERIGHT  PARERIGHT  EOM
rmse  EQUAL  np DOT sqrt((np DOT mean((np DOT absolute( PARERIGHT  PARERIGHT  ** 2 PARERIGHT  PARERIGHT  PARERIGHT  EOM
nrsme_maxMin  EQUAL  100 * rmse / (denormalYTest DOT max( PARERIGHT  - denormalYTest DOT min( PARERIGHT  PARERIGHT  EOM
nrsme_mean  EQUAL  100 * rmse / (denormalYTest DOT mean( PARERIGHT  PARERIGHT  EOM
return mae COMMA  rmse COMMA  nrsme_maxMin COMMA  nrsme_mean EOM
def drawGraphStation( PARERIGHT : EOM
yTest  EQUAL  self DOT yTest[] EOM
denormalYTest  EQUAL  self DOT denormalize( PARERIGHT  EOM
denormalPredicted  EQUAL  self DOT denormalize( PARERIGHT  EOM
mae COMMA  rmse COMMA  nrmse_maxMin COMMA  nrmse_mean  EQUAL  self DOT errorMeasures( PARERIGHT  EOM
if visualise: EOM
if ax is None: EOM
fig  EQUAL  plt DOT figure( PARERIGHT  EOM
ax  EQUAL  fig DOT add_subplot( PARERIGHT  EOM
ax DOT plot( PARERIGHT  EOM
ax DOT plot( PARERIGHT  EOM
ax DOT set_xticklabels( PARERIGHT  EOM
return mae COMMA  rmse COMMA  nrmse_maxMin COMMA  nrmse_mean EOM
def drawGraphAllStations( PARERIGHT : EOM
rows COMMA  cols  EQUAL  1 COMMA  1 EOM
maeRmse  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
fig COMMA  ax_array  EQUAL  plt DOT subplots( PARERIGHT  EOM
staInd  EQUAL  0 EOM
maeRmse[]  EQUAL  self DOT drawGraphStation( PARERIGHT  EOM
staInd + EQUAL  1 EOM
plt DOT xticks( PARERIGHT  EOM
filename  EQUAL  EOM
plt DOT savefig( DOT format( PARERIGHT  PARERIGHT  EOM
plt DOT savefig( DOT format( PARERIGHT  PARERIGHT  EOM
plt DOT show( PARERIGHT  EOM
def run( PARERIGHT : EOM
xTrain COMMA  yTrain  EQUAL  self DOT loadData_1( PARERIGHT  EOM
self DOT lstmModels[]  EQUAL  self DOT trainLSTM( PARERIGHT  EOM
for modelInd in range( PARERIGHT : EOM
xTrain COMMA  yTrain  EQUAL  self DOT loadData( PARERIGHT  EOM
self DOT lstmModels[]  EQUAL  self DOT trainLSTM( PARERIGHT  EOM
self DOT test( PARERIGHT  EOM
self DOT drawGraphAllStations( PARERIGHT  EOM
DeepForecast  EQUAL  multiLSTM( PARERIGHT  EOM
DeepForecast DOT run( PARERIGHT from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
import numpy as np EOM
class LSTM_NN( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
from keras DOT preprocessing import sequence EOM
from keras DOT optimizers import SGD COMMA  RMSprop COMMA  Adagrad EOM
from keras DOT utils import np_utils EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import LSTM COMMA  GRU EOM
from keras DOT constraints import unitnorm EOM
from keras DOT layers DOT core import Reshape COMMA  Flatten COMMA  Merge EOM
from keras DOT layers DOT convolutional import Convolution2D COMMA  MaxPooling2D COMMA  Convolution1D COMMA  MaxPooling1D EOM
from sklearn DOT cross_validation import KFold EOM
from keras DOT callbacks import EarlyStopping EOM
from keras DOT regularizers import l2 EOM
import numpy as np EOM
from sklearn import cross_validation EOM
import math EOM
from keras_input_data import make_idx_data EOM
from load_vai import loadVAI EOM
import _pickle as cPickle EOM
from metrics import continuous_metrics EOM
def cnn( PARERIGHT : EOM
N_fm  EQUAL  100 EOM
dense_nb  EQUAL  20 EOM
kernel_size  EQUAL  5 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(input_dim EQUAL [] COMMA  output_dim EQUAL [] COMMA  weights EQUAL [] COMMA  W_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Reshape(W DOT shape[] COMMA ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D(nb_filter EQUAL  COMMA  nb_row EQUAL  COMMA  nb_col EQUAL  COMMA  border_mode EQUAL  COMMA _regularizer EQUAL ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  COMMA  border_mode EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def imdb_cnn( PARERIGHT : EOM
N_fm  EQUAL  100 EOM
kernel_size  EQUAL  5 EOM
max_features  EQUAL  W DOT shape[] EOM
hidden_dims  EQUAL  100 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def cnn_lstm( PARERIGHT : EOM
nb_filter  EQUAL  100 EOM
filter_length  EQUAL  5 EOM
pool_length  EQUAL  2 EOM
lstm_output_size  EQUAL  100 EOM
p  EQUAL  0 DOT 25 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
if __name__  EQUAL  EQUAL  : EOM
x  EQUAL  cPickle DOT load(open( PARERIGHT  PARERIGHT  EOM
revs COMMA  W COMMA  W2 COMMA  word_idx_map COMMA  vocab  EQUAL  x[] COMMA  x[] COMMA  x[] COMMA  x[] COMMA  x[] EOM
sentences EQUAL [] EOM
for rev in revs: EOM
sentence  EQUAL  rev[] EOM
sentences DOT append( PARERIGHT  EOM
idx_data  EQUAL  make_idx_data( PARERIGHT  EOM
dim  EQUAL  EOM
column  EQUAL  loadVAI( PARERIGHT  EOM
irony EQUAL column EOM
batch_size  EQUAL  8 EOM
Y  EQUAL  np DOT array( PARERIGHT  EOM
Y  EQUAL  [] EOM
n_MAE EQUAL 0 EOM
n_Pearson_r EQUAL 0 EOM
n_Spearman_r EQUAL 0 EOM
n_MSE EQUAL 0 EOM
n_R2 EQUAL 0 EOM
n_MSE_sqrt EQUAL 0 EOM
SEED  EQUAL  42 EOM
for i in range( PARERIGHT : EOM
X_train COMMA  X_test COMMA  y_train COMMA  y_test  EQUAL  cross_validation DOT train_test_split( PARERIGHT  EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL  lstm_cnn( PARERIGHT  EOM
early_stopping  EQUAL  EarlyStopping( PARERIGHT  EOM
result  EQUAL  model DOT fit(X_train COMMA  y_train COMMA  batch_size EQUAL  COMMA  nb_epoch EQUAL  COMMA validation_data EQUAL ( PARERIGHT  COMMA callbacks EQUAL [] PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
predict  EQUAL  model DOT predict( PARERIGHT  DOT reshape((1 COMMA  len( PARERIGHT  PARERIGHT  PARERIGHT [] EOM
estimate EQUAL continuous_metrics( PARERIGHT  EOM
n_MAE + EQUAL  estimate[] EOM
n_Pearson_r + EQUAL  estimate[] EOM
ndigit EQUAL 3 EOM
avg_MAE  EQUAL   round( PARERIGHT  EOM
avg_Pearson_r  EQUAL   round( PARERIGHT  EOM
from visualize import plot_keras COMMA  draw_hist EOM
import pytest EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras import Input COMMA  Model EOM
from keras DOT layers import Conv2D COMMA  Bidirectional EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(2 COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
inner_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_lstm  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  name EQUAL  PARERIGHT ( PARERIGHT  EOM
encoder  EQUAL  Model( PARERIGHT  EOM
outer_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_encoder  EQUAL  TimeDistributed( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
preds  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
def test_plot_sequential_embedding( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT import pytest EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras import Input COMMA  Model EOM
from keras DOT layers import Conv2D COMMA  Bidirectional EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(2 COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
inner_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_lstm  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  name EQUAL  PARERIGHT ( PARERIGHT  EOM
encoder  EQUAL  Model( PARERIGHT  EOM
outer_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_encoder  EQUAL  TimeDistributed( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
preds  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
def test_plot_sequential_embedding( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT import pytest EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras import Input COMMA  Model EOM
from keras DOT layers import Conv2D COMMA  Bidirectional EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(2 COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
inner_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_lstm  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  name EQUAL  PARERIGHT ( PARERIGHT  EOM
encoder  EQUAL  Model( PARERIGHT  EOM
outer_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_encoder  EQUAL  TimeDistributed( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
preds  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
def test_plot_sequential_embedding( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT optimizers import RMSprop EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT callbacks import Callback EOM
class LossHistory( PARERIGHT : EOM
def on_train_begin( PARERIGHT : EOM
self DOT losses  EQUAL  [] EOM
def on_batch_end( PARERIGHT : EOM
self DOT losses DOT append(logs DOT get( PARERIGHT  PARERIGHT  EOM
def neural_net( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(rams[] COMMA  init EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
rms  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if load: EOM
model DOT load_weights( PARERIGHT  EOM
return model EOM
def lstm_net( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelimport os EOM
global_model_version  EQUAL  51 EOM
global_batch_size  EQUAL  128 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from keras DOT models import Sequential COMMA Model EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten EOM
from keras DOT layers DOT core import Reshape COMMA  Permute EOM
from keras DOT layers import Merge COMMA concatenate EOM
from keras DOT layers DOT convolutional import Convolution2D COMMA  MaxPooling2D EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
import numpy as np EOM
def model_cnn_lstm_adam_binary( PARERIGHT : EOM
optimizer  EQUAL  EOM
loss  EQUAL  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Convolution2D(4 COMMA  ( PARERIGHT  COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT +inputShape PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape  EQUAL  model DOT layers[] DOT output_shape EOM
model DOT add(Reshape((convOutShape[] COMMA np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model COMMA  optimizer COMMA  loss EOM
def model_cnn_lstm_adam_binary_dropout( PARERIGHT : EOM
optimizer  EQUAL  EOM
loss  EQUAL  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Convolution2D(4 COMMA  ( PARERIGHT  COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT +inputShape PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
convOutShape  EQUAL  model DOT layers[] DOT output_shape EOM
model DOT add(Reshape((convOutShape[] COMMA np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model COMMA  optimizer COMMA  loss EOM
def model_cnn_lstm_adam( PARERIGHT : EOM
optimizer  EQUAL  EOM
loss  EQUAL  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Convolution2D(4 COMMA  ( PARERIGHT  COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT +inputShape PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape  EQUAL  model DOT layers[] DOT output_shape EOM
model DOT add(Reshape((convOutShape[] COMMA np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model COMMA  optimizer COMMA  loss EOM
def model_branched_cnn_mixed_lstm_binary( PARERIGHT : EOM
loss  EQUAL  EOM
kernelSize1  EQUAL  ( PARERIGHT  EOM
kernelSize2  EQUAL  ( PARERIGHT  EOM
ntOut  EQUAL  outputShape[] EOM
branch1  EQUAL  Sequential( PARERIGHT  EOM
branch1 DOT add(Convolution2D(numFilter COMMA  kernelSize1 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2  EQUAL  Sequential( PARERIGHT  EOM
branch2 DOT add(Convolution2D(numFilter COMMA  kernelSize2 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape2  EQUAL  branch2 DOT layers[] DOT output_shape EOM
branch2 DOT add(Reshape((convOutShape2[] COMMA  np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model COMMA  optimizer COMMA  loss EOM
def model_branched_cnn_mixed_lstm_regression( PARERIGHT : EOM
loss  EQUAL  EOM
kernelSize1  EQUAL  ( PARERIGHT  EOM
kernelSize2  EQUAL  ( PARERIGHT  EOM
ntOut  EQUAL  outputShape[] EOM
branch1  EQUAL  Sequential( PARERIGHT  EOM
branch1 DOT add(Convolution2D(numFilter COMMA  kernelSize1 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2  EQUAL  Sequential( PARERIGHT  EOM
branch2 DOT add(Convolution2D(numFilter COMMA  kernelSize2 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape2  EQUAL  branch2 DOT layers[] DOT output_shape EOM
branch2 DOT add(Reshape((convOutShape2[] COMMA  np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
return model COMMA  optimizer COMMA  loss EOM
from keras DOT layers import Input EOM
def model_branched_cnn_mixed_lstm_binary_functional( PARERIGHT : EOM
loss  EQUAL  EOM
kernelSize1  EQUAL  ( PARERIGHT  EOM
kernelSize2  EQUAL  ( PARERIGHT  EOM
ntOut  EQUAL  outputShape[] EOM
input1  EQUAL  Input(batch_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  EOM
input2  EQUAL  Input(batch_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  EOM
branch1  EQUAL  Sequential( PARERIGHT  EOM
branch1 DOT add(Convolution2D(numFilter COMMA  kernelSize1 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2  EQUAL  Sequential( PARERIGHT  EOM
branch2 DOT add(Convolution2D(numFilter COMMA  kernelSize2 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape2  EQUAL  branch2 DOT layers[] DOT output_shape EOM
branch2 DOT add(Reshape((convOutShape2[] COMMA  np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
output1  EQUAL  branch1( PARERIGHT  EOM
output2  EQUAL  branch2( PARERIGHT  EOM
mergedInput  EQUAL  concatenate( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  TimeDistributed(Dense( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
output  EQUAL  Activation( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
return model COMMA  optimizer COMMA  loss EOM
def model_branched_cnn_mixed_lstm_regression_padding( PARERIGHT : EOM
loss  EQUAL  EOM
kernelSize1  EQUAL  ( PARERIGHT  EOM
kernelSize2  EQUAL  ( PARERIGHT  EOM
ntOut  EQUAL  outputShape[] EOM
input1  EQUAL  Input(batch_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  EOM
input2  EQUAL  Input(batch_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  EOM
branch1  EQUAL  Sequential( PARERIGHT  EOM
branch1 DOT add(Convolution2D(numFilter COMMA  kernelSize1 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape1  EQUAL  branch1 DOT layers[] DOT output_shape EOM
branch1 DOT add(Reshape((convOutShape1[] COMMA  np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
nPadTo  EQUAL  int(np DOT ceil( PARERIGHT  * ntOut PARERIGHT  EOM
nPadding  EQUAL  ( PARERIGHT  EOM
branch1 DOT add(ZeroPadding1D(padding EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch2  EQUAL  Sequential( PARERIGHT  EOM
branch2 DOT add(Convolution2D(numFilter COMMA  kernelSize2 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  PARERIGHT  EOM
branch2 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape2  EQUAL  branch2 DOT layers[] DOT output_shape EOM
branch2 DOT add(Reshape((convOutShape2[] COMMA  np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
output1  EQUAL  branch1( PARERIGHT  EOM
output2  EQUAL  branch2( PARERIGHT  EOM
mergedInput  EQUAL  concatenate( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
output  EQUAL  TimeDistributed(Dense( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
return model COMMA  optimizer COMMA  loss EOM
from keras DOT layers import ZeroPadding1D EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers DOT core import Reshape COMMA  Permute EOM
from keras DOT layers import Merge COMMA  concatenate COMMA  BatchNormalization EOM
from keras DOT layers DOT convolutional import Convolution2D COMMA  MaxPooling2D EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
def model_branched_cnn_mixed_lstm_regression_batchNorm( PARERIGHT : EOM
loss  EQUAL  EOM
kernelSize1  EQUAL  ( PARERIGHT  EOM
kernelSize2  EQUAL  ( PARERIGHT  EOM
ntOut  EQUAL  outputShape[] EOM
input1  EQUAL  Input(batch_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  EOM
input2  EQUAL  Input(batch_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  EOM
branch1  EQUAL  Sequential( PARERIGHT  EOM
branch1 DOT add(Convolution2D(numFilter COMMA  kernelSize1 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape1  EQUAL  branch1 DOT layers[] DOT output_shape EOM
branch1 DOT add(Reshape((convOutShape1[] COMMA  np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
nPadTo  EQUAL  int(np DOT ceil( PARERIGHT  * ntOut PARERIGHT  EOM
nPadding  EQUAL  ( PARERIGHT  EOM
branch1 DOT add(ZeroPadding1D(padding EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch2  EQUAL  Sequential( PARERIGHT  EOM
branch2 DOT add(Convolution2D(numFilter COMMA  kernelSize2 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  PARERIGHT  EOM
branch2 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape2  EQUAL  branch2 DOT layers[] DOT output_shape EOM
branch2 DOT add(Reshape((convOutShape2[] COMMA  np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
output1  EQUAL  branch1( PARERIGHT  EOM
output2  EQUAL  branch2( PARERIGHT  EOM
mergedInput  EQUAL  concatenate( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  BatchNormalization( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  BatchNormalization( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
output  EQUAL  TimeDistributed(Dense( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
return model COMMA  optimizer COMMA  loss EOM
def model_branched_cnn_mixed_lstm_regression_functional( PARERIGHT : EOM
loss  EQUAL  EOM
kernelSize1  EQUAL  ( PARERIGHT  EOM
kernelSize2  EQUAL  ( PARERIGHT  EOM
ntOut  EQUAL  outputShape[] EOM
input1  EQUAL  Input(batch_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  EOM
input2  EQUAL  Input(batch_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  EOM
branch1  EQUAL  Sequential( PARERIGHT  EOM
branch1 DOT add(Convolution2D(numFilter COMMA  kernelSize1 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input1Shape PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Reshape(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch2  EQUAL  Sequential( PARERIGHT  EOM
branch2 DOT add(Convolution2D(numFilter COMMA  kernelSize2 COMMA  padding EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT  + input2Shape PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
convOutShape2  EQUAL  branch2 DOT layers[] DOT output_shape EOM
branch2 DOT add(Reshape((convOutShape2[] COMMA  np DOT prod( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
output1  EQUAL  branch1( PARERIGHT  EOM
output2  EQUAL  branch2( PARERIGHT  EOM
mergedInput  EQUAL  concatenate( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X EQUAL Dropout( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X EQUAL Dropout( PARERIGHT ( PARERIGHT  EOM
output  EQUAL  TimeDistributed(Dense( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
return model COMMA  optimizer COMMA  loss EOM
def model_cnn_cat_mixed_lstm_2predict( PARERIGHT : EOM
optimizer  EQUAL  EOM
loss  EQUAL  EOM
branch1  EQUAL  Sequential( PARERIGHT  EOM
branch1 DOT add(Convolution2D(4 COMMA  1 COMMA  5 COMMA  border_mode EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT +input1Shape PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch1 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch2  EQUAL  Sequential( PARERIGHT  EOM
branch2 DOT add(Convolution2D(4 COMMA  3 COMMA  5 COMMA  border_mode EQUAL  COMMA  batch_input_shape EQUAL ( PARERIGHT +input2Shape PARERIGHT  PARERIGHT  EOM
branch2 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
branch2 DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
convOutShape  EQUAL  model DOT layers[] DOT output_shape EOM
model DOT add(Reshape((np DOT prod( PARERIGHT  COMMA  convOutShape[] PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Permute(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model COMMA  optimizer COMMA  lossfrom keras DOT layers import Embedding COMMA  LSTM COMMA  TimeDistributed COMMA  Dense COMMA  Dropout EOM
from keras DOT layers DOT wrappers import Bidirectional EOM
from keras DOT optimizers import Adam EOM
from keras DOT models import load_model as keras_load_model EOM
from  DOT  import constant EOM
class Model( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT  EOM
model DOT add(Bidirectional( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT  EOM
model DOT add(Bidirectional( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT  EOM
model DOT add(Bidirectional( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT model  EQUAL  model EOM
def save_model( PARERIGHT : EOM
model DOT save( PARERIGHT  EOM
def load_model( PARERIGHT : EOM
return keras_load_model( PARERIGHT from keras DOT models import Sequential EOM
from keras DOT models import Model EOM
from keras DOT layers import Input EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dense EOM
from keras DOT models import Model EOM
import keras DOT backend as K EOM
from keras import initializers EOM
from numpy import array EOM
import random EOM
import numpy as np EOM
def fun_1( PARERIGHT : EOM
inputs1  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
lstm1  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
data  EQUAL  array( PARERIGHT  DOT reshape(( PARERIGHT  PARERIGHT  EOM
pass EOM
def fun_1_ex( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(4 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  COMMA kernel_initializer EQUAL ( PARERIGHT  COMMA recurrent_initializer EQUAL ( PARERIGHT  COMMA bias_initializer EQUAL ( PARERIGHT  COMMA use_bias EQUAL  PARERIGHT  PARERIGHT  EOM
data  EQUAL  array( PARERIGHT  DOT reshape(( PARERIGHT  PARERIGHT  EOM
pass EOM
def fun_2( PARERIGHT : EOM
inputs1  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
lstm1 COMMA  state_h COMMA  state_c  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
data  EQUAL  array( PARERIGHT  DOT reshape(( PARERIGHT  PARERIGHT  EOM
pass EOM
def fun_3( PARERIGHT : EOM
inputs1  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
lstm1 COMMA  state_h COMMA  state_c  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
data  EQUAL  array( PARERIGHT  DOT reshape(( PARERIGHT  PARERIGHT  EOM
pass EOM
def fun_4( PARERIGHT : EOM
number_of_dimensions  EQUAL  4 EOM
number_of_examples  EQUAL  1 EOM
input_  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
lstm COMMA  hidden COMMA  cell  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
dense  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
with K DOT get_session( PARERIGHT  as sess: EOM
x  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
cell_state  EQUAL  sess DOT run( PARERIGHT  EOM
fun_1_ex( PARERIGHT  EOM
passimport numpy as np EOM
from tensorflow DOT keras DOT layers import Dense COMMA  Input COMMA  GlobalMaxPooling1D EOM
from tensorflow DOT keras DOT layers import Conv1D COMMA  MaxPooling1D COMMA  Embedding COMMA  LSTM EOM
from tensorflow DOT keras DOT models import Model COMMA  Sequential EOM
def getConvModel( PARERIGHT : EOM
sequence_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
embedded_sequences  EQUAL  embedding_layer( PARERIGHT  EOM
x  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  MaxPooling1D( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  MaxPooling1D( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Conv1D( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  GlobalMaxPooling1D( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
preds  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def getConvLSTMmodel( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def getLSTMmodel( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
from keras DOT layers DOT core import Dense COMMA  Activation EOM
from keras DOT layers import Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT optimizers import RMSprop EOM
from keras import optimizers EOM
from keras DOT models import Model EOM
from keras import backend as K EOM
import numpy as np EOM
import random EOM
import sys EOM
from Const import Const EOM
class Lstm( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
super( PARERIGHT  DOT __init__( PARERIGHT  EOM
self DOT word_seq_num  EQUAL  1 EOM
def input_len_set( PARERIGHT : EOM
self DOT input_len  EQUAL  self DOT word_feat_len * self DOT word_seq_num EOM
self DOT output_len  EQUAL  EOM
self DOT hidden_neurons  EQUAL  EOM
def make_net( PARERIGHT : EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add(LSTM(self DOT output_len COMMA  input_shape EQUAL ( PARERIGHT  COMMA implementation EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
loss  EQUAL  EOM
optimizer  EQUAL  RMSprop( PARERIGHT  EOM
optimizer  EQUAL  EOM
optimizer  EQUAL  optimizers DOT Adam( PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
self DOT model DOT summary( PARERIGHT  EOM
def train( PARERIGHT : EOM
self DOT hist  EQUAL  self DOT model DOT fit( PARERIGHT  EOM
def predict( PARERIGHT : EOM
inp  EQUAL  np DOT array( PARERIGHT  EOM
inp  EQUAL  inp DOT reshape( PARERIGHT  EOM
predict_list  EQUAL  self DOT model DOT predict_on_batch( PARERIGHT  EOM
return predict_list EOM
def netScore( PARERIGHT : EOM
self DOT score  EQUAL  self DOT model DOT evaluate( PARERIGHT  EOM
def waitController( PARERIGHT : EOM
try: EOM
if flag  EQUAL  EQUAL  : EOM
self DOT model DOT save_weights( PARERIGHT  EOM
if flag  EQUAL  EQUAL  : EOM
self DOT model DOT load_weights( PARERIGHT  EOM
except : EOM
sys DOT exit( PARERIGHT  EOM
def main( PARERIGHT : EOM
lstm  EQUAL  Lstm( PARERIGHT  EOM
lstm DOT input_len_set( PARERIGHT  EOM
lstm DOT make_net( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
main( PARERIGHT from keras DOT layers DOT convolutional import Conv2DTranspose  COMMA  Conv1D COMMA  Conv2D COMMA Convolution3D COMMA  MaxPooling2D COMMA UpSampling1D COMMA UpSampling2D COMMA UpSampling3D EOM
from keras DOT layers import Input COMMA Embedding COMMA  Dense COMMA  Dropout COMMA  Activation COMMA  Flatten COMMA    Reshape COMMA  Flatten COMMA  Lambda EOM
from keras DOT layers DOT noise import GaussianDropout COMMA  GaussianNoise EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras import initializers EOM
from keras import regularizers EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers DOT advanced_activations import LeakyReLU EOM
import numpy as np EOM
import pandas as pd EOM
import os EOM
def create_LSTM( PARERIGHT : EOM
embedding_vecor_length  EQUAL  32 EOM
model1  EQUAL  Sequential( PARERIGHT  EOM
model1 DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model1 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model2  EQUAL  Sequential( PARERIGHT  EOM
model2 DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model3  EQUAL  Sequential( PARERIGHT  EOM
model3 DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model4  EQUAL  Model(inputs EQUAL (shape EQUAL ( PARERIGHT  PARERIGHT  COMMA  outputs EQUAL  PARERIGHT  EOM
education  EQUAL  [] EOM
for i in range(len( PARERIGHT  PARERIGHT : EOM
JD  EQUAL  JD_ls[] EOM
education DOT append( PARERIGHT  EOM
edu_types  EQUAL  list(set(sum( PARERIGHT  PARERIGHT  PARERIGHT  EOM
to_categorical( PARERIGHT  EOM
import pandas as pd EOM
s  EQUAL  pd DOT Series( PARERIGHT  EOM
pd DOT get_dummies( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
if __name__  EQUAL  EQUAL  : EOM
model_id  EQUAL  EOM
model  EQUAL  create_LSTM( PARERIGHT  EOM
import pandas as pd EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Activation COMMA  Dense COMMA  Embedding COMMA  SimpleRNN COMMA  LSTM COMMA  Dropout EOM
from keras import backend as K EOM
from keras_tqdm import TQDMNotebookCallback EOM
from keras DOT callbacks import ReduceLROnPlateau COMMA  EarlyStopping COMMA  ModelCheckpoint EOM
from keras DOT callbacks import TensorBoard EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
imdb_df  EQUAL  pd DOT read_csv( PARERIGHT  EOM
pd DOT set_option( PARERIGHT  EOM
num_words  EQUAL  10000 EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts( PARERIGHT  EOM
sequences  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
y  EQUAL  np DOT array( PARERIGHT  EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
max_review_length  EQUAL  552 EOM
pad  EQUAL  EOM
X  EQUAL  pad_sequences( PARERIGHT  EOM
from sklearn DOT model_selection import train_test_split EOM
X_train COMMA  X_test COMMA  y_train COMMA  y_test  EQUAL  train_test_split( PARERIGHT  EOM
input_shape  EQUAL  X_train DOT shape EOM
K DOT clear_session( PARERIGHT  EOM
LSTM_model  EQUAL  Sequential( PARERIGHT  EOM
LSTM_model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT summary( PARERIGHT  EOM
LSTM_model DOT compile( PARERIGHT  EOM
LSTM_history  EQUAL  LSTM_model DOT fit(X_train COMMA y_train COMMA epochs EQUAL  COMMA batch_size EQUAL  COMMA validation_split EQUAL from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Embedding COMMA  Activation EOM
from keras DOT layers import LSTM COMMA  Bidirectional EOM
from theano DOT scalar import float32 EOM
import numpy as np EOM
def lstm_embedding_empty( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm_embedding_pretrained( PARERIGHT : EOM
embedding_dimension  EQUAL  len( PARERIGHT  EOM
number_of_words  EQUAL  len(index_to_embedding_mapping DOT keys( PARERIGHT  PARERIGHT  EOM
embedding_matrix  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
for index COMMA  embedding in index_to_embedding_mapping DOT items( PARERIGHT : EOM
embedding_matrix[]  EQUAL  embedding EOM
model  EQUAL  Sequential( PARERIGHT  EOM
embedding_layer  EQUAL  Embedding( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lst_stacked( PARERIGHT : EOM
embedding_dimension  EQUAL  len( PARERIGHT  EOM
number_of_words  EQUAL  len(index_to_embedding_mapping DOT keys( PARERIGHT  PARERIGHT  EOM
embedding_matrix  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
for index COMMA  embedding in index_to_embedding_mapping DOT items( PARERIGHT : EOM
embedding_matrix[]  EQUAL  embedding EOM
model  EQUAL  Sequential( PARERIGHT  EOM
embedding_layer  EQUAL  Embedding( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def blstm( PARERIGHT : EOM
embedding_dimension  EQUAL  len( PARERIGHT  EOM
number_of_words  EQUAL  len(index_to_embedding_mapping DOT keys( PARERIGHT  PARERIGHT  EOM
embedding_matrix  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
for index COMMA  embedding in index_to_embedding_mapping DOT items( PARERIGHT : EOM
embedding_matrix[]  EQUAL  embedding EOM
model  EQUAL  Sequential( PARERIGHT  EOM
embedding_layer  EQUAL  Embedding( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT core import Activation COMMA  Dropout EOM
from keras DOT models import Sequential EOM
FEATURE_COUNT  EQUAL  6 EOM
MODEL_FILEPATH  EQUAL  EOM
def build_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
model  EQUAL  build_model( PARERIGHT  EOM
model DOT save( PARERIGHT from __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
import numpy as np EOM
from tensorflow DOT python import keras EOM
from tensorflow DOT python DOT framework import test_util as tf_test_util EOM
from tensorflow DOT python DOT keras import testing_utils EOM
from tensorflow DOT python DOT platform import test EOM
from tensorflow DOT python DOT training import adam EOM
from tensorflow DOT python DOT training import gradient_descent EOM
from tensorflow DOT python DOT training DOT rmsprop import RMSPropOptimizer EOM
class LSTMLayerTest( PARERIGHT : EOM
def test_return_sequences_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA return_sequences EOM
def test_static_shape_inference_LSTM( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
inputs  EQUAL  keras DOT layers DOT Dense(embedding_dim COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
outputs  EQUAL  model DOT layers[] DOT output EOM
self DOT assertEquals(outputs DOT get_shape( PARERIGHT  DOT as_list( PARERIGHT  COMMA  [] PARERIGHT  EOM
def test_dynamic_behavior_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
layer  EQUAL  keras DOT layers DOT LSTM(units COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile(RMSPropOptimizer( PARERIGHT  COMMA   PARERIGHT  EOM
x  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_dropout_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA dropout: 0 DOT 1} COMMA put_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
def test_implementation_mode_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
for mode in []: EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA implementation EOM
def test_constraints_LSTM( PARERIGHT : EOM
embedding_dim  EQUAL  4 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
k_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
r_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
b_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
layer  EQUAL  layer_class(5 COMMA return_sequences EQUAL  COMMA weights EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA kernel_constraint EQUAL  COMMA recurrent_constraint EQUAL  COMMA bias_constraint EQUAL  PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
def test_with_masking_layer_LSTM( PARERIGHT : EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT abs(np DOT random DOT random(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
targets / EQUAL  targets DOT sum( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Masking(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(layer_class( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
def test_masking_with_stacking_LSTM( PARERIGHT : EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT abs(np DOT random DOT random(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
targets / EQUAL  targets DOT sum( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Masking(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
lstm_cells  EQUAL  [] EOM
model DOT add(keras DOT layers DOT RNN( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
def test_from_config_LSTM( PARERIGHT : EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
for stateful in ( PARERIGHT : EOM
l1  EQUAL  layer_class( PARERIGHT  EOM
l2  EQUAL  layer_class DOT from_config(l1 DOT get_config( PARERIGHT  PARERIGHT  EOM
assert l1 DOT get_config( PARERIGHT   EQUAL ( PARERIGHT  EOM
def test_specify_initial_state_keras_tensor( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
if len( PARERIGHT   EQUAL  : EOM
output  EQUAL  layer( PARERIGHT  EOM
else: EOM
output  EQUAL  layer( PARERIGHT  EOM
assert initial_state[] in layer DOT _inbound_nodes[] DOT input_tensors EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_specify_initial_state_non_keras_tensor( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
output  EQUAL  layer( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_reset_states_with_values( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
assert len( PARERIGHT   EQUAL  assert layer DOT states[] is not None EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA np DOT zeros(keras DOT backend DOT int_shape( PARERIGHT  PARERIGHT  COMMA atol EQUAL  PARERIGHT  EOM
state_shapes  EQUAL  [] EOM
values  EQUAL  [] EOM
if len( PARERIGHT   EQUAL  : EOM
values  EQUAL  values[] EOM
layer DOT reset_states( PARERIGHT  EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA np DOT ones(keras DOT backend DOT int_shape( PARERIGHT  PARERIGHT  COMMA atol EQUAL  PARERIGHT  EOM
with self DOT assertRaises( PARERIGHT : EOM
layer DOT reset_states([] * (len( PARERIGHT  + 1 PARERIGHT  PARERIGHT  EOM
def test_specify_state_with_masking( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
_  EQUAL  keras DOT layers DOT Masking( PARERIGHT ( PARERIGHT  EOM
initial_state  EQUAL  [] EOM
output  EQUAL  keras DOT layers DOT LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_return_state( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(batch_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
outputs  EQUAL  layer( PARERIGHT  EOM
state  EQUAL  outputs[] EOM
assert len( PARERIGHT   EQUAL     model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
state  EQUAL  model DOT predict( PARERIGHT  EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA  state COMMA  atol EQUAL  PARERIGHT  EOM
def test_state_reuse( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(batch_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
outputs  EQUAL  layer( PARERIGHT  EOM
output COMMA  state  EQUAL  outputs[] COMMA  outputs[] EOM
output  EQUAL  keras DOT layers DOT LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
outputs  EQUAL  model DOT predict( PARERIGHT  EOM
def test_initial_states_as_other_inputs( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
num_states  EQUAL  2 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
main_inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
inputs  EQUAL  [] + initial_state EOM
layer  EQUAL  layer_class( PARERIGHT  EOM
output  EQUAL  layer( PARERIGHT  EOM
assert initial_state[] in layer DOT _inbound_nodes[] DOT input_tensors EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
main_inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
class LSTMLayerGraphOnlyTest( PARERIGHT : EOM
def test_statefulness_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
with self DOT cached_session( PARERIGHT : EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Embedding(4 COMMA embedding_dim COMMA mask_zero EQUAL  COMMA input_length EQUAL  COMMA atch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
layer  EQUAL  layer_class( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile(optimizer EQUAL ( PARERIGHT  COMMA loss EQUAL  PARERIGHT  EOM
out1  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertEqual(out1 DOT shape COMMA  ( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch(ones(( PARERIGHT  PARERIGHT  COMMA  np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
out2  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out1 DOT max( PARERIGHT  COMMA  out2 DOT max( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
out3  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out2 DOT max( PARERIGHT  COMMA  out3 DOT max( PARERIGHT  PARERIGHT  EOM
model DOT reset_states( PARERIGHT  EOM
out4  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertAllClose( PARERIGHT  EOM
out5  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out4 DOT max( PARERIGHT  COMMA  out5 DOT max( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
left_padded_input  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
left_padded_input[]  EQUAL  0 EOM
left_padded_input[]  EQUAL  0 EOM
out6  EQUAL  model DOT predict( PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
right_padded_input  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
right_padded_input[]  EQUAL  0 EOM
right_padded_input[]  EQUAL  0 EOM
out7  EQUAL  model DOT predict( PARERIGHT  EOM
self DOT assertAllClose( PARERIGHT  EOM
def test_regularizers_LSTM( PARERIGHT : EOM
embedding_dim  EQUAL  4 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
with self DOT cached_session( PARERIGHT : EOM
layer  EQUAL  layer_class(5 COMMA return_sequences EQUAL  COMMA weights EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA recurrent_regularizer EQUAL ( PARERIGHT  COMMA bias_regularizer EQUAL  COMMA activity_regularizer EQUAL  PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
self DOT assertEqual(len( PARERIGHT  COMMA  3 PARERIGHT  EOM
x  EQUAL  keras DOT backend DOT variable(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
layer( PARERIGHT  EOM
self DOT assertEqual(len(layer DOT get_losses_for( PARERIGHT  PARERIGHT  COMMA  1 PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
test DOT main( PARERIGHT import tensorflow as tf EOM
from tensorflow import keras EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Lambda EOM
from keras DOT layers import Dropout EOM
from keras import backend as K EOM
def distributed_label( PARERIGHT : EOM
m  EQUAL  Sequential( PARERIGHT  EOM
m DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
m DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
m DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
m DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
m DOT compile( PARERIGHT  EOM
return m EOM
def distributed_into_one( PARERIGHT : EOM
m  EQUAL  Sequential( PARERIGHT  EOM
m DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
m DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
m DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
m DOT add(Lambda(lambda x: K DOT max( PARERIGHT  PARERIGHT  PARERIGHT  EOM
m DOT add(Dense( PARERIGHT  PARERIGHT  EOM
m DOT compile( PARERIGHT  EOM
return m EOM
def singleLabel_1( PARERIGHT : EOM
m  EQUAL  Sequential( PARERIGHT  EOM
m DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
m DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
m DOT add(Dense( PARERIGHT  PARERIGHT  EOM
m DOT compile( PARERIGHT  EOM
return m EOM
def singleLabel_2( PARERIGHT : EOM
m  EQUAL  Sequential( PARERIGHT  EOM
m DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
m DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
m DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
m DOT add(Dense( PARERIGHT  PARERIGHT  EOM
m DOT compile( PARERIGHT  EOM
return m EOM
def singleLabel_3( PARERIGHT : EOM
m  EQUAL  Sequential( PARERIGHT  EOM
m DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
m DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
m DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
m DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
m DOT add(Dense( PARERIGHT  PARERIGHT  EOM
m DOT compile( PARERIGHT  EOM
return m EOM
def singleLabel_HighNumber( PARERIGHT : EOM
m  EQUAL  Sequential( PARERIGHT  EOM
m DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
m DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
m DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
m DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
m DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
m DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
m DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
m DOT add(Dense( PARERIGHT  PARERIGHT  EOM
m DOT compile( PARERIGHT  EOM
return m EOM
modelDict  EQUAL  {: singleLabel_1 COMMA : singleLabel_2 COMMA : singleLabel_3 COMMA : singleLabel_HighNumber} EOM
from keras DOT layers import Dense COMMA  Flatten COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential COMMA  load_model EOM
from keras DOT optimizers import Adam COMMA  RMSprop EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
from keras DOT layers DOT convolutional import Conv2D COMMA  MaxPooling3D COMMA  Conv3D COMMA MaxPooling2D EOM
from collections import deque EOM
class Research_Models( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT saved_model EQUAL saved_model EOM
self DOT no_cls EQUAL no_cls EOM
self DOT features_dim EQUAL features_dim EOM
self DOT feature_queue  EQUAL  deque( PARERIGHT  EOM
metrics EQUAL [] EOM
if self DOT no_cls> EQUAL 20: EOM
metrics DOT append( PARERIGHT  EOM
if self DOT saved_model is not None: EOM
self DOT model  EQUAL  load_model( PARERIGHT  EOM
elif model_name EQUAL  EQUAL : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model EQUAL self DOT cnn_lstm( PARERIGHT  EOM
else: EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model EQUAL self DOT lstm( PARERIGHT  EOM
def lstm( PARERIGHT : EOM
model EQUAL Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def cnn_lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(32 COMMA  ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA activation EQUAL  COMMA  padding EQUAL  PARERIGHT  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(64 COMMA  ( PARERIGHT  COMMA padding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(128 COMMA  ( PARERIGHT  COMMA padding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(256 COMMA  ( PARERIGHT  COMMA padding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(512 COMMA  ( PARERIGHT  COMMA padding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Flatten( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return modelimport os EOM
global_model_version  EQUAL  30 EOM
global_batch_size  EQUAL  32 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from keras DOT layers import Dense COMMA  Flatten COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential COMMA  load_model EOM
from keras DOT optimizers import Adam COMMA  RMSprop EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
from keras DOT layers DOT convolutional import ( PARERIGHT  EOM
from collections import deque EOM
import sys EOM
class ResearchModels( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT seq_length  EQUAL  seq_length EOM
self DOT load_model  EQUAL  load_model EOM
self DOT saved_model  EQUAL  saved_model EOM
self DOT nb_classes  EQUAL  nb_classes EOM
self DOT feature_queue  EQUAL  deque( PARERIGHT  EOM
metrics  EQUAL  [] EOM
if self DOT nb_classes > EQUAL  10: EOM
metrics DOT append( PARERIGHT  EOM
if self DOT saved_model is not None: EOM
self DOT model  EQUAL  load_model( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT lstm( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT lstm_hof( PARERIGHT  EOM
else: EOM
sys DOT exit( PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
def lstm_hof( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return modelfrom __future__ import division COMMA  print_function EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Dropout COMMA  RepeatVector EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT recurrent import SimpleRNN EOM
from keras DOT layers DOT recurrent import GRU EOM
from keras DOT models import Sequential EOM
import os EOM
import helper EOM
from argparse import ArgumentParser EOM
parser  EQUAL  ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
args  EQUAL  parser DOT parse_args( PARERIGHT  EOM
BABI_DIR  EQUAL  EOM
TASK_NBR  EQUAL  5 EOM
EMBED_HIDDEN_SIZE  EQUAL  100 EOM
BATCH_SIZE  EQUAL  32 EOM
NBR_EPOCHS  EQUAL  50 EOM
train_file COMMA  test_file  EQUAL  helper DOT get_files_for_task( PARERIGHT  EOM
data_train  EQUAL  helper DOT get_stories(os DOT path DOT join( PARERIGHT  PARERIGHT  EOM
data_test  EQUAL  helper DOT get_stories(os DOT path DOT join( PARERIGHT  PARERIGHT  EOM
word2idx  EQUAL  helper DOT build_vocab( PARERIGHT  EOM
vocab_size  EQUAL  len( PARERIGHT  + 1 EOM
story_maxlen COMMA  question_maxlen  EQUAL  helper DOT get_maxlens( PARERIGHT  EOM
Xs_train COMMA  Xq_train COMMA  Y_train  EQUAL  helper DOT vectorize_baseline( PARERIGHT  EOM
Xs_test COMMA  Xq_test COMMA  Y_test  EQUAL  helper DOT vectorize_baseline( PARERIGHT  EOM
story_lstm  EQUAL  Sequential( PARERIGHT  EOM
story_lstm DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
story_lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
question_lstm  EQUAL  Sequential( PARERIGHT  EOM
question_lstm DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
question_lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
question_lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
question_lstm DOT add(RepeatVector( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
loss COMMA  acc  EQUAL  model DOT evaluate( PARERIGHT  EOM
from sklearn DOT preprocessing import MinMaxScaler EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Bidirectional EOM
from keras DOT layers import LSTM COMMA  Flatten COMMA  Conv1D COMMA  LocallyConnected1D COMMA  CuDNNLSTM COMMA  CuDNNGRU COMMA  MaxPooling1D COMMA  GlobalAveragePooling1D COMMA  GlobalMaxPooling1D EOM
from math import sqrt EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT callbacks import ModelCheckpoint EOM
import keras EOM
from sklearn DOT preprocessing import OneHotEncoder EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers DOT advanced_activations import ELU EOM
import tensorflow as tf EOM
import numpy as np EOM
import argparse EOM
import os EOM
from keras DOT callbacks import CSVLogger EOM
from keras import backend as K EOM
def biGRU( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(alphabet_size COMMA  32 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(CuDNNGRU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(CuDNNGRU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def biGRU_big( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(alphabet_size COMMA  32 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(CuDNNGRU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(CuDNNGRU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def biGRU_16bit( PARERIGHT : EOM
K DOT set_floatx( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(alphabet_size COMMA  32 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(CuDNNGRU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(CuDNNGRU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def biLSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(alphabet_size COMMA  32 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(CuDNNLSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(CuDNNLSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def biLSTM_16bit( PARERIGHT : EOM
K DOT set_floatx( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(alphabet_size COMMA  32 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(CuDNNLSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(CuDNNLSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def LSTM_multi( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(alphabet_size COMMA  32 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def LSTM_multi_big( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(alphabet_size COMMA  64 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def LSTM_multi_bn( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(alphabet_size COMMA  32 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def LSTM_multi_16bit( PARERIGHT : EOM
K DOT set_floatx( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(alphabet_size COMMA  32 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def LSTM_multi_selu( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(alphabet_size COMMA  32 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def LSTM_multi_selu_16bit( PARERIGHT : EOM
K DOT set_floatx( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(alphabet_size COMMA  32 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
init  EQUAL  keras DOT initializers DOT lecun_uniform( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def GRU_multi( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(alphabet_size COMMA  32 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(CuDNNGRU( PARERIGHT  PARERIGHT  EOM
model DOT add(CuDNNGRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def GRU_multi_big( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(alphabet_size COMMA  32 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(CuDNNGRU( PARERIGHT  PARERIGHT  EOM
model DOT add(CuDNNGRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def GRU_multi_16bit( PARERIGHT : EOM
K DOT set_floatx( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(alphabet_size COMMA  32 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(CuDNNGRU( PARERIGHT  PARERIGHT  EOM
model DOT add(CuDNNGRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def FC_4layer_16bit( PARERIGHT : EOM
K DOT set_floatx( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(alphabet_size COMMA  5 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(128 COMMA  activation EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(128 COMMA  activation EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(128 COMMA  activation EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(128 COMMA  activation EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def FC_4layer( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(alphabet_size COMMA  5 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(128 COMMA  activation EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(128 COMMA  activation EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(128 COMMA  activation EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(128 COMMA  activation EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def FC_4layer_big( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(alphabet_size COMMA  32 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(128 COMMA  activation EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(128 COMMA  activation EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(128 COMMA  activation EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(128 COMMA  activation EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def FC_16bit( PARERIGHT : EOM
k DOT set_floatx( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
init  EQUAL  keras DOT initializers DOT lecun_uniform( PARERIGHT  EOM
model DOT add(embedding(alphabet_size COMMA  32 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(dense( PARERIGHT  PARERIGHT  EOM
model DOT add(dense( PARERIGHT  PARERIGHT  EOM
model DOT add(dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def FC( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
init  EQUAL  keras DOT initializers DOT lecun_uniform( PARERIGHT  EOM
model DOT add(Embedding(alphabet_size COMMA  32 COMMA  batch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
from __future__ import print_function EOM
import keras EOM
from keras DOT models import Sequential EOM
from keras DOT models import model_from_json EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT callbacks import ModelCheckpoint EOM
from keras DOT callbacks import TensorBoard EOM
from keras DOT optimizers import RMSprop EOM
from keras DOT callbacks import EarlyStopping EOM
import keras DOT backend as K EOM
from keras DOT utils import plot_model EOM
import input_data EOM
import build_model EOM
from LSTM_config import * EOM
def rmse( PARERIGHT : EOM
return K DOT sqrt(K DOT mean(K DOT square( PARERIGHT  COMMA  axis EQUAL  PARERIGHT  PARERIGHT  EOM
train COMMA  validation COMMA  test  EQUAL  input_data DOT read_data_sets( PARERIGHT  EOM
flow_train  EQUAL  train DOT flow EOM
labels_train  EQUAL  train DOT labels EOM
flow_test  EQUAL  test DOT flow EOM
labels_test  EQUAL  test DOT labels EOM
flow_validation  EQUAL  validation DOT flow EOM
labels_validation  EQUAL  validation DOT labels EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(input_shape EQUAL ( PARERIGHT  COMMA output_dim EQUAL  COMMA eturn_sequences EQUAL  COMMA   PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
checkpoint_callbacks  EQUAL  ModelCheckpoint( PARERIGHT  EOM
checkpoint_callbacks_list  EQUAL  [] EOM
tensorboard_callbacks  EQUAL  TensorBoard( PARERIGHT  EOM
tensorboard_callbacks_list  EQUAL  [] EOM
history  EQUAL  model DOT fit(flow_train COMMA labels_train COMMA epochs EQUAL  COMMA batch_size EQUAL  COMMA verbose EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from keras DOT layers import Embedding COMMA  Dense COMMA  Activation COMMA  Input COMMA  LSTM COMMA  Dropout COMMA  Bidirectional COMMA  Merge EOM
from keras DOT optimizers import SGD COMMA  Adam COMMA  Adadelta EOM
from keras DOT callbacks import ModelCheckpoint EOM
from keras DOT preprocessing DOT text import Tokenizer COMMA  text_to_word_sequence EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
import numpy as np EOM
import matplotlib DOT pyplot as plt EOM
import gensim EOM
word2vec  EQUAL  gensim DOT models DOT Word2Vec DOT load( PARERIGHT  EOM
max_len  EQUAL  40 EOM
labels  EQUAL  [] EOM
trainLabeled  EQUAL  [] EOM
trainUnlabeled  EQUAL  [] EOM
tests  EQUAL  [] EOM
labeled_data_path  EQUAL  EOM
text  EQUAL  open( PARERIGHT  EOM
rows  EQUAL  text DOT readlines( PARERIGHT  EOM
lens  EQUAL  [] EOM
for row in rows: EOM
labels DOT append(int( PARERIGHT  PARERIGHT  EOM
trainLabeled DOT append( PARERIGHT  EOM
trainLabeled[]  EQUAL  text_to_word_sequence( PARERIGHT  EOM
lens DOT append(len( PARERIGHT  PARERIGHT  EOM
for idx in range(len( PARERIGHT  PARERIGHT : EOM
trainLabeled[][]  EQUAL  word2vec[][]] EOM
lens  EQUAL  [] EOM
unlabeled_data_path  EQUAL  EOM
text  EQUAL  open( PARERIGHT  EOM
rows  EQUAL  text DOT readlines( PARERIGHT  EOM
for row in rows: EOM
trainUnlabeled DOT append( PARERIGHT  EOM
trainUnlabeled[]  EQUAL  text_to_word_sequence( PARERIGHT  EOM
lens DOT append(len( PARERIGHT  PARERIGHT  EOM
lens  EQUAL  [] EOM
test_data_path  EQUAL  EOM
text  EQUAL  open( PARERIGHT  EOM
rows  EQUAL  text DOT readlines( PARERIGHT  EOM
for i COMMA row in enumerate( PARERIGHT : EOM
if i  EQUAL  EQUAL  0: EOM
continue EOM
for pivot in range(len( PARERIGHT  PARERIGHT : EOM
if row[]  EQUAL  EQUAL  : EOM
tests DOT append( PARERIGHT  EOM
tests[]  EQUAL  text_to_word_sequence( PARERIGHT  EOM
break EOM
lens DOT append(len( PARERIGHT  PARERIGHT  EOM
trainLabeled  EQUAL  pad_sequences( PARERIGHT  EOM
labels  EQUAL  np DOT array( PARERIGHT  EOM
labels  EQUAL  to_categorical( PARERIGHT  EOM
deepLSTM  EQUAL  Sequential( PARERIGHT  EOM
deepLSTM DOT add(LSTM(160 COMMA  dropout EQUAL  COMMA  recurrent_dropout EQUAL  COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
deepLSTM DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
deepLSTM DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
deepLSTM_b  EQUAL  Sequential( PARERIGHT  EOM
deepLSTM_b DOT add(LSTM(160 COMMA  dropout EQUAL  COMMA  recurrent_dropout EQUAL  COMMA  return_sequences EQUAL  COMMA  go_backwards EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
deepLSTM_b DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
deepLSTM_b DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add( Merge( PARERIGHT   PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
opt  EQUAL  Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
filepath EQUAL  EOM
checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
callbacks_list  EQUAL  [] EOM
train_history  EQUAL  model DOT fit( PARERIGHT  EOM
loss  EQUAL  train_history DOT history[] EOM
val_loss  EQUAL  train_history DOT history[] EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT legend( PARERIGHT  EOM
plt DOT xlabel( PARERIGHT  EOM
plt DOT ylabel( PARERIGHT  EOM
plt DOT savefig( PARERIGHT  EOM
plt DOT show( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout EOM
from keras DOT layers import LSTM COMMA  Merge COMMA  Dense EOM
def VQA_MODEL( PARERIGHT : EOM
image_feature_size  EQUAL  4096 EOM
word_feature_size  EQUAL  300 EOM
number_of_LSTM  EQUAL  3 EOM
number_of_hidden_units_LSTM  EQUAL  512 EOM
max_length_questions  EQUAL  30 EOM
number_of_dense_layers  EQUAL  3 EOM
number_of_hidden_units  EQUAL  1024 EOM
activation_function  EQUAL  EOM
dropout_pct  EQUAL  0 DOT 5 EOM
model_image  EQUAL  Sequential( PARERIGHT  EOM
model_image DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language  EQUAL  Sequential( PARERIGHT  EOM
model_language DOT add(LSTM(number_of_hidden_units_LSTM COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
for _ in xrange( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
import pandas as pd EOM
import numpy as np EOM
import keras EOM
from tqdm import tqdm EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Merge EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import LSTM COMMA  GRU EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT utils import np_utils EOM
from keras DOT layers import TimeDistributed COMMA  Lambda EOM
from keras DOT layers import Convolution1D COMMA  GlobalMaxPooling1D EOM
from keras DOT callbacks import ModelCheckpoint EOM
from keras import backend as K EOM
from keras DOT layers DOT advanced_activations import PReLU EOM
import pickle EOM
from sklearn import metrics EOM
from sklearn DOT model_selection import train_test_split EOM
from keras DOT layers import Layer EOM
from keras DOT models import Model EOM
from keras DOT layers DOT core import  Lambda COMMA Dropout COMMA Dense COMMA  Flatten COMMA  Activation EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT wrappers import Bidirectional EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT recurrent import GRU COMMA LSTM EOM
from keras DOT layers DOT pooling import MaxPooling2D EOM
from keras DOT layers import Concatenate COMMA  Input COMMA  concatenate COMMA dot EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras import initializers as initializations EOM
from keras import regularizers EOM
from keras import constraints EOM
from keras import backend as K EOM
from keras DOT callbacks import EarlyStopping COMMA  ModelCheckpoint EOM
import sys EOM
reload( PARERIGHT  EOM
sys DOT setdefaultencoding( PARERIGHT  EOM
import re EOM
import numpy as np EOM
import pandas as pd EOM
import csv EOM
import matplotlib DOT pyplot as plt EOM
import itertools EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA LSTM COMMA Embedding EOM
from keras DOT optimizers import Adam EOM
from keras DOT layers import SpatialDropout1D COMMA Dropout COMMA Conv1D COMMA GlobalMaxPooling1D COMMA MaxPooling1D EOM
from keras DOT callbacks import ModelCheckpoint COMMA  TensorBoard COMMA  Callback COMMA  EarlyStopping EOM
from keras DOT metrics import categorical_accuracy EOM
from keras DOT utils import np_utils EOM
from sklearn DOT model_selection import train_test_split EOM
from sklearn DOT metrics import confusion_matrix COMMA  f1_score COMMA  precision_score COMMA  recall_score EOM
from sklearn DOT metrics import classification_report COMMA  accuracy_score EOM
from sklearn DOT preprocessing import LabelEncoder EOM
seed EQUAL np DOT random DOT seed( PARERIGHT  EOM
phrase EQUAL [] EOM
labels EQUAL [] EOM
train EQUAL pd DOT DataFrame DOT from_csv( PARERIGHT  EOM
def clean_text( PARERIGHT : EOM
words  EQUAL  (re DOT sub( PARERIGHT  PARERIGHT  DOT lower( PARERIGHT  EOM
words  EQUAL  words DOT split( PARERIGHT  EOM
wordList  EQUAL  re DOT sub( PARERIGHT  DOT split( PARERIGHT  EOM
words  EQUAL  [] EOM
words  EQUAL  [] EOM
words EQUAL words DOT split( PARERIGHT  EOM
words EQUAL   DOT join( PARERIGHT  EOM
stemmer  EQUAL  SnowballStemmer( PARERIGHT  EOM
stemmed_words  EQUAL  [] EOM
text  EQUAL   DOT join( PARERIGHT  EOM
return text EOM
train[]  EQUAL  train[] DOT map(lambda x: clean_text( PARERIGHT  PARERIGHT  EOM
y  EQUAL  train[] EOM
le  EQUAL  LabelEncoder( PARERIGHT  EOM
encoded_labels  EQUAL  le DOT fit_transform( PARERIGHT  EOM
y EQUAL encoded_labels EOM
X_train  COMMA  X_test  COMMA  Y_train  COMMA  Y_test  EQUAL  train_test_split( PARERIGHT  EOM
length  EQUAL  [] EOM
for x in X_train: EOM
length DOT append(len(x DOT split( PARERIGHT  PARERIGHT  PARERIGHT  EOM
max_features  EQUAL  10000 EOM
max_words  EQUAL  700 EOM
batch_size  EQUAL  32 EOM
epochs  EQUAL  3 EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts(list( PARERIGHT  PARERIGHT  EOM
X_train  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
X_test  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
X_train  EQUAL pad_sequences( PARERIGHT  EOM
X_test  EQUAL  pad_sequences( PARERIGHT  EOM
model_CNN EQUAL  Sequential( PARERIGHT  EOM
model_CNN DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model_CNN DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_CNN DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model_CNN DOT add(GlobalMaxPooling1D( PARERIGHT  PARERIGHT  EOM
model_CNN DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_CNN DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_CNN DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_CNN DOT compile( PARERIGHT  EOM
model_CNN DOT summary( PARERIGHT  EOM
history EQUAL model_CNN DOT fit(X_train COMMA  Y_train COMMA  validation_data EQUAL ( PARERIGHT  COMMA epochs EQUAL  COMMA  batch_size EQUAL  COMMA  verbose EQUAL  PARERIGHT  EOM
model_LSTM  EQUAL  Sequential( PARERIGHT  EOM
model_LSTM DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model_LSTM DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_LSTM DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_LSTM DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_LSTM DOT compile( PARERIGHT  EOM
model_LSTM DOT summary( PARERIGHT  EOM
history EQUAL model_LSTM DOT fit(X_train COMMA  Y_train COMMA  validation_data EQUAL ( PARERIGHT  COMMA epochs EQUAL  COMMA  batch_size EQUAL  COMMA  verbose EQUAL  PARERIGHT  EOM
model_LSTM  EQUAL  Sequential( PARERIGHT  EOM
model_LSTM DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model_LSTM DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_LSTM DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model_LSTM DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model_LSTM DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_LSTM DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_LSTM DOT compile( PARERIGHT  EOM
history  EQUAL  model_LSTM DOT fit(X_train COMMA  Y_train COMMA  validation_data EQUAL ( PARERIGHT  COMMA  epochs EQUAL  COMMA  batch_size EQUAL  COMMA verbose EQUAL  PARERIGHT  EOM
embeddings_index  EQUAL  dict( PARERIGHT  EOM
f  EQUAL  open( PARERIGHT  EOM
for line in f: EOM
values  EQUAL  line DOT split( PARERIGHT  EOM
word  EQUAL  values[] EOM
coefs  EQUAL  np DOT asarray( PARERIGHT  EOM
embeddings_index[]  EQUAL  coefs EOM
f DOT close( PARERIGHT  EOM
embedding_matrix  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
for word COMMA  index in tokenizer DOT word_index DOT items( PARERIGHT : EOM
if index > max_features - 1: EOM
break EOM
else: EOM
embedding_vector  EQUAL  embeddings_index DOT get( PARERIGHT  EOM
if embedding_vector is not None: EOM
embedding_matrix[]  EQUAL  embedding_vector EOM
model_glove  EQUAL  Sequential( PARERIGHT  EOM
model_glove DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model_glove DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_glove DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model_glove DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model_glove DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_glove DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_glove DOT compile( PARERIGHT  EOM
history  EQUAL  model_glove DOT fit(X_train COMMA  Y_train COMMA  validation_data EQUAL ( PARERIGHT  COMMA  epochs EQUAL  COMMA  batch_size EQUAL  COMMA verbose EQUAL  PARERIGHT  EOM
def plot_confusion_matrix( PARERIGHT : EOM
cm  EQUAL  cm DOT astype( PARERIGHT  / cm DOT sum( PARERIGHT [] EOM
title  EQUAL  EOM
else: EOM
title  EQUAL  EOM
plt DOT imshow( PARERIGHT  EOM
plt DOT title( PARERIGHT  EOM
plt DOT colorbar( PARERIGHT  EOM
tick_marks  EQUAL  np DOT arange(len( PARERIGHT  PARERIGHT  EOM
plt DOT xticks( PARERIGHT  EOM
plt DOT yticks( PARERIGHT  EOM
fmt  EQUAL   if normalize else EOM
thresh  EQUAL  cm DOT max( PARERIGHT  / 2 DOT  EOM
for i COMMA  j in itertools DOT product(range( PARERIGHT  COMMA  range( PARERIGHT  PARERIGHT : EOM
plt DOT text(j COMMA  i COMMA  format( PARERIGHT  COMMA horizontalalignment EQUAL  COMMA whiteblack EOM
plt DOT tight_layout( PARERIGHT  EOM
plt DOT ylabel( PARERIGHT  EOM
plt DOT xlabel( PARERIGHT  EOM
plt DOT show( PARERIGHT  EOM
def full_multiclass_report( PARERIGHT : EOM
if not binary: EOM
y_true  EQUAL  np DOT argmax( PARERIGHT  EOM
y_pred  EQUAL  model DOT predict_classes( PARERIGHT  EOM
cnf_matrix  EQUAL  confusion_matrix( PARERIGHT  EOM
plot_confusion_matrix( PARERIGHT  EOM
fig1  EQUAL  plt DOT figure( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT legend( PARERIGHT  EOM
plt DOT xlabel( PARERIGHT  EOM
plt DOT ylabel( PARERIGHT  EOM
plt DOT title( PARERIGHT  EOM
fig1 DOT savefig( PARERIGHT  EOM
plt DOT show( PARERIGHT  EOM
fig2 EQUAL plt DOT figure( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT legend( PARERIGHT  EOM
plt DOT xlabel( PARERIGHT  EOM
plt DOT ylabel( PARERIGHT  EOM
plt DOT title( PARERIGHT  EOM
fig2 DOT savefig( PARERIGHT  EOM
plt DOT show( PARERIGHT  EOM
le  EQUAL  LabelEncoder( PARERIGHT  EOM
encoded_labels  EQUAL  le DOT fit_transform( PARERIGHT  EOM
full_multiclass_report(model3_LSTM COMMA X_test COMMA Y_test COMMA le DOT inverse_transform(np DOT arange( PARERIGHT  PARERIGHT  PARERIGHT  EOM
scores  EQUAL  model_LSTM DOT evaluate( PARERIGHT  EOM
import json EOM
import numpy as np EOM
import pandas as pd EOM
import keras EOM
from keras DOT models import Sequential EOM
from keras DOT models import Model EOM
from keras DOT layers import ( PARERIGHT  EOM
class MusicModel( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT n_vocab  EQUAL  n_vocab EOM
pass EOM
def OneLayerLSTM( PARERIGHT : EOM
self DOT model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return self DOT model EOM
def TwoLayerLSTM( PARERIGHT : EOM
return self DOT model EOM
def LayersRNNGeneric( PARERIGHT : EOM
self DOT model  EQUAL  Sequential([] PARERIGHT  EOM
for idx COMMA  layer in enumerate( PARERIGHT : EOM
if layer is : EOM
self DOT model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
elif layer is : EOM
self DOT model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
elif layer is : EOM
self DOT model DOT add(RNN( PARERIGHT  PARERIGHT  EOM
else: EOM
raise ValueError ( PARERIGHT  EOM
self DOT model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return self DOT model EOM
def LSTMSkipConnection( PARERIGHT : EOM
embedded  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
drop  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
lstm_layer1  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
lstm_layer2  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
layer_output  EQUAL  [] EOM
prev_out  EQUAL  drop EOM
for idx COMMA  layer in enumerate( PARERIGHT : EOM
out  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
layer_output DOT append( PARERIGHT  EOM
prev_out  EQUAL  out EOM
seq_concat  EQUAL  concatenate( PARERIGHT  EOM
output_layer  EQUAL  TimeDistributed(Dense( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
self DOT model  EQUAL  Model( PARERIGHT  EOM
return self DOT model EOM
def OneLayerGru( PARERIGHT : EOM
self DOT model  EQUAL  Sequential([] PARERIGHT  EOM
return self DOT model EOM
def OneLayerRNN( PARERIGHT : EOM
self DOT model  EQUAL  Sequential([] PARERIGHT  EOM
return self DOT model EOM
from __future__ import print_function EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Conv1D COMMA  MaxPooling1D EOM
from keras DOT datasets import imdb EOM
top_words  EQUAL  20000 EOM
maxlen  EQUAL  100 EOM
embedding_size  EQUAL  128 EOM
kernel_size  EQUAL  5 EOM
filters  EQUAL  64 EOM
pool_size  EQUAL  4 EOM
lstm_output_size  EQUAL  70 EOM
batch_size  EQUAL  30 EOM
epochs  EQUAL  2 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
x_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
x_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(x_train COMMA  y_train COMMA batch_size EQUAL  COMMA epochs EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  EOM
import keras DOT backend as k EOM
from keras import layers EOM
from keras DOT layers import Input COMMA  Dense COMMA  Reshape COMMA  Flatten COMMA  Embedding COMMA  Dropout COMMA  LSTM EOM
from keras DOT layers DOT advanced_activations import LeakyReLU EOM
from keras DOT layers DOT convolutional import UpSampling2D COMMA  Conv2D EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT optimizers import Adam EOM
from keras DOT utils DOT generic_utils import Progbar EOM
import numpy as np EOM
import pickle EOM
import datetime EOM
from ml DOT public import * EOM
def ann_build_generator( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def ann_train_test( PARERIGHT : EOM
st  EQUAL  datetime DOT datetime DOT now( PARERIGHT  EOM
model  EQUAL  ann_build_generator(len( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
with open( PARERIGHT  as handle: EOM
pickle DOT dump( PARERIGHT  EOM
Y_pred  EQUAL  model DOT predict( PARERIGHT  EOM
tp COMMA  tn COMMA  fp COMMA  fn  EQUAL  pred_test_lstm( PARERIGHT  EOM
ed  EQUAL  datetime DOT datetime DOT now( PARERIGHT  EOM
return  + gen_result_line( PARERIGHT  EOM
def dnn_build_generator( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def dnn_train_test( PARERIGHT : EOM
st  EQUAL  datetime DOT datetime DOT now( PARERIGHT  EOM
model  EQUAL  dnn_build_generator(len( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
with open( PARERIGHT  as handle: EOM
pickle DOT dump( PARERIGHT  EOM
Y_pred  EQUAL  model DOT predict( PARERIGHT  EOM
tp COMMA  tn COMMA  fp COMMA  fn  EQUAL  pred_test_lstm( PARERIGHT  EOM
ed  EQUAL  datetime DOT datetime DOT now( PARERIGHT  EOM
return  + gen_result_line( PARERIGHT  EOM
def lstm_build_generator( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(4 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm_build_generator2( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(4 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm_data_gen( PARERIGHT : EOM
n_X_train  EQUAL  [] EOM
cur_X_train  EQUAL  [] EOM
n_Y_train  EQUAL  [] EOM
cur_Y_train  EQUAL  [] EOM
for i in range(cnt COMMA  len( PARERIGHT  PARERIGHT : EOM
n_X_train DOT append( PARERIGHT  EOM
n_Y_train DOT append( PARERIGHT  EOM
return np DOT array( PARERIGHT  COMMA  np DOT array( PARERIGHT  EOM
def lstm_train_test( PARERIGHT : EOM
st  EQUAL  datetime DOT datetime DOT now( PARERIGHT  EOM
model  EQUAL  lstm_build_generator(len( PARERIGHT  PARERIGHT  EOM
n_X_train COMMA  n_Y_train  EQUAL  lstm_data_gen( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
n_X_test COMMA  n_Y_test  EQUAL  lstm_data_gen( PARERIGHT  EOM
Y_pred  EQUAL  model DOT predict( PARERIGHT  EOM
tp COMMA  tn COMMA  fp COMMA  fn  EQUAL  pred_test_lstm( PARERIGHT  EOM
return  + gen_result_line( PARERIGHT import sys EOM
import logging EOM
import re EOM
import os EOM
import dill EOM
import inspect EOM
import itertools EOM
from collections import OrderedDict EOM
import numpy as np EOM
from gensim DOT models DOT doc2vec import TaggedDocument EOM
from gensim DOT models import Doc2Vec COMMA  Word2Vec EOM
import fasttext EOM
import keras EOM
import keras DOT preprocessing EOM
import keras DOT preprocessing DOT text EOM
import keras DOT preprocessing DOT sequence EOM
from keras DOT utils DOT generic_utils import Progbar EOM
from datasets import TweetSentiment COMMA  Tweet EOM
_thismodule  EQUAL  sys DOT modules[] EOM
sys DOT path DOT append( PARERIGHT  EOM
import encoder as unsupervised_sentiment_neuron_encoder EOM
sys DOT path DOT pop( PARERIGHT  EOM
def grouper( PARERIGHT : EOM
args  EQUAL  [] * n EOM
return itertools DOT zip_longest( PARERIGHT  EOM
def find_model_class_by_name( PARERIGHT : EOM
model_class  EQUAL  None EOM
for name COMMA  obj in inspect DOT getmembers( PARERIGHT : EOM
if inspect DOT isclass( PARERIGHT  and name  EQUAL ( PARERIGHT   EQUAL             model_class  EQUAL  obj EOM
if model_class is None: EOM
raise Exception( DOT format( PARERIGHT  PARERIGHT  EOM
return model_class EOM
class TweetToFeaturesModel( PARERIGHT : EOM
def _check_features_range( PARERIGHT : EOM
if not all( PARERIGHT : EOM
logging DOT warning( DOT format( PARERIGHT  PARERIGHT  EOM
def load( PARERIGHT : EOM
raise NotImplementedError( PARERIGHT  EOM
def save( PARERIGHT : EOM
raise NotImplementedError( PARERIGHT  EOM
def get_features( PARERIGHT : EOM
raise NotImplementedError( PARERIGHT  EOM
def get_features_shape( PARERIGHT : EOM
raise NotImplementedError( PARERIGHT  EOM
def batch_get_features( PARERIGHT : EOM
if verbose: EOM
progress  EQUAL  Progbar(target EQUAL ( PARERIGHT  PARERIGHT  EOM
X  EQUAL  np DOT zeros((len( PARERIGHT  COMMA  PARERIGHT  + self DOT get_features_shape( PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
for i COMMA  tweet in enumerate( PARERIGHT : EOM
X[]  EQUAL  self DOT get_features( PARERIGHT  EOM
if verbose: EOM
progress DOT update( PARERIGHT  EOM
return X EOM
class FasttextEmbedding( PARERIGHT : EOM
def load( PARERIGHT : EOM
instance  EQUAL  cls( PARERIGHT  EOM
instance DOT model  EQUAL  fasttext DOT load_model( PARERIGHT  EOM
return instance EOM
def train( PARERIGHT : EOM
assert NotImplementedError( PARERIGHT  EOM
def get_features_number( PARERIGHT : EOM
class FasttextDocumentEmbedding( PARERIGHT : EOM
model_name  EQUAL  EOM
def get_features( PARERIGHT : EOM
features  EQUAL  self DOT model[] EOM
self DOT _check_features_range( PARERIGHT  EOM
return features EOM
def get_features_shape( PARERIGHT : EOM
return (self DOT get_features_number( PARERIGHT  COMMA   PARERIGHT  EOM
class FasttextWordEmbedding( PARERIGHT : EOM
model_name  EQUAL  EOM
def __init__( PARERIGHT : EOM
self DOT max_words  EQUAL  max_words EOM
def get_features( PARERIGHT : EOM
features  EQUAL  np DOT zeros((self DOT get_max_words( PARERIGHT  COMMA  self DOT get_features_number( PARERIGHT  PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
for i COMMA  word in enumerate(tweet DOT get_words( PARERIGHT [] PARERIGHT : EOM
features[]  EQUAL  self DOT model[] EOM
return features EOM
def get_max_words( PARERIGHT : EOM
return self DOT max_words EOM
def get_features_shape( PARERIGHT : EOM
return (self DOT max_words COMMA  self DOT get_features_number( PARERIGHT  PARERIGHT  EOM
class TweetSentimentModel( PARERIGHT : EOM
def _make_dirs_for_files( PARERIGHT : EOM
dirname  EQUAL  os DOT path DOT dirname( PARERIGHT  EOM
if dirname: EOM
os DOT makedirs( PARERIGHT  EOM
def save( PARERIGHT : EOM
self DOT _make_dirs_for_files( PARERIGHT  EOM
with open( PARERIGHT  as f: EOM
dill DOT dump( PARERIGHT  EOM
def load( PARERIGHT : EOM
with open( PARERIGHT  as f: EOM
instance  EQUAL  dill DOT load( PARERIGHT  EOM
assert isinstance( PARERIGHT  EOM
return instance EOM
def predict_sentiment_real( PARERIGHT : EOM
raise NotImplementedError( PARERIGHT  EOM
def predict_sentiment_enum( PARERIGHT : EOM
real_value_of_sentiment  EQUAL  self DOT predict_sentiment_real( PARERIGHT  EOM
return TweetSentiment DOT from_real_value( PARERIGHT  EOM
def is_positive( PARERIGHT : EOM
return self DOT get_sentiment( PARERIGHT  > self DOT NEUTRAL_THRESHOLD EOM
def is_negative( PARERIGHT : EOM
return self DOT get_sentiment( PARERIGHT  < -self DOT NEUTRAL_THRESHOLD EOM
def is_neutral( PARERIGHT : EOM
return not self DOT is_positive( PARERIGHT  and not self DOT is_negative( PARERIGHT  EOM
def train( PARERIGHT : EOM
raise NotImplementedError( PARERIGHT  EOM
def test( PARERIGHT : EOM
total  EQUAL  0 EOM
for tweet in tweets: EOM
assert tweet DOT polarity is not None EOM
if tweet DOT is_neutral( PARERIGHT  and without_neutral: EOM
continue EOM
if tweet DOT polarity  EQUAL  EQUAL  self DOT predict_sentiment_enum( PARERIGHT : EOM
correct + EQUAL  1 EOM
total + EQUAL  1 EOM
return correct / total EOM
class FeaturesToSentimentModel( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT tweet_to_features  EQUAL  tweet_to_features EOM
self DOT features_to_sentiment  EQUAL  features_to_sentiment EOM
def save( PARERIGHT : EOM
self DOT _make_dirs_for_files( PARERIGHT  EOM
self DOT save_features_to_sentiment( PARERIGHT  EOM
def load( PARERIGHT : EOM
instance  EQUAL  cls( PARERIGHT  EOM
instance DOT load_features_to_sentiment( PARERIGHT  EOM
return instance EOM
class KerasFeaturesToSentimentModel( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
FeaturesToSentimentModel DOT __init__( PARERIGHT  EOM
self DOT num_epochs  EQUAL  num_epochs EOM
self DOT batch_size  EQUAL  batch_size EOM
self DOT dropout  EQUAL  dropout EOM
self DOT recurrent_dropout  EQUAL  recurrent_dropout EOM
def save_features_to_sentiment( PARERIGHT : EOM
self DOT features_to_sentiment DOT save( PARERIGHT  EOM
def load_features_to_sentiment( PARERIGHT : EOM
self DOT features_to_sentiment  EQUAL  keras DOT models DOT load_model( PARERIGHT  EOM
def predict_sentiment_real( PARERIGHT : EOM
if isinstance( PARERIGHT : EOM
tweets  EQUAL  [] EOM
single_instance  EQUAL  True EOM
else: EOM
single_instance  EQUAL  False EOM
X  EQUAL  self DOT tweet_to_features DOT batch_get_features( PARERIGHT  EOM
ys  EQUAL  self DOT features_to_sentiment DOT predict( PARERIGHT  EOM
if single_instance: EOM
return 2 * ys[][] - 1 EOM
else: EOM
return [] - 1 for y in ys] EOM
def _features_generator( PARERIGHT : EOM
for chunk in grouper(itertools DOT cycle( PARERIGHT  COMMA  self DOT batch_size PARERIGHT : EOM
X  EQUAL  self DOT tweet_to_features DOT batch_get_features( PARERIGHT  EOM
y  EQUAL  [] EOM
yield X COMMA  y EOM
def train( PARERIGHT : EOM
self DOT features_to_sentiment DOT fit_generator(self DOT _features_generator( PARERIGHT  COMMA s_per_epoch EQUAL (len( PARERIGHT  // self DOT batch_size PARERIGHT  - 1 COMMA epochs EQUAL  COMMA verbose EQUAL  PARERIGHT  EOM
class KerasLSTMFeaturesToSentimentModel( PARERIGHT : EOM
model_name  EQUAL  EOM
def __init__( PARERIGHT : EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
KerasFeaturesToSentimentModel DOT __init__( PARERIGHT  EOM
assert len(tweet_to_features DOT get_features_shape( PARERIGHT  PARERIGHT   EQUAL  COMMA  EOM
if len( PARERIGHT  > 1: EOM
model DOT add(keras DOT layers DOT LSTM(lstm_layer_sizes[] COMMA return_sequences EQUAL  COMMA dropout EQUAL  COMMA recurrent_dropout EQUAL  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
for size in lstm_layer_sizes[]: EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras DOT layers DOT LSTM(lstm_layer_sizes[] COMMA  dropout EQUAL  COMMA  recurrent_dropout EQUAL  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
class KerasGRUFeaturesToSentimentModel( PARERIGHT : EOM
model_name  EQUAL  EOM
def __init__( PARERIGHT : EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
KerasFeaturesToSentimentModel DOT __init__( PARERIGHT  EOM
assert len(tweet_to_features DOT get_features_shape( PARERIGHT  PARERIGHT   EQUAL  COMMA  EOM
if len( PARERIGHT  > 1: EOM
model DOT add(keras DOT layers DOT LSTM(gru_layer_sizes[] COMMA return_sequences EQUAL  COMMA dropout EQUAL  COMMA recurrent_dropout EQUAL  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
for size in gru_layer_sizes[]: EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras DOT layers DOT LSTM(gru_layer_sizes[] COMMA  dropout EQUAL  COMMA  recurrent_dropout EQUAL  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
class KerasCNNFeaturesToSentimentModel( PARERIGHT : EOM
model_name  EQUAL  EOM
def __init__( PARERIGHT : EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
KerasFeaturesToSentimentModel DOT __init__( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Convolution1D(conv_layer_sizes[] COMMA  3 COMMA  padding EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
for size in conv_layer_sizes[]: EOM
model DOT add(keras DOT layers DOT Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT model  EQUAL  model EOM
class KerasCLSTMFeaturesToSentimentModel( PARERIGHT : EOM
model_name  EQUAL  EOM
def __init__( PARERIGHT : EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
KerasFeaturesToSentimentModel DOT __init__( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Convolution1D(conv_layer_size COMMA 5 COMMA padding EQUAL  COMMA activation EQUAL  COMMA strides EQUAL  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT model  EQUAL  model EOM
class KerasDenseFeaturesToSentimentModel( PARERIGHT : EOM
model_name  EQUAL  EOM
def __init__( PARERIGHT : EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
KerasFeaturesToSentimentModel DOT __init__( PARERIGHT  EOM
assert len(tweet_to_features DOT get_features_shape( PARERIGHT  PARERIGHT   EQUAL  COMMA  EOM
if hidden_dense_layer_sizes: EOM
model DOT add(keras DOT layers DOT Dense(hidden_dense_layer_sizes[] COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
for size in hidden_dense_layer_sizes[]: EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras DOT layers DOT Dense(1 COMMA  activation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
class KerasTweetSentimentModel( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
TweetSentimentModel DOT __init__( PARERIGHT  EOM
self DOT tokenizer  EQUAL  keras DOT preprocessing DOT text DOT Tokenizer( PARERIGHT  EOM
self DOT max_words  EQUAL  max_words EOM
self DOT max_tweet_length  EQUAL  max_tweet_length EOM
self DOT embedding_vector_length  EQUAL  embedding_vector_length EOM
self DOT num_epochs  EQUAL  num_epochs EOM
self DOT batch_size  EQUAL  batch_size EOM
self DOT dropout  EQUAL  dropout EOM
self DOT recurrent_dropout  EQUAL  recurrent_dropout EOM
self DOT model  EQUAL  model EOM
def save( PARERIGHT : EOM
self DOT _make_dirs_for_files( PARERIGHT  EOM
tokenizer_filename  EQUAL  file_prefix + EOM
model_params_filename  EQUAL  file_prefix + EOM
keras_model_file_name  EQUAL  file_prefix + EOM
with open( PARERIGHT  as tf: EOM
dill DOT dump( PARERIGHT  EOM
with open( PARERIGHT  as mpf: EOM
dill DOT dump( PARERIGHT  EOM
self DOT model DOT save( PARERIGHT  EOM
def load( PARERIGHT : EOM
tokenizer_filename  EQUAL  file_prefix + EOM
model_params_filename  EQUAL  file_prefix + EOM
keras_model_file_name  EQUAL  file_prefix + EOM
instance  EQUAL  cls( PARERIGHT  EOM
with open( PARERIGHT  as tf: EOM
instance DOT tokenizer  EQUAL  dill DOT load( PARERIGHT  EOM
with open( PARERIGHT  as mpf: EOM
instance DOT max_words COMMA  instance DOT max_tweet_length COMMA  instance DOT embedding_vector_length COMMA  instance DOT num_epochs COMMA  instance DOT batch_size  EQUAL  dill DOT load( PARERIGHT  EOM
instance DOT model  EQUAL  keras DOT models DOT load_model( PARERIGHT  EOM
return instance EOM
def _train_tokenizer( PARERIGHT : EOM
self DOT tokenizer DOT fit_on_texts(t DOT get_text( PARERIGHT  for t in tweets PARERIGHT  EOM
def _tweets_to_xy_tensors( PARERIGHT : EOM
texts COMMA  y  EQUAL  zip(*[] PARERIGHT  EOM
X  EQUAL  self DOT tokenizer DOT texts_to_sequences( PARERIGHT  EOM
X  EQUAL  keras DOT preprocessing DOT sequence DOT pad_sequences( PARERIGHT  EOM
return X COMMA  list( PARERIGHT  EOM
def _tweets_to_x_tensor( PARERIGHT : EOM
X  EQUAL  self DOT tokenizer DOT texts_to_sequences(t DOT get_text( PARERIGHT  for t in tweets PARERIGHT  EOM
X  EQUAL  keras DOT preprocessing DOT sequence DOT pad_sequences( PARERIGHT  EOM
return X EOM
def train( PARERIGHT : EOM
num_epochs  EQUAL  num_epochs or self DOT num_epochs EOM
batch_size  EQUAL  batch_size or self DOT batch_size EOM
self DOT _train_tokenizer( PARERIGHT  EOM
X_train COMMA  y_train  EQUAL  self DOT _tweets_to_xy_tensors( PARERIGHT  EOM
self DOT model DOT fit( PARERIGHT  EOM
def predict_sentiment_real( PARERIGHT : EOM
if isinstance( PARERIGHT : EOM
Xs  EQUAL  self DOT _tweets_to_x_tensor( PARERIGHT  EOM
ys  EQUAL  self DOT model DOT predict( PARERIGHT  EOM
return 2 * ys[][] - 1 EOM
else: EOM
Xs  EQUAL  self DOT _tweets_to_x_tensor( PARERIGHT  EOM
ys  EQUAL  self DOT model DOT predict( PARERIGHT  EOM
return [] - 1 for y in ys] EOM
class KerasCLSTMModel( PARERIGHT : EOM
model_name  EQUAL  EOM
def __init__( PARERIGHT : EOM
KerasTweetSentimentModel DOT __init__( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT model  EQUAL  model EOM
class KerasCNNModel( PARERIGHT : EOM
model_name  EQUAL  EOM
def __init__( PARERIGHT : EOM
KerasTweetSentimentModel DOT __init__( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT embeddings DOT Embedding( PARERIGHT  PARERIGHT  EOM
for size in conv_layer_sizes: EOM
model DOT add(keras DOT layers DOT Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT model  EQUAL  model EOM
class KerasLSTMModel( PARERIGHT : EOM
model_name  EQUAL  EOM
def __init__( PARERIGHT : EOM
KerasTweetSentimentModel DOT __init__( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT embeddings DOT Embedding( PARERIGHT  PARERIGHT  EOM
for size in lstm_layer_sizes[]: EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT model  EQUAL  model EOM
class KerasGRUModel( PARERIGHT : EOM
model_name  EQUAL  EOM
def __init__( PARERIGHT : EOM
KerasTweetSentimentModel DOT __init__( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT embeddings DOT Embedding( PARERIGHT  PARERIGHT  EOM
for size in gru_layer_sizes[]: EOM
model DOT add(keras DOT layers DOT GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT model  EQUAL  model EOM
class UnsupervisedSentimentNeuronSingle( PARERIGHT : EOM
model_name  EQUAL  EOM
def __init__( PARERIGHT : EOM
self DOT model  EQUAL  unsupervised_sentiment_neuron_encoder DOT Model( PARERIGHT  EOM
def load( PARERIGHT : EOM
return UnsupervisedSentimentNeuronSingle( PARERIGHT  EOM
def train( PARERIGHT : EOM
assert NotImplementedError( PARERIGHT  EOM
def predict_sentiment_real( PARERIGHT : EOM
features  EQUAL  self DOT model DOT transform([] PARERIGHT  EOM
return features[] EOM
class UnsupervisedSentimentNeuronEncoder( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT model  EQUAL  unsupervised_sentiment_neuron_encoder DOT Model( PARERIGHT  EOM
def load( PARERIGHT : EOM
return UnsupervisedSentimentNeuronEncoder( PARERIGHT  EOM
def train( PARERIGHT : EOM
assert NotImplementedError( PARERIGHT  EOM
def batch_get_features( PARERIGHT : EOM
features  EQUAL  self DOT model DOT transform([] PARERIGHT  EOM
return features EOM
def get_features( PARERIGHT : EOM
features  EQUAL  self DOT model DOT transform(tweet DOT get_text( PARERIGHT  PARERIGHT  EOM
self DOT _check_features_range( PARERIGHT  EOM
return features EOM
def get_features_number( PARERIGHT : EOM
def get_features_shape( PARERIGHT : EOM
return (self DOT get_features_number( PARERIGHT  COMMA   PARERIGHT  EOM
class Doc2VecEmbedding( PARERIGHT : EOM
model_name  EQUAL  EOM
def save( PARERIGHT : EOM
self DOT model DOT save( PARERIGHT  EOM
def load( PARERIGHT : EOM
new_instance  EQUAL  Doc2VecEmbedding( PARERIGHT  EOM
new_instance DOT model  EQUAL  Doc2Vec DOT load( PARERIGHT  EOM
return new_instance EOM
def __init__( PARERIGHT : EOM
self DOT model  EQUAL  Doc2Vec( PARERIGHT  EOM
self DOT _epochs  EQUAL  epochs EOM
self DOT _tweet_to_index  EQUAL  {} EOM
def train( PARERIGHT : EOM
logging DOT info( PARERIGHT  EOM
tagged_docs  EQUAL  [] EOM
for index COMMA  tweet in enumerate( PARERIGHT : EOM
tagged_docs DOT append(TaggedDocument(tweet DOT get_words( PARERIGHT  COMMA  [] PARERIGHT  PARERIGHT  EOM
self DOT _tweet_to_index[]  EQUAL  index EOM
self DOT model DOT build_vocab( PARERIGHT  EOM
self DOT model DOT train(tagged_docs COMMA  epochs EQUAL  COMMA  total_examples EQUAL ( PARERIGHT  PARERIGHT  EOM
def get_features( PARERIGHT : EOM
features  EQUAL  self DOT model DOT infer_vector(tweet DOT get_words( PARERIGHT  PARERIGHT  EOM
self DOT _check_features_range( PARERIGHT  EOM
return features EOM
def train_vector_by_index( PARERIGHT : EOM
return self DOT model[] EOM
def get_features_number( PARERIGHT : EOM
return self DOT model DOT vector_size EOM
def get_features_shape( PARERIGHT : EOM
return (self DOT get_features_number( PARERIGHT  COMMA   PARERIGHT  EOM
def _train_item_tag( PARERIGHT : EOM
return  DOT format( PARERIGHT  EOM
class Word2VecEmbedding( PARERIGHT : EOM
model_name  EQUAL  EOM
def save( PARERIGHT : EOM
self DOT model DOT save( PARERIGHT  EOM
def load( PARERIGHT : EOM
new_instance  EQUAL  Word2VecEmbedding( PARERIGHT  EOM
new_instance DOT model  EQUAL  Word2Vec DOT load( PARERIGHT  EOM
return new_instance EOM
def __init__( PARERIGHT : EOM
self DOT model  EQUAL  Word2Vec( PARERIGHT  EOM
self DOT _epochs  EQUAL  epochs EOM
self DOT max_words  EQUAL  25 EOM
def train( PARERIGHT : EOM
logging DOT info( PARERIGHT  EOM
texts  EQUAL  [] EOM
self DOT model DOT build_vocab( PARERIGHT  EOM
self DOT model DOT train(texts COMMA  epochs EQUAL  COMMA  total_examples EQUAL ( PARERIGHT  PARERIGHT  EOM
def get_features( PARERIGHT : EOM
features  EQUAL  np DOT zeros((self DOT get_max_words( PARERIGHT  COMMA  self DOT get_features_number( PARERIGHT  PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
for i COMMA  word in enumerate(tweet DOT get_words( PARERIGHT [] PARERIGHT : EOM
features[]  EQUAL  self DOT model DOT infer_vector[] EOM
return features EOM
def get_features_number( PARERIGHT : EOM
return self DOT model DOT vector_size EOM
def get_features_shape( PARERIGHT : EOM
return (self DOT model DOT vector_size( PARERIGHT  COMMA  self DOT max_words PARERIGHT  EOM
class RussianSentimentLexicon( PARERIGHT : EOM
word_to_prob  EQUAL  {} EOM
with open( PARERIGHT  as f: EOM
for line in f: EOM
m  EQUAL  re DOT match( PARERIGHT  EOM
if m: EOM
word  EQUAL  m DOT group( PARERIGHT  EOM
probability  EQUAL  float(m DOT group( PARERIGHT  PARERIGHT  EOM
word_to_prob[]  EQUAL         self DOT _word_to_prob  EQUAL  OrderedDict( PARERIGHT  EOM
self DOT _word_to_index  EQUAL  {} EOM
for index COMMA  word in enumerate(sorted(word_to_prob DOT keys( PARERIGHT  PARERIGHT  PARERIGHT : EOM
self DOT _word_to_prob[]  EQUAL  word_to_prob[] EOM
self DOT _word_to_index[]  EQUAL  index EOM
def size( PARERIGHT : EOM
return len( PARERIGHT  EOM
def word_pos( PARERIGHT : EOM
return self DOT _word_to_index DOT get(word DOT upper( PARERIGHT  PARERIGHT  EOM
def words( PARERIGHT : EOM
return self DOT _word_to_prob DOT keys( PARERIGHT  EOM
def sentiment_probability( PARERIGHT : EOM
return self DOT _word_to_prob DOT get(word DOT upper( PARERIGHT  COMMA  0 DOT 0 PARERIGHT  EOM
def has_sentiment( PARERIGHT : EOM
return self DOT sentiment_probability( PARERIGHT  > 0 EOM
def __contains__( PARERIGHT : EOM
return self DOT has_sentiment( PARERIGHT  EOM
class SimpleUnigramModel( PARERIGHT : EOM
model_name  EQUAL  EOM
def __init__( PARERIGHT : EOM
self DOT lexicon  EQUAL  RussianSentimentLexicon( PARERIGHT  EOM
def load( PARERIGHT : EOM
return SimpleUnigramModel( PARERIGHT  EOM
def train( PARERIGHT : EOM
assert NotImplementedError( EOM
def get_features_number( PARERIGHT : EOM
return self DOT lexicon DOT size( PARERIGHT  EOM
def get_features( PARERIGHT : EOM
features  EQUAL  [] * self DOT get_features_number( PARERIGHT  EOM
for word in tweet DOT get_words( PARERIGHT : EOM
idx  EQUAL  self DOT lexicon DOT word_pos( PARERIGHT  EOM
if idx is not None: EOM
features[]  EQUAL  1 EOM
return featuresimport numpy as np EOM
from keras DOT callbacks import TensorBoard COMMA  ModelCheckpoint EOM
from keras DOT layers import Dense COMMA  LSTM COMMA  Merge EOM
from keras DOT models import Sequential COMMA  model_from_json EOM
from keras DOT optimizers import RMSprop EOM
import keras EOM
BATCH_SIZE  EQUAL  1000 EOM
import Formatter EOM
period_sample  EQUAL  Formatter DOT PeriodSample( PARERIGHT  EOM
INPUT_SIZE  EQUAL  24 EOM
def createModel( PARERIGHT : EOM
cost  EQUAL  RMSprop( PARERIGHT  EOM
EMA_lstm  EQUAL  Sequential( PARERIGHT  EOM
EMA_lstm DOT add(LSTM(INPUT_SIZE COMMA  input_shape EQUAL ( PARERIGHT  COMMA   batch_input_shape EQUAL ( PARERIGHT  COMMA  dropout EQUAL  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
K_lstm  EQUAL  Sequential( PARERIGHT  EOM
K_lstm DOT add(LSTM(INPUT_SIZE COMMA  input_shape EQUAL ( PARERIGHT  COMMA batch_input_shape EQUAL ( PARERIGHT  COMMA  dropout EQUAL  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
D_lstm  EQUAL  Sequential( PARERIGHT  EOM
D_lstm DOT add(LSTM(INPUT_SIZE COMMA  input_shape EQUAL ( PARERIGHT  COMMA batch_input_shape EQUAL ( PARERIGHT  COMMA  dropout EQUAL  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
RSI_lstm  EQUAL  Sequential( PARERIGHT  EOM
RSI_lstm DOT add(LSTM(INPUT_SIZE COMMA  input_shape EQUAL ( PARERIGHT  COMMA batch_input_shape EQUAL ( PARERIGHT  COMMA  dropout EQUAL  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
OBV_lstm  EQUAL  Sequential( PARERIGHT  EOM
OBV_lstm DOT add(LSTM(INPUT_SIZE COMMA  input_shape EQUAL ( PARERIGHT  COMMA batch_input_shape EQUAL ( PARERIGHT  COMMA  dropout EQUAL  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
network_model  EQUAL  Sequential( PARERIGHT  EOM
network_model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
network_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
network_model DOT compile( PARERIGHT  EOM
train_period COMMA target  EQUAL  getBatch( PARERIGHT  EOM
network_model DOT fit( PARERIGHT  EOM
def getBatch( PARERIGHT : EOM
out  EQUAL  [] EOM
for i in range( PARERIGHT : EOM
data  EQUAL  period_sample DOT getIndicatorData( PARERIGHT  EOM
features  EQUAL  data[] EOM
features  EQUAL  np DOT transpose( PARERIGHT  EOM
output_bin  EQUAL  keras DOT utils DOT to_categorical( PARERIGHT  EOM
out DOT append([] COMMA np DOT asarray( PARERIGHT  DOT reshape( PARERIGHT ] PARERIGHT  EOM
out  EQUAL  np DOT asarray( PARERIGHT  EOM
return out[] COMMA out[] EOM
def main( PARERIGHT : EOM
createModel( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
main( PARERIGHT from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT optimizers import RMSprop EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT callbacks import Callback EOM
class LossHistory( PARERIGHT : EOM
def on_train_begin( PARERIGHT : EOM
self DOT losses  EQUAL  [] EOM
def on_batch_end( PARERIGHT : EOM
self DOT losses DOT append(logs DOT get( PARERIGHT  PARERIGHT  EOM
def neural_net( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(rams[] COMMA  init EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
rms  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if load: EOM
model DOT load_weights( PARERIGHT  EOM
return model EOM
def lstm_net( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelimport numpy as np EOM
def splitscalewindow( PARERIGHT : EOM
X  EQUAL  np DOT array(df DOT iloc[] DOT copy( PARERIGHT  PARERIGHT  EOM
y  EQUAL  np DOT array(df DOT iloc[] DOT copy( PARERIGHT  PARERIGHT  EOM
train_n  EQUAL  int(len( PARERIGHT  * split PARERIGHT  EOM
import sys EOM
eps  EQUAL  sys DOT float_info DOT epsilon EOM
mu  EQUAL  X[] DOT mean( PARERIGHT  EOM
st  EQUAL  X[] DOT std( PARERIGHT  EOM
X - EQUAL  mu EOM
X  EQUAL  ( PARERIGHT  / ( PARERIGHT  EOM
X_slices  EQUAL  [] EOM
y_slices  EQUAL  [] EOM
for i in range(t_steps COMMA  len( PARERIGHT  PARERIGHT : EOM
X_slices DOT append( PARERIGHT  EOM
y_slices DOT append( PARERIGHT  EOM
X_slices  EQUAL  np DOT array( PARERIGHT  EOM
y_slices  EQUAL  np DOT array( PARERIGHT  EOM
X_train  EQUAL  X_slices[] EOM
y_train  EQUAL  y_slices[] EOM
X_test  EQUAL  X_slices[] EOM
y_test  EQUAL  y_slices[] EOM
y_train  EQUAL  pd DOT get_dummies( PARERIGHT  EOM
y_test  EQUAL  pd DOT get_dummies( PARERIGHT  EOM
return( PARERIGHT  EOM
import itertools EOM
import pandas as pd EOM
import matplotlib DOT pyplot as plt EOM
def plot_confusion_matrix( PARERIGHT : EOM
cm  EQUAL  cm DOT astype( PARERIGHT  / cm DOT sum( PARERIGHT [] EOM
else: EOM
pass EOM
plt DOT imshow( PARERIGHT  EOM
plt DOT title( PARERIGHT  EOM
plt DOT colorbar( PARERIGHT  EOM
tick_marks  EQUAL  np DOT arange(len( PARERIGHT  PARERIGHT  EOM
plt DOT xticks( PARERIGHT  EOM
plt DOT yticks( PARERIGHT  EOM
fmt  EQUAL   if normalize else EOM
thresh  EQUAL  cm DOT max( PARERIGHT  / 2 DOT  EOM
for i COMMA  j in itertools DOT product(range( PARERIGHT  COMMA  range( PARERIGHT  PARERIGHT : EOM
plt DOT text(j COMMA  i COMMA  format( PARERIGHT  COMMA horizontalalignment EQUAL  COMMA whiteblack EOM
plt DOT ylabel( PARERIGHT  EOM
plt DOT xlabel( PARERIGHT  EOM
plt DOT tight_layout( PARERIGHT  EOM
def applyPtSl( PARERIGHT : EOM
out  EQUAL  pd DOT DataFrame(close DOT index + pd DOT Timedelta( PARERIGHT  COMMA index EQUAL  COMMA columns EQUAL [] PARERIGHT  EOM
vol  EQUAL  close DOT pct_change( PARERIGHT  DOT ewm( PARERIGHT  DOT std( PARERIGHT  EOM
pt  EQUAL  ptSlTs[]*vol EOM
sl  EQUAL  -ptSlTs[]*vol EOM
for loc COMMA t1 in out[] DOT fillna( PARERIGHT  DOT iteritems( PARERIGHT : EOM
df0 EQUAL close DOT loc[] EOM
df0 EQUAL df0/df0 DOT loc[]-1 EOM
out DOT loc[] EQUAL df0[]] DOT dropna( PARERIGHT  DOT index DOT min( PARERIGHT  EOM
out DOT loc[] EQUAL df0[]] DOT dropna( PARERIGHT  DOT index DOT min( PARERIGHT  EOM
return(out DOT idxmin( PARERIGHT  PARERIGHT  EOM
def build_LSTM( PARERIGHT : EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dropout EOM
from keras import regularizers EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(units  EQUAL  COMMA turn_sequences  EQUAL  COMMA activation EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA ut_shape  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(units  EQUAL  COMMA turn_sequences  EQUAL  COMMA activation EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(units  EQUAL  COMMA turn_sequences  EQUAL  COMMA activation EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return( PARERIGHT  EOM
def class_report( PARERIGHT : EOM
from sklearn DOT metrics import classification_report EOM
y_preds  EQUAL  model DOT predict( PARERIGHT  EOM
y_preds_flat  EQUAL  pd DOT DataFrame( PARERIGHT  DOT idxmax( PARERIGHT  EOM
y_test_flat  EQUAL  pd DOT DataFrame( PARERIGHT  DOT idxmax( PARERIGHT  EOM
rep  EQUAL  classification_report( PARERIGHT  EOM
return( PARERIGHT  EOM
def getWeights_FFD( PARERIGHT : EOM
w COMMA k  EQUAL  [] COMMA 1 EOM
while True: EOM
w_  EQUAL  -w[]/k*( PARERIGHT  EOM
if abs( PARERIGHT <thres:break EOM
w DOT append( PARERIGHT  EOM
k+ EQUAL 1 EOM
w  EQUAL  np DOT array( PARERIGHT  DOT reshape( PARERIGHT  EOM
return( PARERIGHT  EOM
def fracDiff_FFD( PARERIGHT : EOM
width  EQUAL  len( PARERIGHT -1 EOM
df  EQUAL  {} EOM
for name in series DOT columns: EOM
seriesF COMMA  df_  EQUAL  series[]] DOT fillna( PARERIGHT  DOT dropna( PARERIGHT  COMMA pd DOT Series( PARERIGHT  EOM
for iloc1 in range( PARERIGHT : EOM
loc0 COMMA  loc1 EQUAL seriesF DOT index[] COMMA  seriesF DOT index[] EOM
if not np DOT isfinite( PARERIGHT :continue EOM
df_[]  EQUAL  np DOT dot( PARERIGHT [] EOM
df[]  EQUAL df_ DOT copy( PARERIGHT  EOM
df EQUAL pd DOT concat( PARERIGHT  EOM
return( PARERIGHT  EOM
def plotMinFFD( PARERIGHT : EOM
from statsmodels DOT tsa DOT stattools import adfuller EOM
import matplotlib DOT pyplot as plt EOM
import numpy as np EOM
df0  EQUAL  df DOT copy( PARERIGHT  EOM
out  EQUAL  pd DOT DataFrame( PARERIGHT  EOM
for d in np DOT linspace( PARERIGHT : EOM
df1  EQUAL  np DOT log( PARERIGHT  DOT resample( PARERIGHT  DOT last( PARERIGHT  EOM
df2 EQUAL fracDiff_FFD( PARERIGHT  EOM
corr  EQUAL  np DOT corrcoef( PARERIGHT [] EOM
df2 EQUAL adfuller( PARERIGHT  EOM
out DOT loc[] EQUAL list( PARERIGHT +[][]]+[] EOM
out[]] DOT plot( PARERIGHT  EOM
plt DOT axhline(out[] DOT mean( PARERIGHT  COMMA linewidth EQUAL  COMMA color EQUAL  COMMA linestyle EQUAL  PARERIGHT  EOM
return EOM
def getbalclassweights( PARERIGHT : EOM
class_weights_bal  EQUAL  dict((1/(y_train DOT sum( PARERIGHT /len( PARERIGHT  PARERIGHT  PARERIGHT  DOT reset_index( PARERIGHT  PARERIGHT  EOM
return( PARERIGHT  EOM
def build_CNNLSTM( PARERIGHT : EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Conv1D EOM
from keras DOT layers import Dropout EOM
from keras import regularizers EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D(filters EQUAL  COMMA kernel_size EQUAL ( PARERIGHT  COMMA  padding EQUAL  COMMA ut_shape  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(units  EQUAL  COMMA turn_sequences  EQUAL  COMMA activation EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(units  EQUAL  COMMA turn_sequences  EQUAL  COMMA activation EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return( PARERIGHT from __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
from __future__ import unicode_literals EOM
import logging EOM
from rasa_core DOT policies DOT keras_policy import KerasPolicy EOM
logger  EQUAL  logging DOT getLogger( PARERIGHT  EOM
class nuRobotPolicy( PARERIGHT : EOM
def model_architecture( PARERIGHT : EOM
from keras DOT layers import LSTM COMMA  Activation COMMA  Masking COMMA  Dense EOM
from keras DOT models import Sequential EOM
from keras DOT models import Sequential EOM
from keras DOT layers import \ EOM
Masking COMMA  LSTM COMMA  Dense COMMA  TimeDistributed COMMA  Activation EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if len( PARERIGHT   EQUAL             model DOT add(Masking( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             model DOT add(Masking(mask_value EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
raise ValueError(th of output_shape  EQUAL (len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
logger DOT debug(model DOT summary( PARERIGHT  PARERIGHT  EOM
return model EOM
from utility DOT enums import Processor COMMA  RnnType EOM
def CreateModel( PARERIGHT : EOM
keras_impl  EQUAL  __getKerasImplementation( PARERIGHT  EOM
if( PARERIGHT : EOM
else: EOM
if args[]  EQUAL  EQUAL  RnnType DOT LSTM : EOM
if args[]  EQUAL  EQUAL  Processor DOT GPU and args[]  EQUAL  EQUAL  True: EOM
return __createCUDNN_LSTM_Stateless( PARERIGHT  EOM
else: EOM
return __createLSTM_Stateless( PARERIGHT  EOM
elif args[]  EQUAL  EQUAL  RnnType DOT GRU: EOM
if args[]  EQUAL  EQUAL  Processor DOT GPU and args[]  EQUAL  EQUAL  True: EOM
return __createCUDNN_GRU_Stateless( PARERIGHT  EOM
else: EOM
return __createGRU_Stateless( PARERIGHT  EOM
elif args[]  EQUAL  EQUAL  RnnType DOT RNN: EOM
return __createRNN_Stateless( PARERIGHT  EOM
else: EOM
raise ValueError( PARERIGHT  EOM
return model EOM
def CreateCallbacks( PARERIGHT : EOM
callbacks  EQUAL  [] EOM
keras_impl  EQUAL  __getKerasImplementation( PARERIGHT  EOM
callbacks DOT append(keras_impl DOT callbacks DOT EarlyStopping( PARERIGHT  PARERIGHT  EOM
if( PARERIGHT : EOM
callbacks DOT append(keras_impl DOT callbacks DOT ModelCheckpoint( DOT format( PARERIGHT  COMMA  monitor EQUAL  COMMA  verbose EQUAL  COMMA  save_best_only EQUAL  COMMA  save_weights_only EQUAL  COMMA  mode EQUAL  PARERIGHT  PARERIGHT  EOM
if( PARERIGHT : EOM
callbacks DOT append(keras_impl DOT callbacks DOT ReduceLROnPlateau( PARERIGHT  PARERIGHT  EOM
callbacks DOT append(keras_impl DOT callbacks DOT CSVLogger( DOT format( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if args[]  EQUAL  EQUAL  True: EOM
callsbacks DOT append(tensorboard_cb  EQUAL ( PARERIGHT  PARERIGHT  EOM
if args[] is not None : EOM
callbacks DOT append( PARERIGHT  EOM
return callbacks EOM
def CreateOptimizer( PARERIGHT : EOM
if args[]  EQUAL  EQUAL  Processor DOT TPU: EOM
import tensorflow as tf EOM
return tf DOT contrib DOT opt DOT NadamOptimizer( PARERIGHT  EOM
else: EOM
return keras_impl DOT optimizers DOT Nadam( PARERIGHT  EOM
def __getKerasImplementation( PARERIGHT : EOM
if( PARERIGHT : EOM
import tensorflow EOM
from tensorflow DOT python import keras as keras_impl EOM
else: EOM
import keras as keras_impl EOM
return keras_impl EOM
def __createCUDNN_LSTM_Stateless( PARERIGHT : EOM
model  EQUAL  keras_impl DOT models DOT Sequential( PARERIGHT  EOM
if args[]  EQUAL  EQUAL  1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT CuDNNLSTM( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT CuDNNLSTM(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  PARERIGHT  PARERIGHT  EOM
if args[] > 1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT CuDNNLSTM( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT CuDNNLSTM(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
if i  EQUAL  EQUAL  args[] - 2: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT CuDNNLSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
else: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT CuDNNLSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  CreateOptimizer( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def __createLSTM_Stateless( PARERIGHT : EOM
model  EQUAL  keras_impl DOT models DOT Sequential( PARERIGHT  EOM
if args[]  EQUAL  EQUAL  1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT LSTM( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT LSTM(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  COMMA  dropout EQUAL [] PARERIGHT  PARERIGHT  EOM
if args[] > 1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT LSTM( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT LSTM(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  COMMA  dropout EQUAL [] PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
if i  EQUAL  EQUAL  args[] - 2: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
else: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  CreateOptimizer( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def __createCUDNN_GRU_Stateless( PARERIGHT : EOM
model  EQUAL  keras_impl DOT models DOT Sequential( PARERIGHT  EOM
if args[]  EQUAL  EQUAL  1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT CuDNNGRU( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT CuDNNGRU(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  PARERIGHT  PARERIGHT  EOM
if args[] > 1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT CuDNNGRU( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT CuDNNGRU(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
if i  EQUAL  EQUAL  args[] - 2: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT CuDNNGRU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT CuDNNGRU( PARERIGHT  PARERIGHT  EOM
else: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT CuDNNGRU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT CuDNNGRU( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  CreateOptimizer( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def __createGRU_Stateless( PARERIGHT : EOM
model  EQUAL  keras_impl DOT models DOT Sequential( PARERIGHT  EOM
if args[]  EQUAL  EQUAL  1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT GRU( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT GRU(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  COMMA  dropout EQUAL [] PARERIGHT  PARERIGHT  EOM
if args[] > 1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT GRU( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT GRU(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  COMMA  dropout EQUAL [] PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
if i  EQUAL  EQUAL  args[] - 2: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT GRU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT GRU( PARERIGHT  PARERIGHT  EOM
else: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT GRU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  CreateOptimizer( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def __createRNN_Stateless( PARERIGHT : EOM
model  EQUAL  keras_impl DOT models DOT Sequential( PARERIGHT  EOM
if args[]  EQUAL  EQUAL  1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT SimpleRNN( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT SimpleRNN(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  COMMA  dropout EQUAL [] PARERIGHT  PARERIGHT  EOM
if args[] > 1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT SimpleRNN( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT SimpleRNN(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  COMMA  dropout EQUAL [] PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
if i  EQUAL  EQUAL  args[] - 2: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT SimpleRNN( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT SimpleRNN( PARERIGHT  PARERIGHT  EOM
else: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT SimpleRNN( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT SimpleRNN( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  CreateOptimizer( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelimport numpy as np EOM
import pandas as pd EOM
from keras DOT layers import Dense COMMA  Input COMMA  merge COMMA  LSTM COMMA  Dropout COMMA  Bidirectional COMMA  Embedding COMMA  Activation COMMA  Merge COMMA  Reshape COMMA  TimeDistributed EOM
from keras DOT models import Model COMMA Sequential EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT callbacks import EarlyStopping COMMA  ModelCheckpoint EOM
re_weight  EQUAL  True EOM
BASE_DIR  EQUAL  EOM
GLOVE_DIR  EQUAL  EOM
TRAIN_DATA_FILE  EQUAL  BASE_DIR + EOM
TEST_DATA_FILE  EQUAL  BASE_DIR + EOM
MAX_NB_WORDS  EQUAL  110000 EOM
EMBEDDING_DIM  EQUAL  300 EOM
VALIDATION_SPLIT  EQUAL  0 DOT 1 EOM
MAX_SEQUENCE_LENGTH  EQUAL  32 EOM
num_lstm  EQUAL  32 EOM
num_dense  EQUAL  64 EOM
rate_drop_lstm  EQUAL  0 DOT 10 + np DOT random DOT rand( PARERIGHT  * 0 DOT 05 EOM
rate_drop_dense  EQUAL  0 DOT 10 + np DOT random DOT rand( PARERIGHT  * 0 DOT 05 EOM
act  EQUAL  EOM
STAMP  EQUAL  %( PARERIGHT  EOM
shared_lstm  EQUAL  LSTM( PARERIGHT  EOM
x1  EQUAL  Sequential( PARERIGHT  EOM
x1 DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
x1 DOT add( PARERIGHT  EOM
x1 DOT build( PARERIGHT  EOM
y1  EQUAL  Sequential( PARERIGHT  EOM
y1 DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
y1 DOT add( PARERIGHT  EOM
y1 DOT build( PARERIGHT  EOM
merged_lstm  EQUAL  Merge( PARERIGHT  EOM
z1  EQUAL  Sequential( PARERIGHT  EOM
z1 DOT add( PARERIGHT  EOM
z1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
z1 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
z1 DOT build( PARERIGHT  EOM
auxiliary_input  EQUAL  Sequential( PARERIGHT  EOM
auxiliary_input DOT add(Dense(128 COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
auxiliary_input DOT add(Activation( PARERIGHT  PARERIGHT  EOM
auxiliary_input DOT add(Dense( PARERIGHT  PARERIGHT  EOM
auxiliary_input DOT add(Activation( PARERIGHT  PARERIGHT  EOM
auxiliary_input DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
auxiliary_input DOT build( PARERIGHT  EOM
merged  EQUAL  Merge( PARERIGHT  EOM
model EQUAL Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
early_stopping  EQUAL EarlyStopping( PARERIGHT  EOM
bst_model_path  EQUAL  STAMP + EOM
model_checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
hist  EQUAL  model DOT fit([] COMMA  labels_train COMMA  validation_data EQUAL ( PARERIGHT  COMMA  nb_epoch EQUAL  COMMA  batch_size EQUAL  COMMA  shuffle EQUAL  COMMA class_weight EQUAL  COMMA callbacks EQUAL [] PARERIGHT  EOM
model DOT load_weights( PARERIGHT  EOM
bst_val_score EQUAL min( PARERIGHT  EOM
preds  EQUAL  model DOT predict( PARERIGHT  EOM
preds + EQUAL  model DOT predict( PARERIGHT  EOM
preds / EQUAL  2 DOT 0 EOM
out_df  EQUAL  pd DOT DataFrame({:test_labels COMMA  :preds DOT ravel( PARERIGHT } PARERIGHT  EOM
out_df DOT to_csv(%( PARERIGHT +STAMP+ COMMA  index EQUAL  PARERIGHT  EOM
del out_dffrom __future__ import print_function EOM
import numpy as np EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Lambda EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Convolution1D COMMA MaxPooling1D COMMA  Flatten EOM
from keras DOT datasets import imdb EOM
from keras import backend as K EOM
from sklearn DOT cross_validation import train_test_split EOM
import pandas as pd EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from sklearn DOT preprocessing import Normalizer EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Convolution1D COMMA  Dense COMMA  Dropout COMMA  Flatten COMMA  MaxPooling1D EOM
from keras DOT utils import np_utils EOM
import numpy as np EOM
import h5py EOM
from keras import callbacks EOM
from keras DOT layers import LSTM COMMA  GRU COMMA  SimpleRNN EOM
from keras DOT callbacks import CSVLogger EOM
from keras DOT callbacks import ModelCheckpoint COMMA  EarlyStopping COMMA  ReduceLROnPlateau COMMA  CSVLogger EOM
import csv EOM
from sklearn DOT cross_validation import StratifiedKFold EOM
from sklearn DOT cross_validation import cross_val_score EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
with open( PARERIGHT  as f: EOM
reader  EQUAL  csv DOT reader( PARERIGHT  EOM
your_list  EQUAL  list( PARERIGHT  EOM
trainX  EQUAL  np DOT array( PARERIGHT  EOM
traindata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
Y  EQUAL  traindata DOT iloc[] EOM
y_train1  EQUAL  np DOT array( PARERIGHT  EOM
y_train EQUAL  to_categorical( PARERIGHT  EOM
maxlen  EQUAL  44100 EOM
trainX  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_train  EQUAL  np DOT reshape(trainX COMMA  ( PARERIGHT  PARERIGHT  EOM
with open( PARERIGHT  as f: EOM
reader1  EQUAL  csv DOT reader( PARERIGHT  EOM
your_list1  EQUAL  list( PARERIGHT  EOM
testX  EQUAL  np DOT array( PARERIGHT  EOM
testdata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
Y1  EQUAL  testdata DOT iloc[] EOM
y_test1  EQUAL  np DOT array( PARERIGHT  EOM
y_test EQUAL  to_categorical( PARERIGHT  EOM
maxlen  EQUAL  44100 EOM
testX  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  np DOT reshape(testX COMMA  ( PARERIGHT  PARERIGHT  EOM
batch_size  EQUAL  2 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
checkpointer  EQUAL  callbacks DOT ModelCheckpoint( PARERIGHT  EOM
model DOT fit(X_train COMMA  y_train COMMA  batch_size EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  COMMA nb_epoch EQUAL  COMMA  callbacks EQUAL [] PARERIGHT  EOM
model DOT save( PARERIGHT  import numpy as np EOM
from keras DOT layers import LSTM EOM
from keras DOT models import Sequential EOM
from phased_lstm_keras DOT PhasedLSTM import PhasedLSTM EOM
def main( PARERIGHT : EOM
X  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
Y  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model_lstm  EQUAL  Sequential( PARERIGHT  EOM
model_lstm DOT add(LSTM(10 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_lstm DOT summary( PARERIGHT  EOM
model_lstm DOT compile( PARERIGHT  EOM
model_plstm  EQUAL  Sequential( PARERIGHT  EOM
model_plstm DOT add(PhasedLSTM(10 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_plstm DOT summary( PARERIGHT  EOM
model_plstm DOT compile( PARERIGHT  EOM
model_lstm DOT fit( PARERIGHT  EOM
model_plstm DOT fit( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
main( PARERIGHT from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  LSTM EOM
from data_utils import * EOM
import numpy as np EOM
from sklearn DOT metrics import roc_curve EOM
from sklearn DOT metrics import auc EOM
import matplotlib DOT pyplot as plt EOM
X_test COMMA  Y_test  EQUAL  read_expanded_test_data_glove( PARERIGHT  EOM
max_len  EQUAL  100 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
lstm  EQUAL  LSTM(100 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
Y_pred  EQUAL  model DOT predict( PARERIGHT  EOM
names  EQUAL  [] EOM
for i in range(len( PARERIGHT  PARERIGHT : EOM
y_pred_keras  EQUAL  Y_pred[] EOM
fpr_keras COMMA  tpr_keras COMMA  thresholds_keras  EQUAL  roc_curve( PARERIGHT  EOM
auc_keras  EQUAL  auc( PARERIGHT  EOM
plt DOT figure( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
import os EOM
global_model_version  EQUAL  62 EOM
global_batch_size  EQUAL  128 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  keras DOT optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import keras EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dense COMMA  Activation COMMA  Input COMMA  Dropout COMMA  Activation EOM
from keras DOT datasets import mnist EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT optimizers import Adam EOM
from keras DOT callbacks import TensorBoard EOM
learning_rate  EQUAL  0 DOT 001 EOM
training_iters  EQUAL  3 EOM
batch_size  EQUAL  128 EOM
display_step  EQUAL  10 EOM
n_input  EQUAL  28 EOM
n_step  EQUAL  28 EOM
n_hidden  EQUAL  128 EOM
n_classes  EQUAL  10 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
x_train  EQUAL  x_train DOT reshape( PARERIGHT  EOM
x_test  EQUAL  x_test DOT reshape( PARERIGHT  EOM
x_train  EQUAL  x_train DOT astype( PARERIGHT  EOM
x_test  EQUAL  x_test DOT astype( PARERIGHT  EOM
x_train / EQUAL  255 EOM
x_test / EQUAL  255 EOM
y_train  EQUAL  keras DOT utils DOT to_categorical( PARERIGHT  EOM
y_test  EQUAL  keras DOT utils DOT to_categorical( PARERIGHT  EOM
inputs  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
X  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
predictions  EQUAL  Activation( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
adam  EQUAL  Adam( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(x_train COMMA  y_train COMMA   tch_size EQUAL  COMMA   ochs EQUAL  COMMA   rbose EQUAL  COMMA   alidation_data EQUAL ( PARERIGHT  COMMA llbacks EQUAL [] PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
import tensorflow as tf EOM
from keras import optimizers EOM
from keras import losses EOM
from keras import metrics EOM
from keras import models EOM
from keras import layers EOM
from keras import callbacks EOM
from keras import regularizers EOM
from keras import initializers EOM
from keras DOT utils import np_utils EOM
from keras DOT models import Sequential EOM
from keras DOT models import Model EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import GRU EOM
from keras DOT layers import Masking EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import Activation EOM
from keras DOT layers import Lambda EOM
from keras DOT layers import Bidirectional EOM
from keras DOT layers import BatchNormalization EOM
from keras DOT layers import Input EOM
from keras DOT constraints import max_norm EOM
def basic_dense_model( PARERIGHT : EOM
model  EQUAL  models DOT Sequential( PARERIGHT  EOM
model DOT add(layers DOT Dense(16 COMMA  activation EQUAL  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def LSTM_model_1_gen( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def LSTM_model_1( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def LSTM_model_2( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT   PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(Var DOT dropout COMMA  noise_shape EQUAL ( PARERIGHT   PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_3_LSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT   PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(Var DOT dropout COMMA  noise_shape EQUAL ( PARERIGHT   PARERIGHT  PARERIGHT  EOM
model DOT add(layers DOT Bidirectional(layers DOT LSTM( PARERIGHT  PARERIGHT  COMMA  merge_mode EQUAL  PARERIGHT  EOM
model DOT add(layers DOT Bidirectional(layers DOT LSTM( PARERIGHT  PARERIGHT  COMMA  merge_mode EQUAL  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  EOM
return model EOM
def model_3_LSTM_advanced( PARERIGHT : EOM
maxnorm EQUAL 3 DOT  EOM
iniT EQUAL keras DOT initializers DOT RandomUniform( PARERIGHT  EOM
batch_size EQUAL X_train DOT shape[] EOM
n_frames EQUAL X_train DOT shape[] EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 2 COMMA  noise_shape EQUAL ( PARERIGHT   PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Var DOT Dense_Unit COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA  kernel_initializer EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA activity_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  ropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA                         kernel_regularizer EQUAL ( PARERIGHT  COMMA activity_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  pout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA                         kernel_regularizer EQUAL ( PARERIGHT  COMMA activity_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  opout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA                         kernel_regularizer EQUAL ( PARERIGHT  COMMA activity_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  ut EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 5 COMMA  noise_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Y_train DOT shape[] COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def model_3b_LSTM_advanced( PARERIGHT : EOM
maxnorm EQUAL 3 DOT  EOM
iniT EQUAL keras DOT initializers DOT RandomUniform( PARERIGHT  EOM
batch_size EQUAL X_train DOT shape[] EOM
n_frames EQUAL X_train DOT shape[] EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Var DOT Dense_Unit COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA Freturn_sequences EQUAL  COMMA  kernel_initializer EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  ropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA                         kernel_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  pout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA                         kernel_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  out EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 5 COMMA  noise_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Y_train DOT shape[] COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def model_3_LSTM_advanced_seq( PARERIGHT : EOM
inp  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
maxnorm EQUAL 3 DOT  EOM
batch_size EQUAL X_train DOT shape[] EOM
n_frames EQUAL X_train DOT shape[] EOM
x EQUAL Masking( PARERIGHT ( PARERIGHT ( PARERIGHT  EOM
x EQUAL Dropout(0 DOT 2 COMMA  noise_shape EQUAL ( PARERIGHT   PARERIGHT ( PARERIGHT  EOM
x EQUAL Dense(Var DOT Dense_Unit COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
x EQUAL Bidirectional(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA    kernel_regularizer EQUAL ( PARERIGHT  COMMA activity_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  ropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT ( PARERIGHT  EOM
x EQUAL Dropout(0 DOT 5 COMMA  noise_shape EQUAL ( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
predictions EQUAL Dense(Y_train DOT shape[] COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
model EQUAL Model( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def model_3_LSTM_advanced_no_bi( PARERIGHT : EOM
maxnorm EQUAL 3 DOT  EOM
batch_size EQUAL X_train DOT shape[] EOM
n_frames EQUAL X_train DOT shape[] EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 2 COMMA  noise_shape EQUAL ( PARERIGHT   PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Var DOT Dense_Unit COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA    kernel_regularizer EQUAL ( PARERIGHT  COMMA activity_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  ropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA activity_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  ropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 5 COMMA  noise_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Y_train DOT shape[] COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def model_4_GRU( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 2 COMMA  noise_shape EQUAL ( PARERIGHT   PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Var DOT Dense_Unit COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(GRU(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA    kernel_regularizer EQUAL ( PARERIGHT  COMMA activity_regularizer EQUAL ( PARERIGHT  COMMA rnel_constraint EQUAL ( PARERIGHT  COMMA  dropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(GRU(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA activity_regularizer EQUAL ( PARERIGHT  COMMA rnel_constraint EQUAL ( PARERIGHT  COMMA  dropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 5 COMMA  noise_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Y_train DOT shape[] COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def model_4_GRU_advanced( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 2 COMMA  noise_shape EQUAL ( PARERIGHT   PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Var DOT Dense_Unit COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(GRU(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA    kernel_regularizer EQUAL ( PARERIGHT  COMMA activity_regularizer EQUAL ( PARERIGHT  COMMA kernel_constraint EQUAL ( PARERIGHT  COMMA ropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(GRU(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA activity_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  ropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(GRU(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA activity_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  pout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(GRU(Var DOT hidden_units COMMA  return_sequences EQUAL  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA activity_regularizer EQUAL ( PARERIGHT  COMMA ernel_constraint EQUAL ( PARERIGHT  COMMA  ut EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 5 COMMA  noise_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Y_train DOT shape[] COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def model_5_CNN( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 2 COMMA  noise_shape EQUAL ( PARERIGHT   PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(Var DOT hidden_units COMMA  activation EQUAL  COMMA strides EQUAL  COMMA  data_format EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  COMMA activity_regularizer EQUAL ( PARERIGHT  COMMA kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(Var DOT hidden_units COMMA  activation EQUAL  COMMA strides EQUAL  COMMA  data_format EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  COMMA activity_regularizer EQUAL ( PARERIGHT  COMMA nel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 5 COMMA  noise_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(Y_train DOT shape[] COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def LSTM_model_3_original( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 2 COMMA  noise_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(32 COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(64 COMMA  return_sequences EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  COMMA  dropout EQUAL  COMMA  recurrent_dropout EQUAL  PARERIGHT  COMMA  merge_mode EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(0 DOT 5 COMMA  noise_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(n_classes COMMA  activation EQUAL  COMMA  kernel_constraint EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Dense EOM
import numpy as np EOM
import time EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout COMMA  Merge EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
from keras DOT utils DOT visualize_util import plot COMMA  to_graph EOM
from keras DOT regularizers import l2 COMMA  activity_l2 EOM
import copy EOM
def design_model( PARERIGHT : EOM
model_A  EQUAL  Sequential( PARERIGHT  EOM
model_B  EQUAL  Sequential( PARERIGHT  EOM
model_Combine  EQUAL  Sequential( PARERIGHT  EOM
lstm_hidden_size  EQUAL  [] EOM
drop_out_rate  EQUAL  [] EOM
model_A DOT add(LSTM(lstm_hidden_size[] COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_A DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_A DOT add(Dense( PARERIGHT  PARERIGHT  EOM
nn_hidden_size  EQUAL  [] EOM
nn_drop_rate  EQUAL  [] EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_Combine DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model_Combine DOT add(Dense( PARERIGHT  PARERIGHT  EOM
graph  EQUAL  to_graph( PARERIGHT  EOM
graph DOT write_png( PARERIGHT  EOM
return model_Combine EOM
def design_model_A( PARERIGHT : EOM
model_A  EQUAL  Sequential( PARERIGHT  EOM
model_B  EQUAL  Sequential( PARERIGHT  EOM
model_Combine  EQUAL  Sequential( PARERIGHT  EOM
lstm_hidden_size  EQUAL  [] EOM
drop_out_rate  EQUAL  [] EOM
reg  EQUAL  [] EOM
areg  EQUAL  [] EOM
model_A DOT add(LSTM(lstm_hidden_size[] COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_A DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_A DOT add(Dense(1 COMMA  activation EQUAL  COMMA  W_regularizer EQUAL ( PARERIGHT  COMMA  activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
nn_hidden_size  EQUAL  [] EOM
nn_drop_rate  EQUAL  [] EOM
nn_reg  EQUAL  [] EOM
nn_areg  EQUAL  [] EOM
model_B DOT add(Dense(nn_hidden_size[] COMMA  input_dim EQUAL  COMMA  W_regularizer EQUAL ( PARERIGHT  COMMA  activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense(nn_hidden_size[] COMMA  W_regularizer EQUAL ( PARERIGHT  COMMA  activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense(1 COMMA  activation EQUAL  COMMA  W_regularizer EQUAL ( PARERIGHT  COMMA  activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_Combine DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model_Combine DOT add(Dense( PARERIGHT  PARERIGHT  EOM
graph  EQUAL  to_graph( PARERIGHT  EOM
graph DOT write_png( PARERIGHT  EOM
return model_Combine EOM
def design_model_nn( PARERIGHT : EOM
model_B  EQUAL  Sequential( PARERIGHT  EOM
nn_hidden_size  EQUAL  [] EOM
nn_drop_rate  EQUAL  [] EOM
nn_reg  EQUAL  [] EOM
nn_areg  EQUAL  [] EOM
model_B DOT add(Dense(nn_hidden_size[] COMMA  input_dim EQUAL  COMMA  W_regularizer EQUAL ( PARERIGHT  COMMA  activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense(nn_hidden_size[] COMMA  W_regularizer EQUAL ( PARERIGHT  COMMA  activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense(1 COMMA  activation EQUAL  COMMA  W_regularizer EQUAL ( PARERIGHT  COMMA  activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
graph  EQUAL  to_graph( PARERIGHT  EOM
graph DOT write_png( PARERIGHT  EOM
return model_B EOM
def design_model_lstm( PARERIGHT : EOM
model_A  EQUAL  Sequential( PARERIGHT  EOM
lstm_hidden_size  EQUAL  [] EOM
drop_out_rate  EQUAL  [] EOM
reg  EQUAL  [] EOM
areg  EQUAL  [] EOM
model_A DOT add(LSTM(lstm_hidden_size[] COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_A DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_A DOT add(Dense(1 COMMA  activation EQUAL  COMMA  W_regularizer EQUAL ( PARERIGHT  COMMA  activity_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
graph  EQUAL  to_graph( PARERIGHT  EOM
graph DOT write_png( PARERIGHT  EOM
return model_Afrom tensorflow DOT keras DOT layers import LSTM COMMA  GRU EOM
from tensorflow DOT keras DOT models import Sequential EOM
def get_lstm( PARERIGHT : EOM
model DOT add(LSTM(units[] COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def get_gru( PARERIGHT : EOM
model DOT add(GRU(units[] COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def _get_sae( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def get_saes( PARERIGHT : EOM
sae2  EQUAL  _get_sae( PARERIGHT  EOM
sae3  EQUAL  _get_sae( PARERIGHT  EOM
saes  EQUAL  Sequential( PARERIGHT  EOM
saes DOT add(Dense( PARERIGHT  PARERIGHT  EOM
saes DOT add(Activation( PARERIGHT  PARERIGHT  EOM
saes DOT add(Dense( PARERIGHT  PARERIGHT  EOM
saes DOT add(Activation( PARERIGHT  PARERIGHT  EOM
saes DOT add(Dense( PARERIGHT  PARERIGHT  EOM
saes DOT add(Activation( PARERIGHT  PARERIGHT  EOM
saes DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
saes DOT add(Dense( PARERIGHT  PARERIGHT  EOM
models  EQUAL  [] EOM
return modelsfrom keras DOT models import Sequential EOM
from keras DOT models import model_from_json EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA   Dropout COMMA  Reshape EOM
from keras DOT layers import Merge COMMA  Lambda EOM
from keras DOT layers DOT merge import _Merge EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT optimizers import Adam EOM
from keras DOT engine DOT topology import Layer EOM
from sklearn import preprocessing EOM
from sklearn DOT externals import joblib EOM
import numpy as np EOM
import spacy EOM
import tensorflow as tf EOM
config_proto  EQUAL  tf DOT ConfigProto( PARERIGHT  EOM
config_proto DOT gpu_options DOT allow_growth EQUAL True EOM
sess  EQUAL  tf DOT Session( PARERIGHT  EOM
img_dim  EQUAL  2048 EOM
word_vec_dim  EQUAL  300 EOM
max_len  EQUAL  50 EOM
import keras DOT backend as K EOM
_sketch_op  EQUAL  tf DOT load_op_library( PARERIGHT  EOM
class MCB( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT output_dim  EQUAL  output_dim EOM
self DOT img_dim  EQUAL  2048 EOM
self DOT word_vec_dim  EQUAL  300 EOM
super( PARERIGHT  DOT __init__( PARERIGHT  EOM
def build( PARERIGHT : EOM
h  EQUAL  self DOT add_weight(shape  EQUAL ( PARERIGHT  COMMA  initializer  EQUAL ( PARERIGHT  COMMA  trainable  EQUAL  PARERIGHT  EOM
self DOT h1  EQUAL  tf DOT cast( PARERIGHT  EOM
h  EQUAL  self DOT add_weight(shape  EQUAL ( PARERIGHT  COMMA  initializer  EQUAL ( PARERIGHT  COMMA  trainable  EQUAL  PARERIGHT  EOM
self DOT h2  EQUAL  tf DOT cast( PARERIGHT  EOM
s  EQUAL  self DOT add_weight(shape  EQUAL ( PARERIGHT  COMMA  initializer  EQUAL ( PARERIGHT  COMMA  trainable  EQUAL  PARERIGHT  EOM
s  EQUAL  self DOT add_weight(shape  EQUAL ( PARERIGHT  COMMA  initializer  EQUAL ( PARERIGHT  COMMA  trainable  EQUAL  PARERIGHT  EOM
super( PARERIGHT  DOT build( PARERIGHT  EOM
def count_sketch( PARERIGHT : EOM
with tf DOT variable_scope(+probs DOT name DOT replace( PARERIGHT  PARERIGHT  as scope: EOM
input_size  EQUAL  int(probs DOT get_shape( PARERIGHT [] PARERIGHT  EOM
history  EQUAL  tf DOT get_collection( PARERIGHT  EOM
if scope DOT name in history: EOM
scope DOT reuse_variables( PARERIGHT  EOM
tf DOT add_to_collection( PARERIGHT  EOM
sk  EQUAL  _sketch_op DOT count_sketch( PARERIGHT  EOM
sk DOT set_shape([] COMMA  project_size] PARERIGHT  EOM
return sk EOM
def call( PARERIGHT : EOM
p1  EQUAL  self DOT count_sketch( PARERIGHT  EOM
p2  EQUAL  self DOT count_sketch( PARERIGHT  EOM
pc1  EQUAL  tf DOT complex(p1 COMMA  tf DOT zeros_like( PARERIGHT  PARERIGHT  EOM
pc2  EQUAL  tf DOT complex(p2 COMMA  tf DOT zeros_like( PARERIGHT  PARERIGHT  EOM
conved  EQUAL  tf DOT ifft(tf DOT fft( PARERIGHT  * tf DOT fft( PARERIGHT  PARERIGHT  EOM
return tf DOT real( PARERIGHT  EOM
def compute_output_shape( PARERIGHT : EOM
return ( PARERIGHT  EOM
class BOW_QI: EOM
def __init__( PARERIGHT : EOM
self DOT joint_method  EQUAL  joint_method EOM
self DOT lr  EQUAL  lr EOM
self DOT name  EQUAL   + self DOT joint_method + str( PARERIGHT  EOM
def build( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if self DOT joint_method  EQUAL  EQUAL  : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif self DOT joint_method  EQUAL  EQUAL  : EOM
model DOT add(MCB(output_dim  EQUAL  COMMA  input_shape  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif self DOT joint_method  EQUAL  EQUAL  : EOM
image_model  EQUAL  Sequential( PARERIGHT  EOM
image_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
language_model  EQUAL  Sequential( PARERIGHT  EOM
language_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
json_string  EQUAL  model DOT to_json( PARERIGHT  EOM
open( PARERIGHT  DOT write( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA  optimizer EQUAL ( PARERIGHT  COMMA  metrics  EQUAL [] PARERIGHT  EOM
self DOT model  EQUAL  model EOM
def extract_question_feature( PARERIGHT : EOM
return nlp( PARERIGHT  DOT vector*len(nlp( PARERIGHT  PARERIGHT  EOM
def train_on_batch( PARERIGHT : EOM
if self DOT joint_method ! EQUAL   : EOM
return self DOT model DOT train_on_batch(np DOT hstack(( PARERIGHT  PARERIGHT  COMMA  A PARERIGHT  EOM
else: EOM
return self DOT model DOT train_on_batch( PARERIGHT  EOM
def save_weights( PARERIGHT : EOM
self DOT model DOT save_weights( PARERIGHT  EOM
def load( PARERIGHT : EOM
self DOT model  EQUAL  model_from_json(open( PARERIGHT  DOT read( PARERIGHT  PARERIGHT  EOM
self DOT model DOT load_weights( PARERIGHT  EOM
self DOT model DOT compile(loss EQUAL  COMMA  optimizer EQUAL ( PARERIGHT  COMMA  metrics  EQUAL [] PARERIGHT  EOM
def predict( PARERIGHT : EOM
if self DOT joint_method ! EQUAL   : EOM
return self DOT model DOT predict_classes(np DOT hstack(( PARERIGHT  PARERIGHT  COMMA  verbose EQUAL  PARERIGHT  EOM
else: EOM
return self DOT model DOT predict_classes( PARERIGHT  EOM
class LSTM_QI: EOM
def __init__( PARERIGHT : EOM
self DOT joint_method  EQUAL  joint_method EOM
self DOT lr  EQUAL  lr EOM
self DOT name  EQUAL   + self DOT joint_method + str( PARERIGHT  EOM
def build( PARERIGHT : EOM
image_model  EQUAL  Sequential( PARERIGHT  EOM
image_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
image_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
language_model  EQUAL  Sequential( PARERIGHT  EOM
if num_layers_lstm  EQUAL  EQUAL  1: EOM
language_model DOT add(LSTM(output_dim  EQUAL  COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
language_model DOT add(LSTM(output_dim  EQUAL  COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
language_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
language_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
language_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if self DOT joint_method  EQUAL  EQUAL  : EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
elif self DOT joint_method  EQUAL  EQUAL  : EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(MCB(output_dim  EQUAL  COMMA  input_shape  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
elif self DOT joint_method  EQUAL  EQUAL  : EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
json_string  EQUAL  model DOT to_json( PARERIGHT  EOM
open( PARERIGHT  DOT write( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA  optimizer EQUAL ( PARERIGHT  COMMA  metrics  EQUAL [] PARERIGHT  EOM
self DOT model  EQUAL  model EOM
def extract_question_feature( PARERIGHT : EOM
X  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
tokens  EQUAL  nlp( PARERIGHT  EOM
for i COMMA  token in enumerate( PARERIGHT : EOM
if i > EQUAL  max_len: EOM
break EOM
x[]  EQUAL  tokens[] DOT vector EOM
return x EOM
def train_on_batch( PARERIGHT : EOM
return self DOT model DOT train_on_batch( PARERIGHT  EOM
def save_weights( PARERIGHT : EOM
self DOT model DOT save_weights( PARERIGHT  EOM
def load( PARERIGHT : EOM
self DOT model  EQUAL  model_from_json(open( PARERIGHT  DOT read( PARERIGHT  PARERIGHT  EOM
self DOT model DOT load_weights( PARERIGHT  EOM
self DOT model DOT compile(loss EQUAL  COMMA  optimizer EQUAL ( PARERIGHT  COMMA  metrics  EQUAL [] PARERIGHT  EOM
def predict( PARERIGHT : EOM
return self DOT model DOT predict_classes( PARERIGHT import pandas as pd EOM
import numpy as np EOM
from keras DOT datasets import imdb EOM
from keras DOT preprocessing import sequence EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
f EQUAL open( PARERIGHT  EOM
ftest EQUAL open( PARERIGHT  EOM
lines EQUAL f DOT readlines( PARERIGHT  EOM
lines_test EQUAL ftest DOT readlines( PARERIGHT  EOM
for i in range(0 COMMA len( PARERIGHT  PARERIGHT : EOM
lines[] EQUAL lines[] DOT split( PARERIGHT  EOM
for j in range(0 COMMA len( PARERIGHT  PARERIGHT : EOM
s EQUAL [] ! EQUAL   ] EOM
dftest EQUAL pd DOT DataFrame( PARERIGHT  EOM
y_train EQUAL df DOT iloc[] EOM
test_txt EQUAL dftest DOT iloc[] EOM
y_test EQUAL dftest DOT iloc[] EOM
token  EQUAL  Tokenizer( PARERIGHT  EOM
token DOT fit_on_texts( PARERIGHT  EOM
A EQUAL token DOT word_index EOM
x_train_seq  EQUAL  token DOT texts_to_sequences( PARERIGHT  EOM
x_test_seq  EQUAL  token DOT texts_to_sequences( PARERIGHT  EOM
x_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
x_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA Dropout COMMA Activation COMMA Flatten EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import SimpleRNN EOM
modelRNN DOT add(SimpleRNN( PARERIGHT  PARERIGHT  EOM
modelRNN DOT add(Dense( PARERIGHT  PARERIGHT  EOM
modelRNN DOT add(Dense( PARERIGHT  PARERIGHT  EOM
modelRNN DOT summary( PARERIGHT  EOM
modelRNN DOT compile( PARERIGHT  EOM
train_history1_1  EQUAL  modelRNN DOT fit( PARERIGHT  EOM
scores1_1  EQUAL  modelRNN DOT evaluate( PARERIGHT  EOM
train_history1_1 DOT history DOT values( PARERIGHT  EOM
modelRNN1 DOT add(SimpleRNN( PARERIGHT  PARERIGHT  EOM
modelRNN1 DOT add(Dense( PARERIGHT  PARERIGHT  EOM
modelRNN1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
modelRNN1 DOT add(Dense( PARERIGHT  PARERIGHT  EOM
modelRNN1 DOT summary( PARERIGHT  EOM
modelRNN1 DOT compile( PARERIGHT  EOM
train_history1_2  EQUAL  modelRNN1 DOT fit( PARERIGHT  EOM
scores1_2  EQUAL  modelRNN1 DOT evaluate( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA Dropout COMMA Activation COMMA Flatten EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT callbacks import History EOM
history  EQUAL  History( PARERIGHT  EOM
modelLSTM  EQUAL  Sequential( PARERIGHT  EOM
modelLSTM DOT add(Embedding ( PARERIGHT  PARERIGHT  EOM
modelLSTM DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
modelLSTM  DOT add(Dense( PARERIGHT  PARERIGHT  EOM
modelLSTM  DOT add(Dense( PARERIGHT  PARERIGHT  EOM
modelLSTM  DOT summary( PARERIGHT  EOM
modelLSTM DOT compile( PARERIGHT  EOM
train_history2_1  EQUAL  modelLSTM DOT fit( PARERIGHT  EOM
scores2_1  EQUAL  modelLSTM  DOT evaluate( PARERIGHT  EOM
modelLSTM1  EQUAL  Sequential( PARERIGHT  EOM
modelLSTM1 DOT add(Embedding ( PARERIGHT  PARERIGHT  EOM
modelLSTM1 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
modelLSTM1  DOT add(Dense( PARERIGHT  PARERIGHT  EOM
modelLSTM1  DOT add(Dense( PARERIGHT  PARERIGHT  EOM
modelLSTM1  DOT summary( PARERIGHT  EOM
modelLSTM1 DOT compile( PARERIGHT  EOM
train_history2_2  EQUAL  modelLSTM1 DOT fit( PARERIGHT  EOM
scores2_2  EQUAL  modelLSTM1  DOT evaluate( PARERIGHT  EOM
train_history1_1 DOT history DOT values( PARERIGHT  EOM
train_history1_1 DOT history DOT keys( PARERIGHT  EOM
train_history1_1 DOT history[] EOM
train_history2_1 DOT history DOT values( PARERIGHT  EOM
train_history2_2 DOT history DOT values( PARERIGHT  EOM
import numpy as np EOM
import matplotlib DOT pyplot as plt EOM
graphpath EQUAL  EOM
x  EQUAL  list(range( PARERIGHT  PARERIGHT  EOM
y1  EQUAL  train_history1_1 DOT history[] EOM
y2  EQUAL  train_history1_1 DOT history[] EOM
y  EQUAL  np DOT column_stack(( PARERIGHT  PARERIGHT  EOM
plt DOT figure( PARERIGHT  EOM
plt DOT clf( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT legend( PARERIGHT  EOM
plt DOT xlabel( PARERIGHT  EOM
plt DOT ylabel( PARERIGHT  EOM
plt DOT title( PARERIGHT  EOM
plt DOT savefig( PARERIGHT  EOM
x  EQUAL  list(range( PARERIGHT  PARERIGHT  EOM
lines[] EOM
a EQUAL lines[] DOT split( PARERIGHT  EOM
for i in range( PARERIGHT : EOM
 EQUAL lines[] DOT split( PARERIGHT  EOM
big EQUAL lines DOT split( PARERIGHT  EOM
a EQUAL [] EOM
for line in f: EOM
a DOT append( PARERIGHT  EOM
for EOM
for i in rane EOM
for i in lines: EOM
a DOT append( PARERIGHT  EOM
A EQUAL [] EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT optimizers import SGD EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from keras DOT utils DOT visualize_util import model_to_dot EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Activation EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import Merge EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import Convolution2D EOM
from keras DOT layers import MaxPooling2D EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import GRU EOM
from keras DOT layers import RepeatVector EOM
from keras DOT layers import TimeDistributed EOM
def model_binary( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
data  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
labels  EQUAL  np DOT random DOT randint(2 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
return model EOM
def model_multiple( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
data  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
labels  EQUAL  np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  EOM
labels  EQUAL  to_categorical( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
return model EOM
def model_merged( PARERIGHT : EOM
left_branch  EQUAL  Sequential( PARERIGHT  EOM
left_branch DOT add(Dense( PARERIGHT  PARERIGHT  EOM
right_branch  EQUAL  Sequential( PARERIGHT  EOM
right_branch DOT add(Dense( PARERIGHT  PARERIGHT  EOM
merged  EQUAL  Merge( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
data_left  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
data_right  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
labels  EQUAL  np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  EOM
labels  EQUAL  to_categorical( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
return model EOM
def model_mlp( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
sgd  EQUAL  SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def model_vggnet( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Convolution2D( 3 COMMA  border_mode EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
sgd  EQUAL  SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def model_image_caption( PARERIGHT : EOM
max_caption_len  EQUAL  16 EOM
vocab_size  EQUAL  10000 EOM
image_model  EQUAL  Sequential( PARERIGHT  EOM
image_model DOT add(Convolution2D( 3 COMMA  border_mode EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
image_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
image_model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
image_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
image_model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
image_model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
image_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
image_model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
image_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
image_model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
image_model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
image_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
language_model  EQUAL  Sequential( PARERIGHT  EOM
language_model DOT add(bedding( PARERIGHT  PARERIGHT  EOM
language_model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
language_model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
image_model DOT add(RepeatVector( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def model_lstm( PARERIGHT : EOM
max_len  EQUAL  10 EOM
max_features  EQUAL  10000 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def model_lstm_stacked( PARERIGHT : EOM
data_dim  EQUAL  16 EOM
timesteps  EQUAL  8 EOM
nb_classes  EQUAL  10 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
train_data  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
train_labels  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
val_data  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
val_labels  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT fit(in_data COMMA  train_labels COMMA  batch_size EQUAL  COMMA  nb_epoch EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_lstm_stateful( PARERIGHT : EOM
data_dim  EQUAL  16 EOM
timesteps  EQUAL  8 EOM
nb_classes  EQUAL  10 EOM
batch_size  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(32 COMMA  return_sequences EQUAL  COMMA  stateful EQUAL  COMMA tch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
train_data  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
train_labels  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
val_data  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
val_labels  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT fit(in_data COMMA  train_labels COMMA  batch_size EQUAL  COMMA  nb_epoch EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
return model EOM
def model_lstm_merged( PARERIGHT : EOM
data_dim  EQUAL  16 EOM
timesteps  EQUAL  8 EOM
nb_classes  EQUAL  10 EOM
encoder_left  EQUAL  Sequential( PARERIGHT  EOM
encoder_left DOT add(LSTM(32 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
encoder_right  EQUAL  Sequential( PARERIGHT  EOM
encoder_right DOT add(LSTM(32 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
train_data_left  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
train_data_right  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
train_labels  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
val_data_left  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
val_data_right  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
val_labels  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT fit(rain_data_left COMMA  train_data_right] COMMA  train_labels COMMA atch_size EQUAL  COMMA  nb_epoch EQUAL  COMMA lidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
return model EOM
def viz_model( PARERIGHT : EOM
dot  EQUAL  model_to_dot( PARERIGHT  EOM
dot DOT write_pdf( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
model  EQUAL  model_binary( PARERIGHT  EOM
viz_model( PARERIGHT  EOM
model  EQUAL  model_multiple( PARERIGHT  EOM
viz_model( PARERIGHT  EOM
model  EQUAL  model_merged( PARERIGHT  EOM
viz_model( PARERIGHT  EOM
model  EQUAL  model_mlp( PARERIGHT  EOM
viz_model( PARERIGHT  EOM
model  EQUAL  model_vggnet( PARERIGHT  EOM
viz_model( PARERIGHT  EOM
model  EQUAL  model_image_caption( PARERIGHT  EOM
viz_model( PARERIGHT  EOM
model  EQUAL  model_lstm( PARERIGHT  EOM
viz_model( PARERIGHT  EOM
model  EQUAL  model_lstm_stacked( PARERIGHT  EOM
viz_model( PARERIGHT  EOM
model  EQUAL  model_lstm_stateful( PARERIGHT  EOM
viz_model( PARERIGHT  EOM
model  EQUAL  model_lstm_merged( PARERIGHT  EOM
viz_model( PARERIGHT from __future__ import print_function EOM
import numpy as np EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Lambda EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Convolution1D COMMA MaxPooling1D COMMA  Flatten EOM
from keras DOT datasets import imdb EOM
from keras import backend as K EOM
from sklearn DOT cross_validation import train_test_split EOM
import pandas as pd EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from sklearn DOT preprocessing import Normalizer EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Convolution1D COMMA  Dense COMMA  Dropout COMMA  Flatten COMMA  MaxPooling1D EOM
from keras DOT utils import np_utils EOM
import numpy as np EOM
import h5py EOM
from keras import callbacks EOM
from keras DOT layers import LSTM COMMA  GRU COMMA  SimpleRNN EOM
from keras DOT callbacks import CSVLogger EOM
from keras DOT callbacks import ModelCheckpoint COMMA  EarlyStopping COMMA  ReduceLROnPlateau COMMA  CSVLogger EOM
import csv EOM
from sklearn DOT cross_validation import StratifiedKFold EOM
from sklearn DOT cross_validation import cross_val_score EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
with open( PARERIGHT  as f: EOM
reader  EQUAL  csv DOT reader( PARERIGHT  EOM
your_list  EQUAL  list( PARERIGHT  EOM
trainX  EQUAL  np DOT array( PARERIGHT  EOM
traindata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
Y  EQUAL  traindata DOT iloc[] EOM
y_train1  EQUAL  np DOT array( PARERIGHT  EOM
y_train EQUAL  to_categorical( PARERIGHT  EOM
maxlen  EQUAL  44100 EOM
trainX  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_train  EQUAL  np DOT reshape(trainX COMMA  ( PARERIGHT  PARERIGHT  EOM
batch_size  EQUAL  5 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
checkpointer  EQUAL  callbacks DOT ModelCheckpoint( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
import numpy as np EOM
import pandas as pd EOM
from process import get_price_inputs COMMA  Trainer EOM
from lambo DOT transformations import range_deviation_ema EOM
from lstm_categorical_rgd import LSTMTrainer COMMA  INPUT_DIM EOM
from common import training_files COMMA  test_files EOM
import copy EOM
import keras EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Dense EOM
from keras DOT models import load_model EOM
labels  EQUAL  [] EOM
EPOCHS_ARR  EQUAL  range( PARERIGHT  EOM
BATCH_SIZE  EQUAL  128 EOM
ofile  EQUAL  open( PARERIGHT  EOM
for EPOCHS in EPOCHS_ARR: EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(32 COMMA  return_sequences EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
trainer  EQUAL  LSTMTrainer( PARERIGHT  EOM
trainer DOT train( PARERIGHT  EOM
score COMMA  acc  EQUAL  trainer DOT evaluate( PARERIGHT  EOM
ofile DOT write(%( PARERIGHT  PARERIGHT  EOM
ofile DOT flush( PARERIGHT  EOM
import pandas as pd EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Activation COMMA  Dense COMMA  Embedding COMMA  SimpleRNN COMMA  Dropout EOM
from keras import backend as K EOM
from keras DOT callbacks import ReduceLROnPlateau COMMA  EarlyStopping COMMA  ModelCheckpoint EOM
from keras DOT callbacks import TensorBoard EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
imdb_df  EQUAL  pd DOT read_csv( PARERIGHT  EOM
pd DOT set_option( PARERIGHT  EOM
num_words  EQUAL  10000 EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts( PARERIGHT  EOM
sequences  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
y  EQUAL  np DOT array( PARERIGHT  EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
max_review_length  EQUAL  552 EOM
pad  EQUAL  EOM
X  EQUAL  pad_sequences( PARERIGHT  EOM
from sklearn DOT model_selection import train_test_split EOM
X_train COMMA  X_test COMMA  y_train COMMA  y_test  EQUAL  train_test_split( PARERIGHT  EOM
input_shape  EQUAL  X_train DOT shape EOM
K DOT clear_session( PARERIGHT  EOM
LSTM_model  EQUAL  Sequential( PARERIGHT  EOM
LSTM_model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(SimpleRNN( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT summary( PARERIGHT  EOM
LSTM_model DOT compile( PARERIGHT  EOM
LSTM_history  EQUAL  LSTM_model DOT fit(X_train COMMA y_train COMMA epochs EQUAL  COMMA batch_size EQUAL  COMMA validation_split EQUAL from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout EOM
from keras DOT layers import LSTM COMMA  Merge COMMA  Dense COMMA  Embedding EOM
number_of_hidden_units_LSTM  EQUAL  512 EOM
max_length_questions  EQUAL  54 EOM
word_feature_size  EQUAL  300 EOM
nb_classes  EQUAL  430 EOM
def model( PARERIGHT : EOM
model_image  EQUAL  Sequential( PARERIGHT  EOM
model_image DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model_image DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_language  EQUAL  Sequential( PARERIGHT  EOM
model_language DOT add(LSTM(number_of_hidden_units_LSTM COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Conv1D EOM
from keras DOT layers import MaxPooling1D EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import Dropout EOM
from keras DOT models import load_model EOM
from keras DOT utils import plot_model EOM
from prepare_data import PrepareData as prep_data EOM
class Models: EOM
def __init__( PARERIGHT : EOM
if model  EQUAL  EQUAL  : EOM
self DOT lstm_model( PARERIGHT  EOM
if model  EQUAL  EQUAL  : EOM
self DOT cnn_model( PARERIGHT  EOM
def get_history( PARERIGHT : EOM
return self DOT history EOM
def lstm_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(100 COMMA  nput_shape EQUAL ( PARERIGHT  COMMA ctivation EQUAL  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
plot_model( PARERIGHT  EOM
def cnn_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D(32 COMMA  kernel_size EQUAL  COMMA  strides EQUAL  COMMA  activation EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
history  EQUAL  model DOT fit(train_X COMMA  train_y COMMA  epochs EQUAL  COMMA lidation_data EQUAL ( PARERIGHT  COMMA  batch_size EQUAL  COMMA erbose EQUAL  COMMA  shuffle EQUAL  PARERIGHT  EOM
self DOT history  EQUAL  history EOM
model DOT save( PARERIGHT  EOM
import os EOM
import re EOM
import tarfile EOM
import requests EOM
from pugnlp DOT futil import path_status COMMA  find_files EOM
BIG_URLS  EQUAL  {: ( PARERIGHT  COMMA : ( PARERIGHT  COMMA : ( PARERIGHT  COMMA : ( PARERIGHT  COMMA : ( PARERIGHT  COMMA } EOM
def dropbox_basename( PARERIGHT : EOM
filename  EQUAL  os DOT path DOT basename( PARERIGHT  EOM
match  EQUAL  re DOT findall( PARERIGHT  EOM
if match: EOM
return filename[] EOM
return filename EOM
def download_file( PARERIGHT : EOM
if filename is None: EOM
filename  EQUAL  dropbox_basename( PARERIGHT  EOM
file_path  EQUAL  os DOT path DOT join( PARERIGHT  EOM
if url DOT endswith( PARERIGHT : EOM
if verbose: EOM
tqdm_prog  EQUAL  tqdm EOM
else: EOM
tqdm_prog  EQUAL  no_tqdm EOM
r  EQUAL  requests DOT get( PARERIGHT  EOM
size  EQUAL  r DOT headers DOT get( PARERIGHT  if size is None else size EOM
stat  EQUAL  path_status( PARERIGHT  EOM
r DOT close( PARERIGHT  EOM
return file_path EOM
with open( PARERIGHT  as f: EOM
for chunk in r DOT iter_content( PARERIGHT : EOM
f DOT write( PARERIGHT  EOM
r DOT close( PARERIGHT  EOM
return file_path EOM
def untar( PARERIGHT : EOM
if fname DOT endswith( PARERIGHT : EOM
with tarfile DOT open( PARERIGHT  as tf: EOM
tf DOT extractall( PARERIGHT  EOM
else: EOM
maxlen  EQUAL  400 EOM
batch_size  EQUAL  32 EOM
embedding_dims  EQUAL  300 EOM
epochs  EQUAL  2 EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Flatten COMMA  LSTM EOM
num_neurons  EQUAL  50 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(num_neurons COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
import glob EOM
import os EOM
from random import shuffle EOM
def pre_process_data( PARERIGHT : EOM
negative_path  EQUAL  os DOT path DOT join( PARERIGHT  EOM
pos_label  EQUAL  1 EOM
neg_label  EQUAL  0 EOM
dataset  EQUAL  [] EOM
for filename in glob DOT glob(os DOT path DOT join( PARERIGHT  PARERIGHT : EOM
with open( PARERIGHT  as f: EOM
dataset DOT append((pos_label COMMA  f DOT read( PARERIGHT  PARERIGHT  PARERIGHT  EOM
for filename in glob DOT glob(os DOT path DOT join( PARERIGHT  PARERIGHT : EOM
with open( PARERIGHT  as f: EOM
dataset DOT append((neg_label COMMA  f DOT read( PARERIGHT  PARERIGHT  PARERIGHT  EOM
shuffle( PARERIGHT  EOM
return dataset EOM
from nltk DOT tokenize import TreebankWordTokenizer EOM
from gensim DOT models import KeyedVectors EOM
word_vectors  EQUAL  KeyedVectors DOT load_word2vec_format( PARERIGHT  EOM
def tokenize_and_vectorize( PARERIGHT : EOM
tokenizer  EQUAL  TreebankWordTokenizer( PARERIGHT  EOM
vectorized_data  EQUAL  [] EOM
expected  EQUAL  [] EOM
for sample in dataset: EOM
tokens  EQUAL  tokenizer DOT tokenize( PARERIGHT  EOM
sample_vecs  EQUAL  [] EOM
for token in tokens: EOM
try: EOM
sample_vecs DOT append( PARERIGHT  EOM
except KeyError: EOM
vectorized_data DOT append( PARERIGHT  EOM
return vectorized_data EOM
def collect_expected( PARERIGHT : EOM
expected  EQUAL  [] EOM
for sample in dataset: EOM
expected DOT append( PARERIGHT  EOM
return expected EOM
def pad_trunc( PARERIGHT : EOM
new_data  EQUAL  [] EOM
zero_vector  EQUAL  [] EOM
for _ in range(len( PARERIGHT  PARERIGHT : EOM
zero_vector DOT append( PARERIGHT  EOM
for sample in data: EOM
if len( PARERIGHT  > maxlen: EOM
temp  EQUAL  sample[] EOM
elif len( PARERIGHT  < maxlen: EOM
temp  EQUAL  sample EOM
additional_elems  EQUAL  maxlen - len( PARERIGHT  EOM
for _ in range( PARERIGHT : EOM
temp DOT append( PARERIGHT  EOM
else: EOM
temp  EQUAL  sample EOM
new_data DOT append( PARERIGHT  EOM
return new_data EOM
import numpy as np EOM
dataset  EQUAL  pre_process_data( PARERIGHT  EOM
vectorized_data  EQUAL  tokenize_and_vectorize( PARERIGHT  EOM
expected  EQUAL  collect_expected( PARERIGHT  EOM
split_point  EQUAL  int(len( PARERIGHT  *  DOT 8 PARERIGHT  EOM
x_train  EQUAL  vectorized_data[] EOM
y_train  EQUAL  expected[] EOM
x_test  EQUAL  vectorized_data[] EOM
y_test  EQUAL  expected[] EOM
maxlen  EQUAL  400 EOM
epochs  EQUAL  2 EOM
x_train  EQUAL  pad_trunc( PARERIGHT  EOM
x_test  EQUAL  pad_trunc( PARERIGHT  EOM
x_train  EQUAL  np DOT reshape(x_train COMMA  (len( PARERIGHT  COMMA  maxlen COMMA  embedding_dims PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  np DOT array( PARERIGHT  EOM
x_test  EQUAL  np DOT reshape(x_test COMMA  (len( PARERIGHT  COMMA  maxlen COMMA  embedding_dims PARERIGHT  PARERIGHT  EOM
y_test  EQUAL  np DOT array( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Flatten COMMA  LSTM EOM
num_neurons  EQUAL  50 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(num_neurons COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(x_train COMMA  y_train COMMA batch_size EQUAL  COMMA epochs EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
model_structure  EQUAL  model DOT to_json( PARERIGHT  EOM
with open( PARERIGHT  as json_file: EOM
json_file DOT write( PARERIGHT  EOM
model DOT save_weights( PARERIGHT  EOM
from keras DOT models import model_from_json EOM
with open( PARERIGHT  as json_file: EOM
json_string  EQUAL  json_file DOT read( PARERIGHT  EOM
model  EQUAL  model_from_json( PARERIGHT  EOM
model DOT load_weights( PARERIGHT  EOM
sample_1  EQUAL  EOM
vec_list  EQUAL  tokenize_and_vectorize([] PARERIGHT  EOM
test_vec_list  EQUAL  pad_trunc( PARERIGHT  EOM
test_vec  EQUAL  np DOT reshape(test_vec_list COMMA  (len( PARERIGHT  COMMA  maxlen COMMA  embedding_dims PARERIGHT  PARERIGHT  EOM
def test_len( PARERIGHT : EOM
total_len  EQUAL  truncated  EQUAL  exact  EQUAL  padded  EQUAL  0 EOM
for sample in data: EOM
total_len + EQUAL  len( PARERIGHT  EOM
if len( PARERIGHT  > maxlen: EOM
truncated + EQUAL  1 EOM
elif len( PARERIGHT  < maxlen: EOM
padded + EQUAL  1 EOM
else: EOM
exact + EQUAL  1 EOM
dataset  EQUAL  pre_process_data( PARERIGHT  EOM
vectorized_data  EQUAL  tokenize_and_vectorize( PARERIGHT  EOM
test_len( PARERIGHT  EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Flatten COMMA  LSTM EOM
maxlen  EQUAL  200 EOM
epochs  EQUAL  2 EOM
dataset  EQUAL  pre_process_data( PARERIGHT  EOM
vectorized_data  EQUAL  tokenize_and_vectorize( PARERIGHT  EOM
expected  EQUAL  collect_expected( PARERIGHT  EOM
split_point  EQUAL  int(len( PARERIGHT  *  DOT 8 PARERIGHT  EOM
x_train  EQUAL  vectorized_data[] EOM
y_train  EQUAL  expected[] EOM
x_test  EQUAL  vectorized_data[] EOM
y_test  EQUAL  expected[] EOM
x_train  EQUAL  pad_trunc( PARERIGHT  EOM
x_test  EQUAL  pad_trunc( PARERIGHT  EOM
x_train  EQUAL  np DOT reshape(x_train COMMA  (len( PARERIGHT  COMMA  maxlen COMMA  embedding_dims PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  np DOT array( PARERIGHT  EOM
x_test  EQUAL  np DOT reshape(x_test COMMA  (len( PARERIGHT  COMMA  maxlen COMMA  embedding_dims PARERIGHT  PARERIGHT  EOM
y_test  EQUAL  np DOT array( PARERIGHT  EOM
num_neurons  EQUAL  50 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(num_neurons COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(x_train COMMA  y_train COMMA batch_size EQUAL  COMMA epochs EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
model_structure  EQUAL  model DOT to_json( PARERIGHT  EOM
with open( PARERIGHT  as json_file: EOM
json_file DOT write( PARERIGHT  EOM
model DOT save_weights( PARERIGHT  EOM
dataset  EQUAL  pre_process_data( PARERIGHT  EOM
expected  EQUAL  collect_expected( PARERIGHT  EOM
def avg_len( PARERIGHT : EOM
total_len  EQUAL  0 EOM
for sample in data: EOM
total_len + EQUAL  len( PARERIGHT  EOM
def clean_data( PARERIGHT : EOM
new_data  EQUAL  [] EOM
VALID  EQUAL  EOM
for sample in data: EOM
new_sample  EQUAL  [] EOM
if char in VALID: EOM
new_sample DOT append( PARERIGHT  EOM
else: EOM
new_sample DOT append( PARERIGHT  EOM
new_data DOT append( PARERIGHT  EOM
return new_data EOM
listified_data  EQUAL  clean_data( PARERIGHT  EOM
def char_pad_trunc( PARERIGHT : EOM
new_dataset  EQUAL  [] EOM
for sample in data: EOM
if len( PARERIGHT  > maxlen: EOM
new_data  EQUAL  sample[] EOM
elif len( PARERIGHT  < maxlen: EOM
pads  EQUAL  maxlen - len( PARERIGHT  EOM
new_data  EQUAL  sample + [] * pads EOM
else: EOM
new_data  EQUAL  sample EOM
new_dataset DOT append( PARERIGHT  EOM
return new_dataset EOM
maxlen  EQUAL  1500 EOM
def create_dicts( PARERIGHT : EOM
chars  EQUAL  set( PARERIGHT  EOM
for sample in data: EOM
chars DOT update(set( PARERIGHT  PARERIGHT  EOM
char_indices  EQUAL  dict(( PARERIGHT  for i COMMA  c in enumerate( PARERIGHT  PARERIGHT  EOM
indices_char  EQUAL  dict(( PARERIGHT  for i COMMA  c in enumerate( PARERIGHT  PARERIGHT  EOM
return char_indices COMMA  indices_char EOM
import numpy as np EOM
def onehot_encode( PARERIGHT : EOM
for i COMMA  sentence in enumerate( PARERIGHT : EOM
for t COMMA  char in enumerate( PARERIGHT : EOM
X[]]  EQUAL  1 EOM
return X EOM
dataset  EQUAL  pre_process_data( PARERIGHT  EOM
expected  EQUAL  collect_expected( PARERIGHT  EOM
listified_data  EQUAL  clean_data( PARERIGHT  EOM
maxlen  EQUAL  1500 EOM
common_length_data  EQUAL  char_pad_trunc( PARERIGHT  EOM
char_indices COMMA  indices_char  EQUAL  create_dicts( PARERIGHT  EOM
encoded_data  EQUAL  onehot_encode( PARERIGHT  EOM
split_point  EQUAL  int(len( PARERIGHT  *  DOT 8 PARERIGHT  EOM
x_train  EQUAL  encoded_data[] EOM
y_train  EQUAL  expected[] EOM
x_test  EQUAL  encoded_data[] EOM
y_test  EQUAL  expected[] EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Embedding COMMA  Flatten COMMA  LSTM EOM
num_neurons  EQUAL  40 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(num_neurons COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL (maxlen COMMA  len(char_indices DOT keys( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
batch_size  EQUAL  32 EOM
epochs  EQUAL  10 EOM
model DOT fit(x_train COMMA  y_train COMMA batch_size EQUAL  COMMA epochs EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
model_structure  EQUAL  model DOT to_json( PARERIGHT  EOM
with open( PARERIGHT  as json_file: EOM
json_file DOT write( PARERIGHT  EOM
model DOT save_weights( PARERIGHT  EOM
from nltk DOT corpus import gutenberg EOM
text  EQUAL  EOM
for txt in gutenberg DOT fileids( PARERIGHT : EOM
if  in txt: EOM
text + EQUAL  gutenberg DOT raw( PARERIGHT  DOT lower( PARERIGHT  EOM
chars  EQUAL  sorted(list(set( PARERIGHT  PARERIGHT  PARERIGHT  EOM
char_indices  EQUAL  dict(( PARERIGHT  for i COMMA  c in enumerate( PARERIGHT  PARERIGHT  EOM
indices_char  EQUAL  dict(( PARERIGHT  for i COMMA  c in enumerate( PARERIGHT  PARERIGHT  EOM
maxlen  EQUAL  40 EOM
step  EQUAL  3 EOM
sentences  EQUAL  [] EOM
next_chars  EQUAL  [] EOM
for i in range(0 COMMA  len( PARERIGHT  - maxlen COMMA  step PARERIGHT : EOM
sentences DOT append( PARERIGHT  EOM
next_chars DOT append( PARERIGHT  EOM
X  EQUAL  np DOT zeros((len( PARERIGHT  COMMA  maxlen COMMA  len( PARERIGHT  PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
y  EQUAL  np DOT zeros((len( PARERIGHT  COMMA  len( PARERIGHT  PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
for i COMMA  sentence in enumerate( PARERIGHT : EOM
for t COMMA  char in enumerate( PARERIGHT : EOM
X[]]  EQUAL  1 EOM
y[]]]  EQUAL  1 EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Activation EOM
from keras DOT layers import LSTM EOM
from keras DOT optimizers import RMSprop EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(128 COMMA  input_shape EQUAL (maxlen COMMA  len( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense(len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
epochs  EQUAL  6 EOM
batch_size  EQUAL  128 EOM
model_structure  EQUAL  model DOT to_json( PARERIGHT  EOM
with open( PARERIGHT  as json_file: EOM
json_file DOT write( PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT fit( PARERIGHT  EOM
model DOT save_weights( DOT format( PARERIGHT  PARERIGHT  EOM
from keras DOT models import model_from_json EOM
with open( PARERIGHT  as f: EOM
model_json  EQUAL  f DOT read( PARERIGHT  EOM
model  EQUAL  model_from_json( PARERIGHT  EOM
model DOT load_weights( PARERIGHT  EOM
import random EOM
def sample( PARERIGHT : EOM
preds  EQUAL  np DOT asarray( PARERIGHT  DOT astype( PARERIGHT  EOM
preds  EQUAL  np DOT log( PARERIGHT  / temperature EOM
exp_preds  EQUAL  np DOT exp( PARERIGHT  EOM
preds  EQUAL  exp_preds / np DOT sum( PARERIGHT  EOM
probas  EQUAL  np DOT random DOT multinomial( PARERIGHT  EOM
return np DOT argmax( PARERIGHT  EOM
import sys EOM
start_index  EQUAL  random DOT randint(0 COMMA  len( PARERIGHT  - maxlen - 1 PARERIGHT  EOM
for diversity in []: EOM
generated  EQUAL  EOM
sentence  EQUAL  text[] EOM
generated + EQUAL  sentence EOM
sys DOT stdout DOT write( PARERIGHT  EOM
for i in range( PARERIGHT : EOM
x  EQUAL  np DOT zeros((1 COMMA  maxlen COMMA  len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
for t COMMA  char in enumerate( PARERIGHT : EOM
x[]]  EQUAL  1 DOT  EOM
preds  EQUAL  model DOT predict( PARERIGHT [] EOM
next_index  EQUAL  sample( PARERIGHT  EOM
next_char  EQUAL  indices_char[] EOM
generated + EQUAL  next_char EOM
sentence  EQUAL  sentence[] + next_char EOM
sys DOT stdout DOT write( PARERIGHT  EOM
sys DOT stdout DOT flush( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import GRU EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
from __future__ import print_function EOM
from keras import optimizers EOM
from keras DOT layers import Dense COMMA  Input COMMA  Embedding COMMA  TimeDistributed COMMA  GlobalMaxPooling1D COMMA  Bidirectional\ EOM
 COMMA  RepeatVector COMMA  Conv1D COMMA  LSTM EOM
from keras DOT models import Model COMMA  Sequential EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers DOT convolutional import Conv2D COMMA  MaxPooling2D EOM
from keras DOT layers import Flatten COMMA  Lambda EOM
from keras DOT layers DOT core import Dropout COMMA  Activation COMMA  Permute EOM
from keras DOT layers DOT merge import concatenate COMMA  multiply EOM
from keras import backend as K EOM
import numpy as np EOM
def mlp1( PARERIGHT : EOM
feature_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
output  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA  optimizer EQUAL ( PARERIGHT  COMMA  metrics EQUAL [] PARERIGHT  EOM
return model EOM
def cnn( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(32 COMMA  ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA  optimizer EQUAL ( PARERIGHT  COMMA  metrics EQUAL [] PARERIGHT  EOM
return model EOM
def BiLSTM_Attention( PARERIGHT : EOM
char_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
char_embedding  EQUAL  Embedding(input_dim EQUAL  COMMA  output_dim EQUAL  COMMA tch_input_shape EQUAL ( PARERIGHT  COMMA mask_zero EQUAL  COMMA trainable EQUAL  COMMA weights EQUAL [] PARERIGHT  EOM
char_embedding2  EQUAL  TimeDistributed( PARERIGHT ( PARERIGHT  EOM
char_cnn  EQUAL  TimeDistributed(Conv1D( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
char_macpool  EQUAL  TimeDistributed(GlobalMaxPooling1D( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
char_macpool  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
word_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
word_embedding  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
word_embedding  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
embedding  EQUAL  concatenate( PARERIGHT  EOM
BiLSTM0  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  merge_mode EQUAL  PARERIGHT ( PARERIGHT  EOM
BiLSTM0  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
BiLSTM  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  merge_mode EQUAL  PARERIGHT ( PARERIGHT  EOM
BiLSTM  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
attention  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
attention  EQUAL  Flatten( PARERIGHT ( PARERIGHT  EOM
attention  EQUAL  Activation( PARERIGHT ( PARERIGHT  EOM
attention  EQUAL  RepeatVector( PARERIGHT ( PARERIGHT  EOM
attention  EQUAL  Permute( PARERIGHT ( PARERIGHT  EOM
representation  EQUAL  multiply( PARERIGHT  EOM
representation  EQUAL  BatchNormalization( PARERIGHT ( PARERIGHT  EOM
representation  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
representation  EQUAL  Lambda(lambda xin: K DOT sum( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
output  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
Models  EQUAL  Model( PARERIGHT  EOM
Models DOT compile(loss EQUAL  COMMA  optimizer EQUAL ( PARERIGHT  COMMA  metrics EQUAL [] PARERIGHT  EOM
return Models EOM
def lstm_attention_model( PARERIGHT : EOM
input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
embedding  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
BiLSTM0  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  merge_mode EQUAL  PARERIGHT ( PARERIGHT  EOM
BiLSTM0  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
BiLSTM  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  merge_mode EQUAL  PARERIGHT ( PARERIGHT  EOM
BiLSTM  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
attention  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
attention  EQUAL  Flatten( PARERIGHT ( PARERIGHT  EOM
attention  EQUAL  Activation( PARERIGHT ( PARERIGHT  EOM
attention  EQUAL  RepeatVector( PARERIGHT ( PARERIGHT  EOM
attention  EQUAL  Permute( PARERIGHT ( PARERIGHT  EOM
representation  EQUAL  multiply( PARERIGHT  EOM
representation  EQUAL  BatchNormalization( PARERIGHT ( PARERIGHT  EOM
representation  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
representation  EQUAL  Lambda(lambda xin: K DOT sum( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
output  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA  optimizer EQUAL ( PARERIGHT  COMMA  metrics EQUAL [] PARERIGHT  EOM
return model EOM
def lstm_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm_mul_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm_mul_model_all( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
if __name__  EQUAL  EQUAL  : EOM
batch_size  EQUAL  128 EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dropout EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers import GlobalAveragePooling1D EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
return model EOM
def LSTM_Dropout_Sentence_Classifier( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
return model EOM
def CNN_LSTM_Sentence_Classifier( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
return model EOM
def CNN_Sentence_Classifier( PARERIGHT : EOM
seq_length  EQUAL  max_review_length EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(64 COMMA  3 COMMA  activation EQUAL  COMMA  padding EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(GlobalAveragePooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
return model EOM
def Stacked_LSTM_Sentence_Classifier( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
import numpy EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
numpy DOT random DOT seed( PARERIGHT  EOM
top_words  EQUAL  5000 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
max_review_length  EQUAL  500 EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
embedding_vecor_length  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
import numpy EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT layers import Dropout EOM
numpy DOT random DOT seed( PARERIGHT  EOM
top_words  EQUAL  5000 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
max_review_length  EQUAL  500 EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
embedding_vecor_length  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
import numpy EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
numpy DOT random DOT seed( PARERIGHT  EOM
top_words  EQUAL  5000 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
max_review_length  EQUAL  500 EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
embedding_vecor_length  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
import numpy EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
numpy DOT random DOT seed( PARERIGHT  EOM
top_words  EQUAL  5000 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
max_review_length  EQUAL  500 EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
embedding_vecor_length  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential COMMA  load_model EOM
from keras DOT optimizers import Adam COMMA  RMSprop EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
from keras DOT layers DOT convolutional import ( PARERIGHT  EOM
from collections import deque EOM
import sys EOM
class ResearchModels( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT seq_length  EQUAL  seq_length EOM
self DOT load_model  EQUAL  load_model EOM
self DOT saved_model  EQUAL  saved_model EOM
self DOT nb_classes  EQUAL  nb_classes EOM
self DOT feature_queue  EQUAL  deque( PARERIGHT  EOM
metrics  EQUAL  [] EOM
if self DOT nb_classes > EQUAL  10: EOM
metrics DOT append( PARERIGHT  EOM
if self DOT saved_model is not None: EOM
self DOT model  EQUAL  load_model( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT lstm( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT lrcn( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT mlp( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT conv_3d( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT c3d( PARERIGHT  EOM
else: EOM
sys DOT exit( PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
def lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def lrcn( PARERIGHT : EOM
model DOT add(TimeDistributed(Conv2D(32 COMMA  ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA tivation EQUAL  COMMA  padding EQUAL  PARERIGHT  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(32 COMMA  ( PARERIGHT  COMMA ernel_initializer EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(64 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(64 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(128 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(128 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(256 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(256 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(512 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Conv2D(512 COMMA  ( PARERIGHT  COMMA adding EQUAL  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(MaxPooling2D(( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Flatten( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def mlp( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def conv_3d( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv3D( ( PARERIGHT  COMMA  activation EQUAL  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(128 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(128 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(256 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(256 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def c3d( PARERIGHT : EOM
model DOT add(Conv3D(64 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  COMMA input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA order_mode EQUAL  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(128 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA order_mode EQUAL  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(256 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(256 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA order_mode EQUAL  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(512 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(512 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA order_mode EQUAL  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(512 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(512 COMMA  3 COMMA  3 COMMA  3 COMMA  activation EQUAL  COMMA order_mode EQUAL  COMMA  name EQUAL  COMMA bsample EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(ZeroPadding3D(padding EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  COMMA order_mode EQUAL  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return modelfrom kerasImpl import data EOM
from numpy import argmax EOM
from random import randint EOM
from pickle import load EOM
from numpy import array EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from keras DOT utils import to_categorical EOM
from keras DOT utils DOT vis_utils import plot_model EOM
from keras DOT models import Sequential EOM
from keras DOT models import Model EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import RepeatVector EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import Input EOM
from keras DOT callbacks import ModelCheckpoint EOM
from nltk DOT translate DOT bleu_score import corpus_bleu EOM
import numpy as np EOM
import random EOM
def define_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(RepeatVector( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def define_model_powerful( PARERIGHT : EOM
encoder_embedding  EQUAL  Embedding( PARERIGHT  EOM
encoder_embedding  EQUAL  encoder_embedding( PARERIGHT  EOM
encoder_lstm1  EQUAL  LSTM( PARERIGHT  EOM
encoder_lstm2  EQUAL  LSTM( PARERIGHT  EOM
encoder_outputs COMMA  state_h COMMA  state_c  EQUAL  encoder_lstm2( PARERIGHT  EOM
encoder_dropout  EQUAL  Dropout( PARERIGHT  EOM
encoder_outputs  EQUAL  encoder_dropout( PARERIGHT  EOM
encoder_states  EQUAL  [] EOM
decoder_inputs  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
decoder_lstm1  EQUAL  LSTM( PARERIGHT  EOM
lstm_output  EQUAL  decoder_lstm1( PARERIGHT  EOM
decoder_lstm2  EQUAL  LSTM( PARERIGHT  EOM
decoder_outputs COMMA  _ COMMA  _  EQUAL  decoder_lstm2( PARERIGHT  EOM
decoder_dropout  EQUAL  Dropout( PARERIGHT  EOM
decoder_outputs  EQUAL  decoder_dropout( PARERIGHT  EOM
decoder_dense  EQUAL  Dense( PARERIGHT  EOM
decoder_outputs  EQUAL  decoder_dense( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
encoder_model  EQUAL  Model( PARERIGHT  EOM
decoder_state_input_h  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
decoder_state_input_c  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
decoder_states_inputs  EQUAL  [] EOM
temporary_output  EQUAL  decoder_lstm1( PARERIGHT  EOM
decoder_outputs COMMA  state_h COMMA  state_c  EQUAL  decoder_lstm2( PARERIGHT  EOM
decoder_states  EQUAL  [] EOM
decoder_outputs  EQUAL  decoder_dense( PARERIGHT  EOM
decoder_model  EQUAL  Model( PARERIGHT  EOM
return model COMMA  encoder_model COMMA  decoder_model EOM
def predict_sequence( PARERIGHT : EOM
prediction  EQUAL  model DOT predict( PARERIGHT [] EOM
integers  EQUAL  [] EOM
target  EQUAL  list( PARERIGHT  EOM
for i in integers: EOM
word  EQUAL  data DOT word_for_id( PARERIGHT  EOM
if word is None: EOM
break EOM
target DOT append( PARERIGHT  EOM
return  DOT join( PARERIGHT  EOM
def evaluate_model( PARERIGHT : EOM
actual COMMA  predicted  EQUAL  list( PARERIGHT  COMMA  list( PARERIGHT  EOM
for i COMMA  source in enumerate( PARERIGHT : EOM
source  EQUAL  source DOT reshape(( PARERIGHT  PARERIGHT  EOM
translation  EQUAL  predict_sequence( PARERIGHT  EOM
raw_target COMMA  raw_src  EQUAL  raw_dataset[] EOM
if i < 10: EOM
actual DOT append(raw_target DOT split( PARERIGHT  PARERIGHT  EOM
predicted DOT append(translation DOT split( PARERIGHT  PARERIGHT  EOM
def generate_sequence( PARERIGHT : EOM
return [] EOM
def get_dataset( PARERIGHT : EOM
X1 COMMA  X2 COMMA  y  EQUAL  list( PARERIGHT  COMMA  list( PARERIGHT  COMMA  list( PARERIGHT  EOM
for _ in range( PARERIGHT : EOM
source  EQUAL  generate_sequence( PARERIGHT  EOM
target  EQUAL  generate_sequence( PARERIGHT  EOM
target DOT reverse( PARERIGHT  EOM
target_in  EQUAL  [] + target[] EOM
src_encoded  EQUAL  to_categorical( PARERIGHT  EOM
tar_encoded  EQUAL  to_categorical( PARERIGHT  EOM
tar2_encoded  EQUAL  to_categorical( PARERIGHT  EOM
X1 DOT append( PARERIGHT  EOM
X2 DOT append( PARERIGHT  EOM
y DOT append( PARERIGHT  EOM
X1  EQUAL  np DOT squeeze(array( PARERIGHT  COMMA  axis EQUAL  PARERIGHT  EOM
X2  EQUAL  np DOT squeeze(array( PARERIGHT  COMMA  axis EQUAL  PARERIGHT  EOM
y  EQUAL  np DOT squeeze(array( PARERIGHT  COMMA  axis EQUAL  PARERIGHT  EOM
return X1 COMMA  X2 COMMA  yimport pytest EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras import Input COMMA  Model EOM
from keras DOT layers import Conv2D COMMA  Bidirectional EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(2 COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
inner_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_lstm  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  name EQUAL  PARERIGHT ( PARERIGHT  EOM
encoder  EQUAL  Model( PARERIGHT  EOM
outer_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_encoder  EQUAL  TimeDistributed( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
preds  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
def test_plot_sequential_embedding( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
import numpy as np EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
def build_improved_model( PARERIGHT : EOM
model DOT add(LSTM(nput_shape EQUAL ( PARERIGHT  COMMA units EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def build_basic_model( PARERIGHT : EOM
model DOT add(LSTM(nput_shape EQUAL ( PARERIGHT  COMMA units EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout EOM
from keras DOT layers import LSTM COMMA  Merge COMMA  Dense EOM
def build_lstm_model( PARERIGHT : EOM
image_feature_size  EQUAL  1000 EOM
word_feature_size  EQUAL  4096 EOM
number_of_LSTM  EQUAL  3 EOM
number_of_hidden_units_lstm  EQUAL  512 EOM
max_length_questions  EQUAL  30 EOM
number_of_dense_layers  EQUAL  2 EOM
number_of_hidden_units  EQUAL  1024 EOM
activation_function  EQUAL  EOM
dropout_pct  EQUAL  0 DOT 5 EOM
model_image  EQUAL  Sequential( PARERIGHT  EOM
model_language  EQUAL  Sequential( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(number_of_hidden_units_lstm COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
numpy DOT random DOT seed( PARERIGHT  EOM
top_words  EQUAL  5000 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
max_review_length  EQUAL  500 EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
embedding_vecor_length  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(X_train COMMA  y_train COMMA  validation_data EQUAL ( PARERIGHT  COMMA  epochs EQUAL  COMMA  batch_size EQUAL  PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
import numpy EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
numpy DOT random DOT seed( PARERIGHT  EOM
top_words  EQUAL  5000 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
max_review_length  EQUAL  500 EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
embedding_vecor_length  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
import numpy EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dropout EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
numpy DOT random DOT seed( PARERIGHT  EOM
top_words  EQUAL  5000 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
max_review_length  EQUAL  500 EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
embedding_vecor_length  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
import numpy EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
numpy DOT random DOT seed( PARERIGHT  EOM
top_words  EQUAL  5000 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
max_review_length  EQUAL  500 EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
embedding_vecor_length  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
import numpy EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
numpy DOT random DOT seed( PARERIGHT  EOM
top_words  EQUAL  5000 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
max_review_length  EQUAL  500 EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
embedding_vecor_length  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT models import Sequential COMMA  load_model EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Embedding COMMA  Input EOM
from keras DOT layers import LSTM COMMA  SimpleRNN COMMA  GRU COMMA  Merge COMMA  merge COMMA  Masking EOM
from keras DOT models import Model EOM
from keras DOT callbacks import Callback EOM
from keras DOT callbacks import EarlyStopping EOM
from keras import backend as K EOM
from keras DOT layers DOT wrappers import Bidirectional EOM
import numpy as np EOM
from numpy DOT random import RandomState EOM
from random import shuffle EOM
import datetime EOM
np DOT random DOT seed( PARERIGHT  EOM
class LossHistory( PARERIGHT : EOM
def on_train_begin( PARERIGHT : EOM
self DOT losses  EQUAL  [] EOM
self DOT val_losses  EQUAL  [] EOM
def on_epoch_end( PARERIGHT : EOM
self DOT losses DOT append(logs DOT get( PARERIGHT  PARERIGHT  EOM
self DOT val_losses DOT append(logs DOT get( PARERIGHT  PARERIGHT  EOM
def train_Bi_LSTM( PARERIGHT : EOM
speed_input  EQUAL  Input(shape  EQUAL ( PARERIGHT  COMMA  name  EQUAL  PARERIGHT  EOM
main_output  EQUAL  Bidirectional(LSTM(input_shape  EQUAL ( PARERIGHT  COMMA  output_dim  EQUAL [] COMMA  return_sequences EQUAL  PARERIGHT  COMMA  merge_mode EQUAL  PARERIGHT ( PARERIGHT  EOM
final_model  EQUAL  Model( PARERIGHT  EOM
final_model DOT summary( PARERIGHT  EOM
final_model DOT compile( PARERIGHT  EOM
history  EQUAL  LossHistory( PARERIGHT  EOM
earlyStopping  EQUAL  EarlyStopping( PARERIGHT  EOM
final_model DOT fit( PARERIGHT  EOM
return final_model COMMA  history EOM
def train_2_Bi_LSTM_mask( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Masking(mask_value EQUAL  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(output_dim  EQUAL [] COMMA  return_sequences EQUAL  COMMA  input_shape  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(output_dim  EQUAL [] COMMA  return_sequences EQUAL  COMMA  input_shape  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
history  EQUAL  LossHistory( PARERIGHT  EOM
earlyStopping  EQUAL  EarlyStopping( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
return model COMMA  history EOM
def train_2_Bi_LSTM( PARERIGHT : EOM
speed_input  EQUAL  Input(shape  EQUAL ( PARERIGHT  COMMA  name  EQUAL  PARERIGHT  EOM
lstm_output  EQUAL  Bidirectional(LSTM(input_shape  EQUAL ( PARERIGHT  COMMA  output_dim  EQUAL [] COMMA  return_sequences EQUAL  PARERIGHT  COMMA  merge_mode EQUAL  PARERIGHT ( PARERIGHT  EOM
main_output  EQUAL  LSTM(input_shape  EQUAL ( PARERIGHT  COMMA  output_dim  EQUAL [] PARERIGHT ( PARERIGHT  EOM
final_model  EQUAL  Model( PARERIGHT  EOM
final_model DOT summary( PARERIGHT  EOM
final_model DOT compile( PARERIGHT  EOM
history  EQUAL  LossHistory( PARERIGHT  EOM
earlyStopping  EQUAL  EarlyStopping( PARERIGHT  EOM
final_model DOT fit( PARERIGHT  EOM
return final_model COMMA  historyimport pandas as pd EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Activation COMMA  Dense COMMA  Embedding COMMA  SimpleRNN COMMA  LSTM COMMA  Dropout EOM
from keras import backend as K EOM
from keras_tqdm import TQDMNotebookCallback EOM
from keras DOT callbacks import ReduceLROnPlateau COMMA  EarlyStopping COMMA  ModelCheckpoint EOM
from keras DOT callbacks import TensorBoard EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
imdb_df  EQUAL  pd DOT read_csv( PARERIGHT  EOM
pd DOT set_option( PARERIGHT  EOM
num_words  EQUAL  10000 EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts( PARERIGHT  EOM
sequences  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
y  EQUAL  np DOT array( PARERIGHT  EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
max_review_length  EQUAL  552 EOM
pad  EQUAL  EOM
X  EQUAL  pad_sequences( PARERIGHT  EOM
from sklearn DOT model_selection import train_test_split EOM
X_train COMMA  X_test COMMA  y_train COMMA  y_test  EQUAL  train_test_split( PARERIGHT  EOM
input_shape  EQUAL  X_train DOT shape EOM
K DOT clear_session( PARERIGHT  EOM
LSTM_model  EQUAL  Sequential( PARERIGHT  EOM
LSTM_model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT summary( PARERIGHT  EOM
LSTM_model DOT compile( PARERIGHT  EOM
LSTM_history  EQUAL  LSTM_model DOT fit(X_train COMMA y_train COMMA epochs EQUAL  COMMA batch_size EQUAL  COMMA validation_split EQUAL import tflearn EOM
import numpy as np EOM
from sklearn DOT manifold import TSNE EOM
import matplotlib DOT pyplot as plt EOM
from tflearn DOT layers DOT core import input_data COMMA  dropout COMMA  fully_connected EOM
from tflearn DOT layers DOT conv import conv_1d COMMA  global_max_pool EOM
from tflearn DOT layers DOT merge_ops import merge EOM
from tflearn DOT layers DOT estimator import regression EOM
import tensorflow as tf EOM
import os EOM
from keras DOT layers import Activation COMMA  Dense COMMA  Dropout COMMA  Embedding COMMA  Flatten COMMA  Input COMMA  Convolution1D COMMA  MaxPooling1D COMMA  GlobalMaxPooling1D EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Dense COMMA  Input COMMA  Flatten EOM
from keras DOT layers import Conv1D COMMA  MaxPooling1D COMMA  Embedding COMMA  Dropout COMMA  LSTM COMMA  GRU COMMA  Bidirectional EOM
from keras DOT models import Model COMMA Sequential EOM
from keras import backend as K EOM
from keras DOT engine DOT topology import Layer COMMA  InputSpec EOM
from keras import initializers COMMA  optimizers EOM
def lstm_model_bin( PARERIGHT : EOM
model_variation  EQUAL  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(len( PARERIGHT +1 COMMA  embedding_dim COMMA  input_length EQUAL  COMMA  trainable EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm_model( PARERIGHT : EOM
model_variation  EQUAL  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(len( PARERIGHT +1 COMMA  embedding_dim COMMA  input_length EQUAL  COMMA  trainable EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelimport os EOM
from keras DOT layers import Dense COMMA  Flatten COMMA  Dropout COMMA  Activation EOM
from keras DOT models import Sequential COMMA  load_model EOM
from keras DOT optimizers import Adam COMMA  RMSprop COMMA  Adadelta EOM
from keras DOT layers import Conv2D COMMA  MaxPooling2D COMMA  GlobalAveragePooling2D EOM
from keras DOT layers import LSTM COMMA  Embedding EOM
class DeepLearningModels( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT load_model  EQUAL  load_model EOM
self DOT saved_model  EQUAL  saved_model EOM
self DOT nb_classes  EQUAL  nb_classes EOM
if self DOT saved_model is not None and os DOT path DOT isfile( PARERIGHT : EOM
self DOT model  EQUAL  load_model( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  self DOT mlp_mnist( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  self DOT cnn_mnist( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  self DOT cnn_cifar10( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  self DOT cnn_cifar100( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  self DOT lstm_imdb( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT model  EQUAL  self DOT lstm_ucf101( PARERIGHT  EOM
else: EOM
sys DOT exit( PARERIGHT  EOM
def mlp_mnist( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(512 COMMA  activation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA etrics EQUAL [] PARERIGHT  EOM
return model EOM
def cnn_mnist( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(32 COMMA  kernel_size EQUAL ( PARERIGHT  COMMA activation EQUAL  COMMA put_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA etrics EQUAL [] PARERIGHT  EOM
return model EOM
def cnn_cifar10( PARERIGHT : EOM
model DOT add(Conv2D(32 COMMA  ( PARERIGHT  COMMA  padding EQUAL  COMMA put_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(32 COMMA  ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(64 COMMA  ( PARERIGHT  COMMA  padding EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(64 COMMA  ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def cnn_cifar10_big( PARERIGHT : EOM
model DOT add(Conv2D(96 COMMA  ( PARERIGHT  COMMA  activation EQUAL  COMMA  padding EQUAL  COMMA put_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(96 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(96 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(192 COMMA  ( PARERIGHT  COMMA  activation EQUAL  COMMA  padding EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(192 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(192 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(192 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(192 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(10 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(GlobalAveragePooling2D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def cnn_cifar100( PARERIGHT : EOM
model DOT add(Conv2D(32 COMMA  ( PARERIGHT  COMMA  padding EQUAL  COMMA put_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(32 COMMA  ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(64 COMMA  ( PARERIGHT  COMMA  padding EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(64 COMMA  ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm_imdb( PARERIGHT : EOM
max_features  EQUAL  20000 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm_ucf101( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
metrics  EQUAL  [] EOM
self DOT model DOT compile( PARERIGHT  EOM
return model EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout EOM
from keras DOT layers import LSTM COMMA  Merge COMMA  Dense EOM
def VQA_MODEL( PARERIGHT : EOM
image_feature_size  EQUAL  4096 EOM
word_feature_size  EQUAL  300 EOM
number_of_LSTM  EQUAL  3 EOM
number_of_hidden_units_LSTM  EQUAL  512 EOM
max_length_questions  EQUAL  30 EOM
number_of_dense_layers  EQUAL  3 EOM
number_of_hidden_units  EQUAL  1024 EOM
activation_function  EQUAL  EOM
dropout_pct  EQUAL  0 DOT 5 EOM
model_image  EQUAL  Sequential( PARERIGHT  EOM
model_image DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language  EQUAL  Sequential( PARERIGHT  EOM
model_language DOT add(LSTM(number_of_hidden_units_LSTM COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
for _ in xrange( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
import numpy as np EOM
np DOT random DOT seed( PARERIGHT  EOM
from theano DOT tensor DOT shared_randomstreams import RandomStreams EOM
srng  EQUAL  RandomStreams( PARERIGHT  EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT datasets import imdb EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  LSTM COMMA  Dropout EOM
from keras DOT layers DOT embeddings import Embedding EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from keras_helper import load_keras_model as load EOM
from keras_helper import save_keras_model as save EOM
base_dir  EQUAL  EOM
def generate_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
if dropout is not None: EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if dropout is not None: EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
if __name__ EQUAL  EQUAL : EOM
n_lstm_units  EQUAL  int( PARERIGHT  EOM
embedding_length  EQUAL  EOM
top_words  EQUAL  EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(int( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
hist  EQUAL  model DOT fit(X_train COMMA  y_train COMMA  validation_data EQUAL ( PARERIGHT  COMMA  nb_epoch EQUAL  COMMA  batch_size EQUAL  PARERIGHT  EOM
save(model COMMA   DOT format( PARERIGHT  COMMA  base_dir EQUAL  PARERIGHT  EOM
from keras DOT utils import np_utils EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import LSTM EOM
def get_simple_net( PARERIGHT : EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def get_dropout_net( PARERIGHT : EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelimport pandas as pd EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Activation COMMA  Dense COMMA  Embedding COMMA  SimpleRNN COMMA  LSTM EOM
from keras import backend as K EOM
from keras_tqdm import TQDMNotebookCallback EOM
from keras DOT callbacks import ReduceLROnPlateau COMMA  EarlyStopping COMMA  ModelCheckpoint EOM
from keras DOT callbacks import TensorBoard EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
imdb_df  EQUAL  pd DOT read_csv( PARERIGHT  EOM
pd DOT set_option( PARERIGHT  EOM
num_words  EQUAL  10000 EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts( PARERIGHT  EOM
sequences  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
y  EQUAL  np DOT array( PARERIGHT  EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
max_review_length  EQUAL  552 EOM
pad  EQUAL  EOM
X  EQUAL  pad_sequences( PARERIGHT  EOM
from sklearn DOT model_selection import train_test_split EOM
X_train COMMA  X_test COMMA  y_train COMMA  y_test  EQUAL  train_test_split( PARERIGHT  EOM
input_shape  EQUAL  X_train DOT shape EOM
K DOT clear_session( PARERIGHT  EOM
modelLSTM_2a  EQUAL  Sequential( PARERIGHT  EOM
modelLSTM_2a DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
modelLSTM_2a DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
modelLSTM_2a DOT add(Dense( PARERIGHT  PARERIGHT  EOM
modelLSTM_2a DOT add(Activation( PARERIGHT  PARERIGHT  EOM
modelLSTM_2a DOT summary( PARERIGHT  EOM
modelLSTM_2a DOT compile( PARERIGHT  EOM
LSTM_history  EQUAL  modelLSTM_2a DOT fit(X_train COMMA y_train COMMA epochs EQUAL  COMMA batch_size EQUAL  COMMA validation_split EQUAL from keras DOT models import Sequential EOM
from keras DOT layers import Flatten COMMA  Dense COMMA  Dropout COMMA  Embedding COMMA  LSTM COMMA  Bidirectional EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
def base( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def conv( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def conv2( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def lstm2( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return modelfrom __future__ import print_function EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT convolutional import Convolution1D COMMA  MaxPooling1D EOM
from keras DOT layers DOT recurrent import LSTM COMMA  GRU EOM
from keras DOT models import Graph EOM
from recurrent import Bidirectional EOM
def cnn( PARERIGHT : EOM
nb_filter  EQUAL  250 EOM
filter_length  EQUAL  3 EOM
hidden_dims  EQUAL  250 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def gru( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def bidirectional_lstm( PARERIGHT : EOM
model  EQUAL  Graph( PARERIGHT  EOM
model DOT add_input(name EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
model DOT add_node(Embedding( PARERIGHT  COMMA ame EQUAL  COMMA  input EQUAL  PARERIGHT  EOM
model DOT add_node(LSTM( PARERIGHT  COMMA  name EQUAL  COMMA  input EQUAL  PARERIGHT  EOM
model DOT add_node(LSTM( PARERIGHT  COMMA  name EQUAL  COMMA  input EQUAL  PARERIGHT  EOM
model DOT add_node(Dropout( PARERIGHT  COMMA  name EQUAL  COMMA  inputs EQUAL [] PARERIGHT  EOM
model DOT add_node(Dense( PARERIGHT  COMMA  name EQUAL  COMMA  input EQUAL  PARERIGHT  EOM
model DOT add_output( PARERIGHT  EOM
return model EOM
def cnn_lstm( PARERIGHT : EOM
nb_filter  EQUAL  64 EOM
filter_length  EQUAL  3 EOM
pool_length  EQUAL  2 EOM
lstm_output_size  EQUAL  64 EOM
p  EQUAL  0 DOT 25 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def cnn_gru( PARERIGHT : EOM
nb_filter  EQUAL  64 EOM
filter_length  EQUAL  3 EOM
pool_length  EQUAL  2 EOM
lstm_output_size  EQUAL  70 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def b_rnn( PARERIGHT : EOM
lstm_output_size  EQUAL  64 EOM
lstm  EQUAL  LSTM( PARERIGHT  EOM
gru  EQUAL  GRU( PARERIGHT  EOM
brnn  EQUAL  Bidirectional( PARERIGHT  EOM
nb_filter  EQUAL  64 EOM
filter_length  EQUAL  3 EOM
pool_length  EQUAL  2 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
if __name__  EQUAL  EQUAL  : EOM
passfrom numpy DOT random import permutation EOM
from keras DOT models import Sequential COMMA  Graph EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation COMMA  Reshape COMMA  Merge EOM
from keras DOT optimizers import SGD EOM
from keras DOT utils import np_utils EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers DOT recurrent import LSTM EOM
from Utils DOT FileProcess import generate_w2i_i2w_dict COMMA  sentence2sequence EOM
from birnn import BiDirectionLSTM EOM
from Utils DOT statistics import * EOM
from LSTM import get_class EOM
def get_data( PARERIGHT : EOM
X  EQUAL  [] EOM
y  EQUAL  [] EOM
w2i COMMA  i2w  EQUAL  generate_w2i_i2w_dict( PARERIGHT  EOM
with open( PARERIGHT  as fr: EOM
for line in fr: EOM
query1 COMMA  query2 COMMA  label  EQUAL  line DOT split( PARERIGHT [] EOM
query  EQUAL  (sentence2sequence( PARERIGHT  COMMA  sentence2sequence( PARERIGHT  PARERIGHT  EOM
X DOT append( PARERIGHT  EOM
y DOT append(int( PARERIGHT  PARERIGHT  EOM
X  EQUAL  np DOT array( PARERIGHT  EOM
y  EQUAL  np DOT array( PARERIGHT  EOM
return X COMMA  y EOM
def blstm_I( PARERIGHT : EOM
words_size  EQUAL  13033 EOM
X  EQUAL  X[] EOM
y  EQUAL  y[] EOM
X1  EQUAL  [] for t in X] EOM
X2  EQUAL  [] for t in X] EOM
X1  EQUAL  np DOT array( PARERIGHT  EOM
X2  EQUAL  np DOT array( PARERIGHT  EOM
X1_train COMMA  X1_test  EQUAL  X1[] COMMA  X1[] EOM
X2_train COMMA  X2_test  EQUAL  X2[] COMMA  X2[] EOM
y_train COMMA  y_test  EQUAL  y[] COMMA  y[] EOM
X1_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X1_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X2_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X2_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
left  EQUAL  Sequential( PARERIGHT  EOM
left DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
left DOT add(BiDirectionLSTM( PARERIGHT  PARERIGHT  EOM
right  EQUAL  Sequential( PARERIGHT  EOM
right DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
right DOT add(BiDirectionLSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Reshape( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
probas  EQUAL  model DOT predict_proba( PARERIGHT  EOM
for threshold in []: EOM
classes  EQUAL  get_class( PARERIGHT  EOM
accuracy  EQUAL  accuracy_score( PARERIGHT  EOM
precision  EQUAL  precision_score( PARERIGHT  EOM
recall  EQUAL  recall_score( PARERIGHT  EOM
f1  EQUAL  f1_score( PARERIGHT  EOM
def blstm_I_2layers( PARERIGHT : EOM
words_size  EQUAL  13033 EOM
X  EQUAL  X[] EOM
y  EQUAL  y[] EOM
X1  EQUAL  [] for t in X] EOM
X2  EQUAL  [] for t in X] EOM
X1  EQUAL  np DOT array( PARERIGHT  EOM
X2  EQUAL  np DOT array( PARERIGHT  EOM
X1_train COMMA  X1_test  EQUAL  X1[] COMMA  X1[] EOM
X2_train COMMA  X2_test  EQUAL  X2[] COMMA  X2[] EOM
y_train COMMA  y_test  EQUAL  y[] COMMA  y[] EOM
X1_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X1_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X2_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X2_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
left  EQUAL  Sequential( PARERIGHT  EOM
left DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
left DOT add(BiDirectionLSTM( PARERIGHT  PARERIGHT  EOM
left DOT add(BiDirectionLSTM( PARERIGHT  PARERIGHT  EOM
right  EQUAL  Sequential( PARERIGHT  EOM
right DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
right DOT add(BiDirectionLSTM( PARERIGHT  PARERIGHT  EOM
right DOT add(BiDirectionLSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Reshape( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
probas  EQUAL  model DOT predict_proba( PARERIGHT  EOM
classes  EQUAL  get_class( PARERIGHT  EOM
accuracy  EQUAL  accuracy_score( PARERIGHT  EOM
precision  EQUAL  precision_score( PARERIGHT  EOM
recall  EQUAL  recall_score( PARERIGHT  EOM
f1  EQUAL  f1_score( PARERIGHT  EOM
return accuracy COMMA  precision COMMA  recall COMMA  f1 EOM
if __name__  EQUAL  EQUAL  : EOM
thresholds  EQUAL  [] EOM
X COMMA  y  EQUAL  get_data( PARERIGHT  EOM
blstm_I( PARERIGHT import tensorflow as tf EOM
import keras EOM
from keras import backend as K EOM
from keras DOT layers import Dense COMMA Flatten COMMA Dropout COMMA Activation COMMA Input COMMA  GlobalAveragePooling3D EOM
from keras DOT layers import Conv3D COMMA  MaxPooling3D COMMA BatchNormalization COMMA  MaxPool3D EOM
from keras DOT layers import RepeatVector COMMA Permute COMMA Lambda COMMA merge COMMA multiply COMMA Dot EOM
from keras DOT layers DOT recurrent import LSTM COMMA GRU EOM
from keras DOT models import Sequential COMMA  load_model COMMA Model EOM
from keras DOT optimizers import Adam COMMA  RMSprop COMMA  SGD EOM
from keras DOT layers DOT wrappers import TimeDistributed COMMA  Bidirectional EOM
from keras DOT layers DOT advanced_activations import ELU COMMA  LeakyReLU EOM
from surportsPG DOT custom_recurrents import AttentionDecoder EOM
def conv3D( PARERIGHT : EOM
input_shape  EQUAL  ( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv3D(32 COMMA  ( PARERIGHT  COMMA  activation EQUAL  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(84 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(128 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def Conv3D_Classes( PARERIGHT : EOM
input_shape  EQUAL  ( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv3D(32 COMMA  ( PARERIGHT  COMMA  activation EQUAL  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(128 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(GlobalAveragePooling3D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
class Models( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT n_hidden   EQUAL  1024 EOM
self DOT n_hidden2  EQUAL  512 EOM
self DOT feature_length  EQUAL  args DOT featurelength EOM
self DOT seq_length  EQUAL  args DOT seqlength EOM
self DOT dropout  EQUAL  args DOT dropout EOM
self DOT units  EQUAL  64 EOM
def LSTM( PARERIGHT : EOM
with tf DOT name_scope( PARERIGHT  as scope: EOM
model  EQUAL  Sequential( PARERIGHT  EOM
with tf DOT name_scope( PARERIGHT  as scope: EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
with tf DOT name_scope( PARERIGHT  as scope: EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
return model EOM
def LSTM2( PARERIGHT : EOM
with tf DOT name_scope( PARERIGHT  as scope: EOM
model  EQUAL  Sequential( PARERIGHT  EOM
with tf DOT name_scope( PARERIGHT  as scope: EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
with tf DOT name_scope( PARERIGHT  as scope: EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
with tf DOT name_scope( PARERIGHT  as scope: EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
return model EOM
def attention_3d_block( PARERIGHT : EOM
input_dim  EQUAL  int( PARERIGHT  EOM
a  EQUAL  Permute(( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
a  EQUAL  TimeDistributed(Dense( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
a_probs  EQUAL  Permute(( PARERIGHT  COMMA  name  EQUAL  PARERIGHT ( PARERIGHT  EOM
output_attention_mul  EQUAL  multiply( PARERIGHT  EOM
return output_attention_mul EOM
def Attention_before_LSTM( PARERIGHT : EOM
_input  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
drop1  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
attention_mul  EQUAL  self DOT attention_3d_block( PARERIGHT  EOM
attention_mul  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
output  EQUAL  TimeDistributed(Dense( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
return model EOM
def Attention_after_LSTM( PARERIGHT : EOM
_input  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
drop  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
LSTM_layer  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
attention_mul  EQUAL  self DOT attention_3d_block( PARERIGHT  EOM
drop2  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
output  EQUAL  TimeDistributed(Dense( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
return model EOM
def Attention_LSTM( PARERIGHT : EOM
_input  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
dropout  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
LSTM_layer  EQUAL  Bidirectional(LSTM( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
attention_mul  EQUAL  self DOT attention_3d_block( PARERIGHT  EOM
dropout2  EQUAL  Dropout( PARERIGHT ( PARERIGHT  EOM
output  EQUAL  TimeDistributed(Dense( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
return model EOM
def simpleNMT( PARERIGHT : EOM
input_  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
lstm  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA name EQUAL  COMMA rge_mode  EQUAL  COMMA trainable EQUAL  PARERIGHT ( PARERIGHT  EOM
y_hat  EQUAL   TimeDistributed(AttentionDecoder( PARERIGHT  PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
return model EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT models import load_model EOM
from config import * EOM
from MIDIprocessing import loadTrainingData EOM
def generateModel( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
def generateTModel( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(n COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
def trainModel( PARERIGHT : EOM
for i in range( PARERIGHT : EOM
model  EQUAL  load_model( PARERIGHT  EOM
X COMMA  Y  EQUAL  loadTrainingData( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
model DOT save( PARERIGHT import os EOM
import time EOM
import numpy as np EOM
from functools import wraps EOM
from sklearn DOT externals import joblib EOM
from sklearn DOT preprocessing import LabelBinarizer EOM
from sklearn DOT model_selection import cross_val_score EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT models import load_model COMMA  Sequential EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  LSTM EOM
N_FEATURES  EQUAL  10000 EOM
DOC_LEN  EQUAL  60 EOM
N_CLASSES  EQUAL  2 EOM
def timeit( PARERIGHT : EOM
def wrapper( PARERIGHT : EOM
start  EQUAL  time DOT time( PARERIGHT  EOM
result  EQUAL  func( PARERIGHT  EOM
return result COMMA  time DOT time( PARERIGHT  - start EOM
return wrapper EOM
def documents( PARERIGHT : EOM
return list(corpus DOT reviews( PARERIGHT  PARERIGHT  EOM
def continuous( PARERIGHT : EOM
return list(corpus DOT scores( PARERIGHT  PARERIGHT  EOM
def make_categorical( PARERIGHT : EOM
return np DOT digitize(continuous( PARERIGHT  COMMA  [] PARERIGHT  EOM
def binarize( PARERIGHT : EOM
return np DOT digitize(continuous( PARERIGHT  COMMA  [] PARERIGHT  EOM
def build_nn( PARERIGHT : EOM
nn DOT add(Dense(500 COMMA  activation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
nn DOT add(Dense( PARERIGHT  PARERIGHT  EOM
nn DOT add(Dense( PARERIGHT  PARERIGHT  EOM
nn DOT compile( PARERIGHT  EOM
return nn EOM
def build_lstm( PARERIGHT : EOM
lstm  EQUAL  Sequential( PARERIGHT  EOM
lstm DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
lstm DOT add(Dense( PARERIGHT  PARERIGHT  EOM
lstm DOT compile( PARERIGHT  EOM
return lstm EOM
def train_model( PARERIGHT : EOM
corpus  EQUAL  PickledAmazonReviewsReader( PARERIGHT  EOM
X  EQUAL  documents( PARERIGHT  EOM
y  EQUAL  binarize( PARERIGHT  EOM
scores  EQUAL  cross_val_score( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
if saveto: EOM
model DOT steps[][] DOT model DOT save( PARERIGHT  EOM
model DOT steps DOT pop( PARERIGHT  EOM
joblib DOT dump( PARERIGHT  EOM
return scores EOM
if __name__  EQUAL  EQUAL  : EOM
from sklearn DOT pipeline import Pipeline EOM
from sklearn DOT feature_extraction DOT text import TfidfVectorizer EOM
from reader import PickledReviewsReader EOM
from am_reader import PickledAmazonReviewsReader EOM
from transformer import TextNormalizer COMMA  GensimDoc2Vectorizer EOM
from transformer import KeyphraseExtractor COMMA  GensimTfidfVectorizer EOM
cpath  EQUAL  EOM
mpath  EQUAL  {:  COMMA : } EOM
from  DOT  DOT  DOT model import KerasModel EOM
from  DOT  DOT window_model import FrameModel EOM
class RecurrentModel( PARERIGHT : EOM
def _create_model( PARERIGHT : EOM
from keras DOT layers DOT core import Activation COMMA  Dense COMMA  Dropout COMMA  Reshape EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT recurrent import LSTM EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return modelimport numpy as np EOM
np DOT random DOT seed( PARERIGHT  EOM
from theano DOT tensor DOT shared_randomstreams import RandomStreams EOM
srng  EQUAL  RandomStreams( PARERIGHT  EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT datasets import imdb EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  LSTM COMMA  Dropout EOM
from keras DOT layers DOT embeddings import Embedding EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from keras_helper import load_keras_model as load EOM
from keras_helper import save_keras_model as save EOM
base_dir  EQUAL  EOM
def generate_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
if dropout is not None: EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if dropout is not None: EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
if __name__ EQUAL  EQUAL : EOM
n_lstm_units  EQUAL  int( PARERIGHT  EOM
embedding_length  EQUAL  16 EOM
top_words  EQUAL  EOM
dropout  EQUAL  0 DOT 2 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(int( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
hist  EQUAL  model DOT fit(X_train COMMA  y_train COMMA  validation_data EQUAL ( PARERIGHT  COMMA  nb_epoch EQUAL  COMMA  batch_size EQUAL  PARERIGHT  EOM
save(model COMMA   DOT format( PARERIGHT  COMMA  base_dir EQUAL  PARERIGHT  EOM
import pytest EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras import Input COMMA  Model EOM
from keras DOT layers import Conv2D COMMA  Bidirectional EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(2 COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
inner_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_lstm  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  name EQUAL  PARERIGHT ( PARERIGHT  EOM
encoder  EQUAL  Model( PARERIGHT  EOM
outer_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_encoder  EQUAL  TimeDistributed( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
preds  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
def test_plot_sequential_embedding( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT import pandas as pd EOM
train  EQUAL pd DOT read_csv( PARERIGHT  EOM
test EQUAL pd DOT read_csv( PARERIGHT  EOM
train DOT head( PARERIGHT  EOM
train EQUAL train DOT drop( PARERIGHT  EOM
test EQUAL test DOT drop( PARERIGHT  EOM
ytest EQUAL test DOT iloc[] EOM
ytrain EQUAL train DOT iloc[] EOM
y_train EQUAL ytrain DOT values EOM
y_test EQUAL ytest DOT values EOM
from keras DOT utils import to_categorical EOM
y_train  EQUAL  to_categorical( PARERIGHT  EOM
y_test EQUAL to_categorical( PARERIGHT  EOM
xtrain EQUAL train DOT iloc[] EOM
xtest EQUAL test DOT iloc[] EOM
xtrain EQUAL xtrain DOT values EOM
xtest EQUAL xtest DOT values EOM
x_train  EQUAL xtrain DOT reshape( PARERIGHT  EOM
x_test EQUAL xtest DOT reshape( PARERIGHT  EOM
import tensorflow as tf EOM
import keras as ks EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten COMMA  LSTM EOM
from numpy DOT random import seed EOM
seed( PARERIGHT  EOM
from tensorflow import set_random_seed EOM
set_random_seed( PARERIGHT  EOM
model EQUAL Sequential( PARERIGHT  EOM
model DOT add(LSTM(61 COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
y EQUAL model DOT predict_proba( PARERIGHT  EOM
from sklearn import  metrics EOM
j EQUAL metrics DOT roc_auc_score( PARERIGHT  EOM
j EQUAL np DOT array( PARERIGHT  EOM
model EQUAL Sequential( PARERIGHT  EOM
model DOT add(LSTM(61 COMMA input_shape EQUAL ( PARERIGHT  COMMA kernel_initializer EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
model1 EQUAL Sequential( PARERIGHT  EOM
model1 DOT add(LSTM(61 COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model1 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model1 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model1 DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model1 DOT compile( PARERIGHT  EOM
model1 DOT fit( PARERIGHT  EOM
score  EQUAL  model1 DOT evaluate( PARERIGHT  EOM
y EQUAL model1 DOT predict_proba( PARERIGHT  EOM
j EQUAL metrics DOT roc_auc_score( PARERIGHT  EOM
j EQUAL np DOT array( PARERIGHT  EOM
model2 EQUAL Sequential( PARERIGHT  EOM
model2 DOT add(LSTM(61 COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model2 DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model2 DOT compile( PARERIGHT  EOM
model2 DOT fit( PARERIGHT  EOM
score  EQUAL  model2 DOT evaluate( PARERIGHT  EOM
y EQUAL model2 DOT predict_proba( PARERIGHT  EOM
j EQUAL metrics DOT roc_auc_score( PARERIGHT  EOM
j EQUAL np DOT array( PARERIGHT  EOM
from keras DOT models import model_from_json EOM
model2_json  EQUAL  model2 DOT to_json( PARERIGHT  EOM
import h5py EOM
with open( PARERIGHT  as json_file: EOM
json_file DOT write( PARERIGHT  EOM
model DOT save_weights( PARERIGHT  EOM
json_file  EQUAL  open( PARERIGHT  EOM
loaded_model_json  EQUAL  json_file DOT read( PARERIGHT  EOM
json_file DOT close( PARERIGHT  EOM
loaded_model  EQUAL  model_from_json( PARERIGHT  EOM
loaded_model DOT load_weights( PARERIGHT  EOM
filepath EQUAL  EOM
heckpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
callbacks_list  EQUAL  [] EOM
model DOT fit( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT load_weights( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT add(LSTM(30 COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT from keras DOT layers import Dense COMMA  Activation COMMA  Conv1D COMMA  MaxPooling1D COMMA  GlobalAveragePooling1D COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM COMMA  SimpleRNN EOM
from keras DOT utils DOT np_utils import to_categorical EOM
class ANNModels: EOM
def __init__( PARERIGHT : EOM
self DOT num_features  EQUAL  num_features EOM
self DOT num_samples  EQUAL  num_samples EOM
def create_mlp_model( PARERIGHT : EOM
mlp_model  EQUAL  Sequential( PARERIGHT  EOM
mlp_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
mlp_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
mlp_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
mlp_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
mlp_model DOT compile( PARERIGHT  EOM
return mlp_model EOM
def create_simple_rnn_model( PARERIGHT : EOM
simple_rnn_model  EQUAL  Sequential( PARERIGHT  EOM
from __future__ import print_function EOM
import numpy as np EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Lambda EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Convolution1D COMMA MaxPooling1D COMMA  Flatten EOM
from keras DOT datasets import imdb EOM
from keras import backend as K EOM
from sklearn DOT cross_validation import train_test_split EOM
import pandas as pd EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from sklearn DOT preprocessing import Normalizer EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Convolution1D COMMA  Dense COMMA  Dropout COMMA  Flatten COMMA  MaxPooling1D EOM
from keras DOT utils import np_utils EOM
import numpy as np EOM
import h5py EOM
from keras import callbacks EOM
from keras DOT layers import LSTM COMMA  GRU COMMA  SimpleRNN EOM
from keras DOT callbacks import CSVLogger EOM
from keras DOT callbacks import ModelCheckpoint COMMA  EarlyStopping COMMA  ReduceLROnPlateau COMMA  CSVLogger EOM
import csv EOM
from sklearn DOT cross_validation import StratifiedKFold EOM
from sklearn DOT cross_validation import cross_val_score EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
with open( PARERIGHT  as f: EOM
reader  EQUAL  csv DOT reader( PARERIGHT  EOM
your_list  EQUAL  list( PARERIGHT  EOM
trainX  EQUAL  np DOT array( PARERIGHT  EOM
traindata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
Y  EQUAL  traindata DOT iloc[] EOM
y_train1  EQUAL  np DOT array( PARERIGHT  EOM
y_train EQUAL  to_categorical( PARERIGHT  EOM
maxlen  EQUAL  44100 EOM
trainX  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_train  EQUAL  np DOT reshape(trainX COMMA  ( PARERIGHT  PARERIGHT  EOM
batch_size  EQUAL  5 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
checkpointer  EQUAL  callbacks DOT ModelCheckpoint( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  LSTM COMMA  Flatten COMMA  TimeDistributed EOM
from keras import optimizers EOM
import numpy as np EOM
import keras DOT backend as K EOM
import os EOM
def __init__( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(input_shape EQUAL ( PARERIGHT  COMMA  recurrent_activation EQUAL  COMMA activation EQUAL  COMMA  return_sequences EQUAL  COMMA  units EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(int( PARERIGHT  COMMA  use_bias EQUAL  COMMA  recurrent_activation EQUAL  COMMA activation EQUAL  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(int( PARERIGHT  COMMA  use_bias EQUAL  COMMA  recurrent_activation EQUAL  COMMA activation EQUAL  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT model  EQUAL  model EOM
class Brain2( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(input_shape EQUAL ( PARERIGHT  COMMA  recurrent_activation EQUAL  COMMA  activation EQUAL  COMMA  use_bias EQUAL  COMMA  return_sequences EQUAL  COMMA  units EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT model  EQUAL  model EOM
if __name__  EQUAL  EQUAL  : EOM
passfrom keras DOT utils DOT visualize_util import plot EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Lambda EOM
from keras DOT layers DOT pooling import GlobalMaxPooling1D EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
import numpy as np EOM
from keras import backend as K EOM
from keras DOT engine DOT topology import Layer EOM
from DSTC2 DOT traindev DOT scripts import myLogger EOM
__author__  EQUAL  EOM
def get_LSTM( PARERIGHT : EOM
logger DOT info( PARERIGHT  EOM
hidden_size  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(GlobalMaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
plot( PARERIGHT  EOM
logger DOT info( PARERIGHT  EOM
return model EOM
def get_basic_LSTM( PARERIGHT : EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
plot( PARERIGHT  EOM
return model EOM
def basic_LSTM_init( PARERIGHT : EOM
input_mtr  EQUAL  reduce(lambda session1 COMMA  session2: np DOT vstack(( PARERIGHT  PARERIGHT  COMMA  input_mtr PARERIGHT  EOM
input_mtr  EQUAL  np DOT array(map(lambda sentence: np DOT array(map(lambda word: np DOT array( PARERIGHT  COMMA  sentence PARERIGHT  PARERIGHT  COMMA  input_mtr PARERIGHT  PARERIGHT  EOM
output_mtr  EQUAL  reduce(lambda session1 COMMA  session2: np DOT vstack(( PARERIGHT  PARERIGHT  COMMA  output_mtr PARERIGHT  EOM
bad_input  EQUAL  np DOT zeros([] PARERIGHT  EOM
bad_output  EQUAL  np DOT zeros([] PARERIGHT  EOM
bad_input_index  EQUAL  [] EOM
for n in range(0 COMMA  len( PARERIGHT  PARERIGHT : EOM
if ( PARERIGHT  DOT all( PARERIGHT : EOM
bad_input_index DOT append( PARERIGHT  EOM
input_mtr  EQUAL  np DOT delete( PARERIGHT  EOM
output_mtr  EQUAL  np DOT delete( PARERIGHT  EOM
return input_mtr COMMA  output_mtr EOM
class Thresholded( PARERIGHT : EOM
self DOT supports_masking  EQUAL  True EOM
self DOT theta  EQUAL  K DOT cast_to_floatx( PARERIGHT  EOM
super( PARERIGHT  DOT __init__( PARERIGHT  EOM
def call( PARERIGHT : EOM
return 1 * K DOT cast(x > self DOT theta COMMA  K DOT floatx( PARERIGHT  PARERIGHT  EOM
def get_config( PARERIGHT : EOM
config  EQUAL  {: float( PARERIGHT } EOM
base_config  EQUAL  super( PARERIGHT  DOT get_config( PARERIGHT  EOM
return dict(list(base_config DOT items( PARERIGHT  PARERIGHT  + list(config DOT items( PARERIGHT  PARERIGHT  PARERIGHT from __future__ import print_function EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Conv1D COMMA  MaxPooling1D EOM
from keras DOT datasets import imdb EOM
import pickle EOM
import pandas as pd EOM
max_features  EQUAL  20000 EOM
maxlen  EQUAL  100 EOM
embedding_size  EQUAL  128 EOM
kernel_size  EQUAL  5 EOM
filters  EQUAL  64 EOM
pool_size  EQUAL  4 EOM
lstm_output_size  EQUAL  70 EOM
batch_size  EQUAL  30 EOM
epochs  EQUAL  2 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
x_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
x_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(x_train COMMA  y_train COMMA batch_size EQUAL  COMMA epochs EQUAL  COMMA alidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
score COMMA  acc  EQUAL  model DOT evaluate( PARERIGHT  EOM
filename  EQUAL  EOM
pickle DOT dump(model COMMA  open( PARERIGHT  PARERIGHT from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Input EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
import numpy as np EOM
import keras DOT preprocessing DOT text as prep EOM
import keras DOT preprocessing DOT sequence as seq EOM
from keras import backend as K EOM
import  sklearn DOT cluster as clu EOM
from matplotlib import pyplot as plt EOM
from keras DOT utils DOT visualize_util import plot EOM
file EQUAL open( PARERIGHT  EOM
text EQUAL file DOT readlines( PARERIGHT  EOM
t1 EQUAL prep DOT Tokenizer( PARERIGHT  EOM
t1 DOT fit_on_texts( PARERIGHT  EOM
words EQUAL t1 DOT word_index DOT keys( PARERIGHT  EOM
wordsReverse EQUAL [] for i in words] EOM
import numpy as np EOM
from random import random EOM
from matplotlib import pyplot EOM
from pandas import DataFrame EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dense EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT layers import Bidirectional EOM
def get_sequence( PARERIGHT : EOM
limit  EQUAL  n_timesteps / 4 DOT 0 EOM
X  EQUAL  np DOT random DOT uniform( PARERIGHT  EOM
y  EQUAL  np DOT array([] PARERIGHT  EOM
X  EQUAL  X DOT reshape( PARERIGHT  EOM
y  EQUAL  y DOT reshape( PARERIGHT  EOM
return ( PARERIGHT  EOM
def get_lstm_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(20 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  COMMA  go_backwards EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def get_bi_lstm_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  merge_mode EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def train_model( PARERIGHT : EOM
loss  EQUAL  list( PARERIGHT  EOM
for _ in range( PARERIGHT : EOM
X COMMA  y  EQUAL  get_sequence( PARERIGHT  EOM
hist  EQUAL  model DOT fit( PARERIGHT  EOM
loss DOT append( PARERIGHT  EOM
return loss EOM
X COMMA  y  EQUAL  get_sequence( PARERIGHT  EOM
n_timesteps  EQUAL  10 EOM
results  EQUAL  DataFrame( PARERIGHT  EOM
model  EQUAL  get_bi_lstm_model( PARERIGHT  EOM
results[]  EQUAL  train_model( PARERIGHT  EOM
model  EQUAL  get_bi_lstm_model( PARERIGHT  EOM
results[]  EQUAL  train_model( PARERIGHT  EOM
model  EQUAL  get_bi_lstm_model( PARERIGHT  EOM
results[]  EQUAL  train_model( PARERIGHT  EOM
model  EQUAL  get_bi_lstm_model( PARERIGHT  EOM
results[]  EQUAL  train_model( PARERIGHT  EOM
results DOT plot( PARERIGHT  EOM
pyplot DOT show( PARERIGHT from __future__ import division EOM
from __future__ import absolute_import EOM
from __future__ import print_function EOM
import pandas as pd EOM
import numpy as np EOM
from tensorflow DOT contrib DOT keras DOT api DOT keras DOT models import Sequential EOM
from tensorflow DOT contrib DOT keras DOT api DOT keras DOT layers import LSTM as _LSTM EOM
from tensorflow DOT contrib DOT keras DOT api DOT keras DOT layers import Dropout EOM
from tensorflow DOT contrib DOT keras DOT api DOT keras DOT layers import Dense EOM
class LSTM( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
raise TypeError( % (type( PARERIGHT  COMMA  type( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if len( PARERIGHT  ! EQUAL             raise ValueError( % len( PARERIGHT  PARERIGHT  EOM
self DOT model  EQUAL  Sequential( PARERIGHT  EOM
self DOT model DOT add(_LSTM(layers[] COMMA nput_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA pct_dropout PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(_LSTM( PARERIGHT  PARERIGHT  EOM
self DOT model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
def fit( PARERIGHT : EOM
self DOT model DOT fit( PARERIGHT  EOM
def predict( PARERIGHT : EOM
return self DOT model DOT predict( PARERIGHT import numpy EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Convolution1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from theano DOT tensor DOT shared_randomstreams import RandomStreams EOM
numpy DOT random DOT seed( PARERIGHT  EOM
srng  EQUAL  RandomStreams( PARERIGHT  EOM
top_words  EQUAL  5000 EOM
test_split  EQUAL  0 DOT 33 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
max_review_length  EQUAL  500 EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
embedding_vecor_length  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
from utils DOT ml_utils import MLModel EOM
class SimpleLSTM( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
model  EQUAL  keras DOT Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
def network_model( PARERIGHT : EOM
model DOT add(tf DOT keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(tf DOT keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(tf DOT keras DOT layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(tf DOT keras DOT layers DOT Dropout( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT load_weights( PARERIGHT  EOM
return modelfrom sklearn DOT model_selection import train_test_split EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from keras DOT models import Sequential COMMA Model EOM
from keras DOT layers import Dense COMMA LSTM COMMA Embedding EOM
from keras DOT optimizers import Adam EOM
from keras DOT layers import Bidirectional COMMA Conv1D COMMA GlobalMaxPooling1D COMMA MaxPooling1D COMMA Flatten EOM
from keras DOT callbacks import ModelCheckpoint COMMA  TensorBoard COMMA  Callback COMMA  EarlyStopping EOM
from keras DOT utils import to_categorical EOM
train  EQUAL  load_train_data( PARERIGHT [] EOM
y  EQUAL  train[] EOM
test  EQUAL  load_test_data( PARERIGHT  EOM
max_features  EQUAL  EOM
max_words  EQUAL  50 EOM
batch_size  EQUAL  16 EOM
epochs  EQUAL  5 EOM
num_classes EQUAL 5 EOM
X_train  COMMA  X_val  COMMA  Y_train  COMMA  Y_val  EQUAL  train_test_split( PARERIGHT  EOM
Y_train  EQUAL  to_categorical( PARERIGHT  EOM
Y_val  EQUAL  to_categorical( PARERIGHT  EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts(list( PARERIGHT  PARERIGHT  EOM
X_train  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
X_val  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
X_test  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
X_test  EQUAL pad_sequences( PARERIGHT  EOM
X_train  EQUAL pad_sequences( PARERIGHT  EOM
X_val  EQUAL  pad_sequences( PARERIGHT  EOM
model_LSTM EQUAL Sequential( PARERIGHT  EOM
model_LSTM DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model_LSTM DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_LSTM DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_LSTM DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_LSTM DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA metrics EQUAL [] PARERIGHT  EOM
model_LSTM DOT summary( PARERIGHT  EOM
layer_name  EQUAL  EOM
int_layer_model  EQUAL  Model(inputs EQUAL  COMMA outputs EQUAL ( PARERIGHT  DOT output PARERIGHT  EOM
int_out  EQUAL  int_layer_model DOT predict( PARERIGHT  EOM
history EQUAL model_LSTM DOT fit(X_train COMMA  Y_train COMMA  alidation_data EQUAL ( PARERIGHT  COMMA pochs EQUAL  COMMA  atch_size EQUAL  COMMA  verbose EQUAL from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
def build_improved_model( PARERIGHT : EOM
model DOT add(LSTM(nput_shape EQUAL ( PARERIGHT  COMMA units EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def build_basic_model( PARERIGHT : EOM
model DOT add(LSTM(nput_shape EQUAL ( PARERIGHT  COMMA units EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return modelimport numpy as np EOM
np DOT random DOT seed( PARERIGHT  EOM
import sys EOM
sys DOT dont_write_bytecode  EQUAL  True EOM
import sklearn as sk EOM
from sklearn DOT metrics import f1_score EOM
import keras as k EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from keras DOT optimizers import RMSprop EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers import LSTM COMMA  Merge EOM
import dataset EOM
import ConfigParser EOM
if __name__  EQUAL  EQUAL  : EOM
cfg  EQUAL  ConfigParser DOT ConfigParser( PARERIGHT  EOM
dataset  EQUAL  \ EOM
dataset DOT DatasetProvider([] PARERIGHT  EOM
train_x COMMA  train_y  EQUAL  dataset DOT load(cfg DOT get( PARERIGHT  PARERIGHT  EOM
test_x COMMA  test_y  EQUAL  dataset DOT load(cfg DOT get( PARERIGHT  PARERIGHT  EOM
maxlen  EQUAL  max([] PARERIGHT  EOM
train_x  EQUAL  pad_sequences( PARERIGHT  EOM
train_y  EQUAL  pad_sequences( PARERIGHT  EOM
test_x  EQUAL  pad_sequences( PARERIGHT  EOM
test_y  EQUAL  pad_sequences( PARERIGHT  EOM
train_y  EQUAL   np DOT array([] PARERIGHT  EOM
test_y  EQUAL   np DOT array([] PARERIGHT  EOM
left  EQUAL  Sequential( PARERIGHT  EOM
left DOT add(Embedding(input_dim EQUAL ( PARERIGHT  COMMA utput_dim EQUAL ( PARERIGHT  COMMA input_length EQUAL  COMMA ropout EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
left DOT add(LSTM(cfg DOT getint( PARERIGHT  COMMA return_sequences EQUAL  COMMA go_backwards EQUAL  COMMA pout_W  EQUAL ( PARERIGHT  COMMA pout_U  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
right  EQUAL  Sequential( PARERIGHT  EOM
right DOT add(Embedding(input_dim EQUAL ( PARERIGHT  COMMA utput_dim EQUAL ( PARERIGHT  COMMA input_length EQUAL  COMMA ropout EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
right DOT add(LSTM(cfg DOT getint( PARERIGHT  COMMA return_sequences EQUAL  COMMA go_backwards EQUAL  COMMA pout_W  EQUAL ( PARERIGHT  COMMA pout_U  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout(cfg DOT getfloat( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  RMSprop(lr EQUAL ( PARERIGHT  COMMA ho EQUAL  COMMA  epsilon EQUAL  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit([] COMMA train_y COMMA b_epoch EQUAL ( PARERIGHT  COMMA atch_size EQUAL ( PARERIGHT  COMMA verbose EQUAL  COMMA validation_split EQUAL  PARERIGHT  EOM
distribution  EQUAL  \ EOM
model DOT predict([] COMMA atch_size EQUAL ( PARERIGHT  PARERIGHT  EOM
predictions  EQUAL  np DOT argmax( PARERIGHT  EOM
gold  EQUAL  np DOT argmax( PARERIGHT  EOM
total_labels  EQUAL  gold DOT shape[] * gold DOT shape[] EOM
predictions  EQUAL  predictions DOT reshape( PARERIGHT  EOM
gold  EQUAL  gold DOT reshape( PARERIGHT  EOM
label_f1  EQUAL  f1_score( PARERIGHT  EOM
positive_class_index  EQUAL  1 EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Activation COMMA  Dense COMMA  Embedding COMMA  SimpleRNN COMMA  LSTM COMMA  Dropout EOM
from keras import backend as K EOM
from keras DOT callbacks import ReduceLROnPlateau COMMA  EarlyStopping COMMA  ModelCheckpoint EOM
from keras DOT callbacks import TensorBoard EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
import tensorflow as tf EOM
imdb_df  EQUAL  pd DOT read_csv( PARERIGHT  EOM
pd DOT set_option( PARERIGHT  EOM
num_words  EQUAL  10000 EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts( PARERIGHT  EOM
sequences  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
y  EQUAL  np DOT array( PARERIGHT  EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
max_review_length  EQUAL  552 EOM
pad  EQUAL  EOM
X  EQUAL  pad_sequences( PARERIGHT  EOM
from sklearn DOT model_selection import train_test_split EOM
X_train COMMA  X_test COMMA  y_train COMMA  y_test  EQUAL  train_test_split( PARERIGHT  EOM
input_shape  EQUAL  X_train DOT shape EOM
K DOT clear_session( PARERIGHT  EOM
LSTM_model  EQUAL  Sequential( PARERIGHT  EOM
LSTM_model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT summary( PARERIGHT  EOM
LSTM_model DOT compile( PARERIGHT  EOM
tensorboard  EQUAL  TensorBoard( PARERIGHT  EOM
rnn_history  EQUAL  LSTM_model DOT fit( PARERIGHT  EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
def build_improved_model( PARERIGHT : EOM
model DOT add(LSTM(nput_shape EQUAL ( PARERIGHT  COMMA units EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def build_basic_model( PARERIGHT : EOM
model DOT add(LSTM(nput_shape EQUAL ( PARERIGHT  COMMA units EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return modelimport numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT models import load_model EOM
import h5py EOM
from keras DOT callbacks import ModelCheckpoint EOM
y_train  EQUAL  np DOT load( PARERIGHT  EOM
x_train  EQUAL  np DOT load( PARERIGHT  EOM
in_shape  EQUAL  x_train DOT shape[] EOM
model   EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
filepath  EQUAL  EOM
checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
callbacks_list  EQUAL  [] EOM
mini_batch_size  EQUAL  64 EOM
model DOT fit( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
import pandas as pd EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Activation COMMA  Dense COMMA  Embedding COMMA  SimpleRNN COMMA  LSTM EOM
from keras import backend as K EOM
from keras DOT callbacks import ReduceLROnPlateau COMMA  EarlyStopping COMMA  ModelCheckpoint EOM
from keras DOT callbacks import TensorBoard EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
imdb_df  EQUAL  pd DOT read_csv( PARERIGHT  EOM
pd DOT set_option( PARERIGHT  EOM
num_words  EQUAL  10000 EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts( PARERIGHT  EOM
sequences  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
y  EQUAL  np DOT array( PARERIGHT  EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
max_review_length  EQUAL  552 EOM
pad  EQUAL  EOM
X  EQUAL  pad_sequences( PARERIGHT  EOM
from sklearn DOT model_selection import train_test_split EOM
X_train COMMA  X_test COMMA  y_train COMMA  y_test  EQUAL  train_test_split( PARERIGHT  EOM
input_shape  EQUAL  X_train DOT shape EOM
K DOT clear_session( PARERIGHT  EOM
modelLSTM_2a  EQUAL  Sequential( PARERIGHT  EOM
modelLSTM_2a DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
modelLSTM_2a DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
modelLSTM_2a DOT add(Dense( PARERIGHT  PARERIGHT  EOM
modelLSTM_2a DOT add(Activation( PARERIGHT  PARERIGHT  EOM
modelLSTM_2a DOT summary( PARERIGHT  EOM
modelLSTM_2a DOT compile( PARERIGHT  EOM
tensorboard  EQUAL  TensorBoard( PARERIGHT  EOM
LSTM_history  EQUAL  modelLSTM_2a DOT fit(X_train COMMA y_train COMMA epochs EQUAL  COMMA batch_size EQUAL  COMMA validation_split EQUAL  COMMA callbacks EQUAL [] EOM
import pandas as pd EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Activation COMMA  Dense COMMA  Embedding COMMA  SimpleRNN COMMA  LSTM COMMA  Dropout EOM
from keras import backend as K EOM
from keras DOT callbacks import ReduceLROnPlateau COMMA  EarlyStopping COMMA  ModelCheckpoint EOM
from keras DOT callbacks import TensorBoard EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
import tensorflow as tf EOM
imdb_df  EQUAL  pd DOT read_csv( PARERIGHT  EOM
pd DOT set_option( PARERIGHT  EOM
num_words  EQUAL  10000 EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts( PARERIGHT  EOM
sequences  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
y  EQUAL  np DOT array( PARERIGHT  EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
max_review_length  EQUAL  552 EOM
pad  EQUAL  EOM
X  EQUAL  pad_sequences( PARERIGHT  EOM
from sklearn DOT model_selection import train_test_split EOM
X_train COMMA  X_test COMMA  y_train COMMA  y_test  EQUAL  train_test_split( PARERIGHT  EOM
input_shape  EQUAL  X_train DOT shape EOM
K DOT clear_session( PARERIGHT  EOM
LSTM_model  EQUAL  Sequential( PARERIGHT  EOM
LSTM_model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT summary( PARERIGHT  EOM
LSTM_model DOT compile( PARERIGHT  EOM
tensorboard  EQUAL  TensorBoard( PARERIGHT  EOM
rnn_history  EQUAL  LSTM_model DOT fit(X_train COMMA y_train COMMA epochs EQUAL  COMMA batch_size EQUAL  COMMA callbacks EQUAL [] COMMA validation_split EQUAL import os EOM
global_model_version  EQUAL  53 EOM
global_batch_size  EQUAL  128 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
adam  EQUAL  keras DOT optimizers DOT Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from random import random EOM
from numpy import array EOM
from numpy import cumsum EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT layers import Bidirectional EOM
from keras DOT utils import np_utils EOM
from keras DOT layers import Embedding EOM
from keras DOT optimizers import SGD EOM
from keras DOT layers import Conv1D EOM
from keras DOT layers import MaxPooling1D EOM
import sys EOM
if __name__  EQUAL  EQUAL  : EOM
X  EQUAL  X DOT astype( PARERIGHT  EOM
y_init   EQUAL  np DOT genfromtxt( PARERIGHT  EOM
y  EQUAL  np_utils DOT to_categorical( PARERIGHT  EOM
num_classes  EQUAL  y DOT shape[] EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
X_test  EQUAL  np DOT genfromtxt( PARERIGHT  EOM
X_test  EQUAL  X_test DOT astype( PARERIGHT  EOM
y_test  EQUAL  np DOT genfromtxt( PARERIGHT  EOM
y_test  EQUAL  np_utils DOT to_categorical( PARERIGHT  EOM
yhat  EQUAL  model DOT predict( PARERIGHT  EOM
acc  EQUAL  0 DOT  EOM
count  EQUAL  0 EOM
for i in range(len( PARERIGHT  PARERIGHT : EOM
if (int(np DOT argmax( PARERIGHT  PARERIGHT   EQUAL (np DOT argmax( PARERIGHT  PARERIGHT  PARERIGHT : EOM
count+ EQUAL 1 EOM
acc  EQUAL  float( PARERIGHT  / len( PARERIGHT  EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential COMMA  load_model EOM
from keras DOT optimizers import Adam COMMA  RMSprop EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
from keras DOT layers DOT convolutional import ( PARERIGHT  EOM
from collections import deque EOM
import sys EOM
class ResearchModels( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT seq_length  EQUAL  seq_length EOM
self DOT load_model  EQUAL  load_model EOM
self DOT saved_model  EQUAL  saved_model EOM
self DOT nb_classes  EQUAL  nb_classes EOM
self DOT feature_queue  EQUAL  deque( PARERIGHT  EOM
metrics  EQUAL  [] EOM
if self DOT saved_model is not None: EOM
self DOT model  EQUAL  load_model( PARERIGHT  EOM
elif model  EQUAL  EQUAL  : EOM
self DOT input_shape  EQUAL  ( PARERIGHT  EOM
self DOT model  EQUAL  self DOT lstm( PARERIGHT  EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
self DOT model DOT compile( PARERIGHT  EOM
def lstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def mlp( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def threedconvolution( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv3D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  COMMA  input_shape EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(128 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(256 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(256 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(512 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv3D(512 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling3D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return modelfrom keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers import LSTM COMMA  Dense COMMA  Dropout COMMA  Input EOM
from keras DOT layers import Conv2D COMMA  MaxPooling2D COMMA  Flatten EOM
from keras DOT layers import concatenate EOM
from keras DOT layers import BatchNormalization EOM
from keras import optimizers EOM
class ThreeLayerLSTM( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT L1  EQUAL  L1 EOM
self DOT L2  EQUAL  L2 EOM
self DOT L3  EQUAL  L3 EOM
self DOT data_dim  EQUAL  data_dim EOM
self DOT t  EQUAL  t EOM
self DOT num_classes  EQUAL  num_classes EOM
def build_network( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(self DOT L1 COMMA  return_sequences EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA activation EQUAL  COMMA dropout EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
class ThreeLayerLSTMandCNN( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT L1  EQUAL  L1 EOM
self DOT L2  EQUAL  L2 EOM
self DOT L3  EQUAL  L3 EOM
self DOT data_dim  EQUAL  data_dim EOM
self DOT t  EQUAL  t EOM
self DOT num_classes  EQUAL  num_classes EOM
self DOT imgWidth  EQUAL  imgWidth EOM
self DOT imgHeight  EQUAL  imgHeight EOM
def build_network( PARERIGHT : EOM
temporal_model  EQUAL  Sequential( PARERIGHT  EOM
temporal_model DOT add(LSTM(self DOT L1 COMMA  return_sequences EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA ctivation EQUAL  COMMA  dropout EQUAL  PARERIGHT  PARERIGHT  EOM
temporal_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
temporal_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
temporal_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
temporal_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
temporal_input  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
encoded_temp  EQUAL  temporal_model( PARERIGHT  EOM
spat_model  EQUAL  Sequential( PARERIGHT  EOM
spat_model DOT add(Conv2D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  COMMA  padding EQUAL  COMMA put_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
spat_model DOT add(Conv2D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
spat_model DOT add(MaxPooling2D( PARERIGHT  PARERIGHT  EOM
spat_model DOT add(Conv2D(128 COMMA  ( PARERIGHT  COMMA  activation EQUAL  COMMA  padding EQUAL  PARERIGHT  PARERIGHT  EOM
spat_model DOT add(Conv2D(128 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
spat_model DOT add(MaxPooling2D( PARERIGHT  PARERIGHT  EOM
spat_model DOT add(Conv2D(256 COMMA  ( PARERIGHT  COMMA  activation EQUAL  COMMA  padding EQUAL  PARERIGHT  PARERIGHT  EOM
spat_model DOT add(Conv2D(256 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
spat_model DOT add(Conv2D(256 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
spat_model DOT add(MaxPooling2D( PARERIGHT  PARERIGHT  EOM
spat_model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
spat_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
spat_model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
spat_input  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
encoded_spat  EQUAL  spat_model( PARERIGHT  EOM
merged  EQUAL  concatenate( PARERIGHT  EOM
output  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
adam  EQUAL  optimizers DOT adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM COMMA  Dropout EOM
from time import time EOM
from keras DOT callbacks import TensorBoard EOM
import numpy as np EOM
from data import * EOM
import matplotlib DOT pyplot as plt EOM
def build_model( PARERIGHT : EOM
model DOT add(LSTM(120 COMMA eturn_sequences EQUAL  COMMA activation EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
tensorboard  EQUAL  TensorBoard(log_dir EQUAL (time( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT fit(x_train COMMA  y_train COMMA  epochs EQUAL  COMMA tch_size EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  COMMA erbose EQUAL  COMMA  callbacks EQUAL [] PARERIGHT  EOM
return model EOM
if __name__  EQUAL  EQUAL  : EOM
vc COMMA  vl COMMA  rpm COMMA  va COMMA  ia  EQUAL  loadData( PARERIGHT  EOM
data  EQUAL  createFrames( PARERIGHT  EOM
x_train COMMA  x_test COMMA  y_train COMMA  y_test  EQUAL  dataPreparation( PARERIGHT  EOM
model  EQUAL  build_model( PARERIGHT  EOM
yhat  EQUAL  model DOT predict( PARERIGHT  EOM
y_test  EQUAL  y_test DOT reshape(len( PARERIGHT  COMMA  1 PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT show( PARERIGHT from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Reshape COMMA  Merge COMMA  Dropout COMMA  Input COMMA  SimpleRNN EOM
from keras DOT layers DOT embeddings import Embedding EOM
from dictionary import Dictionary EOM
from constants import * EOM
from model_base import ModelBase EOM
class RNN( PARERIGHT : EOM
rnn_hiden_units  EQUAL  None EOM
deeper_lstm  EQUAL  None EOM
dropout  EQUAL  None EOM
recurrent_dropout  EQUAL  None EOM
def __init__( PARERIGHT : EOM
super( PARERIGHT  DOT __init__( PARERIGHT  EOM
self DOT rnn_hiden_units  EQUAL  rnn_hidden_units EOM
self DOT deeper_lstm  EQUAL  deeper_lstm EOM
self DOT dropout  EQUAL  dropout EOM
self DOT recurrent_dropout  EQUAL  recurrent_dropout EOM
self DOT model_name  EQUAL   + str( PARERIGHT  +  + str( PARERIGHT  + EOM
self DOT model_type  EQUAL  EOM
def build_visual_model( PARERIGHT : EOM
image_model  EQUAL  Sequential( PARERIGHT  EOM
image_dimension  EQUAL  self DOT dictionary DOT pp_data DOT calculateImageDimension( PARERIGHT  EOM
image_model DOT add(Reshape(( PARERIGHT  COMMA  input_shape  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
language_model  EQUAL  Sequential( PARERIGHT  EOM
language_model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def build_language_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(SimpleRNN( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelimport numpy as np EOM
np DOT random DOT seed( PARERIGHT  EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Embedding COMMA  LSTM COMMA  Bidirectional EOM
from keras DOT datasets import imdb EOM
from keras DOT callbacks import TensorBoard EOM
max_features  EQUAL  5000 EOM
no_classes  EQUAL  1 EOM
max_length  EQUAL  100 EOM
batch_size  EQUAL  32 EOM
embedding_size  EQUAL  64 EOM
dropout_rate  EQUAL  0 DOT 5 EOM
no_epochs  EQUAL  5 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
x_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
x_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
y_train  EQUAL  np DOT array( PARERIGHT  EOM
y_test  EQUAL  np DOT array( PARERIGHT  EOM
LSTM_model  EQUAL  Sequential( PARERIGHT  EOM
LSTM_model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT compile( PARERIGHT  EOM
tensorboard  EQUAL  TensorBoard( PARERIGHT  EOM
LSTM_model DOT fit( PARERIGHT from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
import numpy as np EOM
Multilayer Perceptron ( PARERIGHT  for multi-class softmax classification EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT optimizers import SGD EOM
import numpy as np EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  keras DOT utils DOT to_categorical(np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  COMMA  num_classes EQUAL  PARERIGHT  EOM
x_test  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_test  EQUAL  keras DOT utils DOT to_categorical(np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  COMMA  num_classes EQUAL  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
sgd  EQUAL  SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  np DOT random DOT randint(2 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  EOM
x_test  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_test  EQUAL  np DOT random DOT randint(2 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
VGG-like convnet EOM
import numpy as np EOM
import keras EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers import Conv2D COMMA  MaxPooling2D EOM
from keras DOT optimizers import SGD EOM
x_train  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_train  EQUAL  keras DOT utils DOT to_categorical(np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  COMMA  num_classes EQUAL  PARERIGHT  EOM
x_test  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y_test  EQUAL  keras DOT utils DOT to_categorical(np DOT random DOT randint(10 COMMA  size EQUAL ( PARERIGHT  PARERIGHT  COMMA  num_classes EQUAL  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(32 COMMA  ( PARERIGHT  COMMA  activation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(32 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv2D(64 COMMA  ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
sgd  EQUAL  SGD( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
Sequence classification with 1D convolutions EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Conv1D COMMA  GlobalAveragePooling1D COMMA  MaxPooling1D EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv1D(64 COMMA  3 COMMA  activation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(GlobalAveragePooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
Sequence classification with LSTM EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
score  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Dense EOM
import numpy as np EOM
data_dim  EQUAL  16 EOM
timesteps  EQUAL  8 EOM
num_classes  EQUAL  10 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Activation EOM
from keras DOT utils import np_utils EOM
from keras DOT callbacks import ModelCheckpoint EOM
def LSTM_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(1024 COMMA nput_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT optimizers import RMSprop EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT callbacks import Callback EOM
class LossHistory( PARERIGHT : EOM
def on_train_begin( PARERIGHT : EOM
self DOT losses  EQUAL  [] EOM
def on_batch_end( PARERIGHT : EOM
self DOT losses DOT append(logs DOT get( PARERIGHT  PARERIGHT  EOM
def neural_net( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(rams[] COMMA  init EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
rms  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if load: EOM
model DOT load_weights( PARERIGHT  EOM
return model EOM
def lstm_net( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom __future__ import print_function EOM
import numpy as np EOM
from sklearn DOT metrics import ( PARERIGHT  EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Lambda EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Convolution1D COMMA MaxPooling1D COMMA  Flatten EOM
from keras DOT datasets import imdb EOM
from keras import backend as K EOM
from sklearn DOT cross_validation import train_test_split EOM
import pandas as pd EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from sklearn DOT preprocessing import Normalizer EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Convolution1D COMMA  Dense COMMA  Dropout COMMA  Flatten COMMA  MaxPooling1D EOM
from keras DOT utils import np_utils EOM
import numpy as np EOM
import h5py EOM
from keras import callbacks EOM
from keras DOT layers import LSTM COMMA  GRU COMMA  SimpleRNN EOM
from keras DOT callbacks import CSVLogger EOM
from keras DOT callbacks import ModelCheckpoint COMMA  EarlyStopping COMMA  ReduceLROnPlateau COMMA  CSVLogger EOM
import csv EOM
from sklearn DOT cross_validation import StratifiedKFold EOM
from sklearn DOT cross_validation import cross_val_score EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
with open( PARERIGHT  as f: EOM
reader  EQUAL  csv DOT reader( PARERIGHT  EOM
your_list  EQUAL  list( PARERIGHT  EOM
trainX  EQUAL  np DOT array( PARERIGHT  EOM
traindata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
Y  EQUAL  traindata DOT iloc[] EOM
y_train1  EQUAL  np DOT array( PARERIGHT  EOM
y_train EQUAL  to_categorical( PARERIGHT  EOM
maxlen  EQUAL  44100 EOM
trainX  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_train  EQUAL  np DOT reshape(trainX COMMA  ( PARERIGHT  PARERIGHT  EOM
with open( PARERIGHT  as f: EOM
reader1  EQUAL  csv DOT reader( PARERIGHT  EOM
your_list1  EQUAL  list( PARERIGHT  EOM
testX  EQUAL  np DOT array( PARERIGHT  EOM
testdata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
Y1  EQUAL  testdata DOT iloc[] EOM
y_test1  EQUAL  np DOT array( PARERIGHT  EOM
y_test EQUAL  to_categorical( PARERIGHT  EOM
maxlen  EQUAL  44100 EOM
testX  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  np DOT reshape(testX COMMA  ( PARERIGHT  PARERIGHT  EOM
batch_size  EQUAL  2 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
import os EOM
for file in os DOT listdir( PARERIGHT : EOM
model DOT load_weights( PARERIGHT  EOM
y_pred  EQUAL  model DOT predict_classes( PARERIGHT  EOM
accuracy  EQUAL  accuracy_score( PARERIGHT  EOM
recall  EQUAL  recall_score( PARERIGHT  EOM
precision  EQUAL  precision_score( PARERIGHT  EOM
f1  EQUAL  f1_score( PARERIGHT  EOM
from __future__ import division EOM
from __future__ import print_function EOM
import numpy as np EOM
from tensorflow DOT python DOT framework import test_util as tf_test_util EOM
from tensorflow DOT python DOT keras DOT _impl import keras EOM
from tensorflow DOT python DOT keras DOT _impl DOT keras import testing_utils EOM
from tensorflow DOT python DOT platform import test EOM
from tensorflow DOT python DOT training DOT rmsprop import RMSPropOptimizer EOM
class LSTMLayerTest( PARERIGHT : EOM
def test_return_sequences_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA return_sequences EOM
def test_static_shape_inference_LSTM( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
inputs  EQUAL  keras DOT layers DOT Dense(embedding_dim COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
outputs  EQUAL  model DOT layers[] DOT output EOM
self DOT assertEquals(outputs DOT get_shape( PARERIGHT  DOT as_list( PARERIGHT  COMMA  [] PARERIGHT  EOM
def test_dynamic_behavior_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
layer  EQUAL  keras DOT layers DOT LSTM(units COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile(RMSPropOptimizer( PARERIGHT  COMMA   PARERIGHT  EOM
x  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_dropout_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA dropout: 0 DOT 1} COMMA put_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
def test_implementation_mode_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
for mode in []: EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA implementation EOM
def test_statefulness_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
with self DOT test_session( PARERIGHT : EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Embedding(4 COMMA embedding_dim COMMA mask_zero EQUAL  COMMA input_length EQUAL  COMMA atch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
layer  EQUAL  layer_class( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
out1  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertEqual(out1 DOT shape COMMA  ( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch(ones(( PARERIGHT  PARERIGHT  COMMA  np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
out2  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out1 DOT max( PARERIGHT  COMMA  out2 DOT max( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
out3  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out2 DOT max( PARERIGHT  COMMA  out3 DOT max( PARERIGHT  PARERIGHT  EOM
model DOT reset_states( PARERIGHT  EOM
out4  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertAllClose( PARERIGHT  EOM
out5  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out4 DOT max( PARERIGHT  COMMA  out5 DOT max( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
left_padded_input  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
left_padded_input[]  EQUAL  0 EOM
left_padded_input[]  EQUAL  0 EOM
out6  EQUAL  model DOT predict( PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
right_padded_input  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
right_padded_input[]  EQUAL  0 EOM
right_padded_input[]  EQUAL  0 EOM
out7  EQUAL  model DOT predict( PARERIGHT  EOM
self DOT assertAllClose( PARERIGHT  EOM
def test_regularizers_LSTM( PARERIGHT : EOM
embedding_dim  EQUAL  4 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
with self DOT test_session( PARERIGHT : EOM
layer  EQUAL  layer_class(5 COMMA return_sequences EQUAL  COMMA weights EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA recurrent_regularizer EQUAL ( PARERIGHT  COMMA bias_regularizer EQUAL  COMMA activity_regularizer EQUAL  PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
self DOT assertEqual(len( PARERIGHT  COMMA  3 PARERIGHT  EOM
x  EQUAL  keras DOT backend DOT variable(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
layer( PARERIGHT  EOM
self DOT assertEqual(len(layer DOT get_losses_for( PARERIGHT  PARERIGHT  COMMA  1 PARERIGHT  EOM
def test_constraints_LSTM( PARERIGHT : EOM
embedding_dim  EQUAL  4 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
with self DOT test_session( PARERIGHT : EOM
k_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
r_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
b_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
layer  EQUAL  layer_class(5 COMMA return_sequences EQUAL  COMMA weights EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA kernel_constraint EQUAL  COMMA recurrent_constraint EQUAL  COMMA bias_constraint EQUAL  PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
def test_with_masking_layer_LSTM( PARERIGHT : EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
with self DOT test_session( PARERIGHT : EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT abs(np DOT random DOT random(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
targets / EQUAL  targets DOT sum( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Masking(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(layer_class( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
def test_from_config_LSTM( PARERIGHT : EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
for stateful in ( PARERIGHT : EOM
l1  EQUAL  layer_class( PARERIGHT  EOM
l2  EQUAL  layer_class DOT from_config(l1 DOT get_config( PARERIGHT  PARERIGHT  EOM
assert l1 DOT get_config( PARERIGHT   EQUAL ( PARERIGHT  EOM
def test_specify_initial_state_keras_tensor( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
with self DOT test_session( PARERIGHT : EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
if len( PARERIGHT   EQUAL         output  EQUAL  layer( PARERIGHT  EOM
else: EOM
output  EQUAL  layer( PARERIGHT  EOM
assert initial_state[] in layer DOT _inbound_nodes[] DOT input_tensors EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_specify_initial_state_non_keras_tensor( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
with self DOT test_session( PARERIGHT : EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [keras DOT backend DOT random_normal_variable( PARERIGHT  COMMA  0 COMMA  1 PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
output  EQUAL  layer( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_reset_states_with_values( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
with self DOT test_session( PARERIGHT : EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
assert len( PARERIGHT   EQUAL  assert layer DOT states[] is not None EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA np DOT zeros(keras DOT backend DOT int_shape( PARERIGHT  PARERIGHT  COMMA atol EQUAL  PARERIGHT  EOM
state_shapes  EQUAL  [] EOM
values  EQUAL  [] EOM
if len( PARERIGHT   EQUAL  values  EQUAL  values[] EOM
layer DOT reset_states( PARERIGHT  EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA np DOT ones(keras DOT backend DOT int_shape( PARERIGHT  PARERIGHT  COMMA atol EQUAL  PARERIGHT  EOM
with self DOT assertRaises( PARERIGHT : EOM
layer DOT reset_states([] * (len( PARERIGHT  + 1 PARERIGHT  PARERIGHT  EOM
def test_specify_state_with_masking( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
with self DOT test_session( PARERIGHT : EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
_  EQUAL  keras DOT layers DOT Masking( PARERIGHT ( PARERIGHT  EOM
initial_state  EQUAL  [] EOM
output  EQUAL  keras DOT layers DOT LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_return_state( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
with self DOT test_session( PARERIGHT : EOM
inputs  EQUAL  keras DOT Input(batch_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
outputs  EQUAL  layer( PARERIGHT  EOM
state  EQUAL  outputs[] EOM
assert len( PARERIGHT   EQUAL       model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
state  EQUAL  model DOT predict( PARERIGHT  EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA  state COMMA  atol EQUAL  PARERIGHT  EOM
def test_state_reuse( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
with self DOT test_session( PARERIGHT : EOM
inputs  EQUAL  keras DOT Input(batch_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
outputs  EQUAL  layer( PARERIGHT  EOM
output COMMA  state  EQUAL  outputs[] COMMA  outputs[] EOM
output  EQUAL  keras DOT layers DOT LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
outputs  EQUAL  model DOT predict( PARERIGHT  EOM
def test_initial_states_as_other_inputs( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
num_states  EQUAL  2 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
with self DOT test_session( PARERIGHT : EOM
main_inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
inputs  EQUAL  [] + initial_state EOM
layer  EQUAL  layer_class( PARERIGHT  EOM
output  EQUAL  layer( PARERIGHT  EOM
assert initial_state[] in layer DOT _inbound_nodes[] DOT input_tensors EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
main_inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
test DOT main( PARERIGHT from keras DOT models import Sequential EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dense EOM
from keras DOT optimizers import RMSprop EOM
def lstm_basic( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(hidden COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA  optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
return model EOM
def lstm_embedding( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(batch_input_shape EQUAL ( PARERIGHT  COMMA put_dim EQUAL  COMMA output_dim EQUAL  COMMA mask_zero EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
import numpy as np EOM
import keras EOM
from keras DOT layers import Dropout COMMA  LSTM COMMA  Dense COMMA  Activation EOM
from keras DOT models import Sequential EOM
from keras DOT regularizers import l2 EOM
from commons import * EOM
__author__  EQUAL  EOM
__version__  EQUAL  EOM
if __name__  EQUAL  EQUAL  : EOM
number_of_time_stamps  EQUAL  50 EOM
data  EQUAL  get_data_list_on_folder( PARERIGHT  EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
hidden_neurons  EQUAL  64 EOM
batch_size  EQUAL  32 EOM
model_lstm  EQUAL  Sequential( PARERIGHT  EOM
model_lstm DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_lstm DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model_lstm DOT fit( PARERIGHT  EOM
predicted  EQUAL  model_lstm DOT predict( PARERIGHT  EOM
else: EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dense COMMA  Activation EOM
number_epochs  EQUAL  10 EOM
batch_size  EQUAL  1 EOM
verbose  EQUAL  2 EOM
step_size  EQUAL  1 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
def model2( PARERIGHT : EOM
model DOT add(LSTM(	return_sequences EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA units EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def model1( PARERIGHT : EOM
model DOT add(LSTM(	return_sequences EQUAL ( PARERIGHT  COMMA units EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT callbacks import ModelCheckpoint EOM
from keras DOT utils import np_utils EOM
import soundlib EOM
X  EQUAL  np DOT array( PARERIGHT  EOM
y  EQUAL  np DOT array( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(512 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA  return_sequences  EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
filepath EQUAL  EOM
checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
callbacks_list  EQUAL  [] EOM
model DOT fit( PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
import os EOM
global_model_version  EQUAL  46 EOM
global_batch_size  EQUAL  16 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_2  EQUAL  Sequential( PARERIGHT  EOM
branch_2 DOT add( PARERIGHT  EOM
branch_2 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_6  EQUAL  Sequential( PARERIGHT  EOM
branch_6 DOT add( PARERIGHT  EOM
branch_6 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import yaml EOM
import numpy as np EOM
import pandas as pd EOM
from sklearn DOT cross_validation import KFold EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  LSTM COMMA  Bidirectional COMMA  Convolution1D COMMA  MaxPooling1D EOM
from keras DOT layers DOT advanced_activations import PReLU EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT callbacks import ModelCheckpoint COMMA  EarlyStopping EOM
from sklearn DOT metrics import f1_score COMMA  confusion_matrix EOM
nfolds  EQUAL  10 EOM
nb_epoch  EQUAL  100 EOM
batch_size  EQUAL  512 EOM
nlabels  EQUAL  8 EOM
nb_filter  EQUAL  512 EOM
filter_length  EQUAL  5 EOM
lstm_timesteps  EQUAL  5 EOM
lstm_input_dim  EQUAL  50 EOM
lstm_units  EQUAL  150 EOM
cfg  EQUAL  yaml DOT load(open( PARERIGHT  PARERIGHT  EOM
if cfg[]: EOM
lstm_timesteps  EQUAL  cfg[] EOM
if cfg[]: EOM
lstm_input_dim  EQUAL  cfg[] EOM
if cfg[]: EOM
nlabels  EQUAL  cfg[] EOM
def nn_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Convolution1D(nb_filter EQUAL  COMMA filter_length EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(PReLU( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return( PARERIGHT  EOM
df  EQUAL  pd DOT read_csv( PARERIGHT  EOM
X  EQUAL  df DOT iloc[] DOT values EOM
X  EQUAL  X DOT reshape( PARERIGHT  DOT astype( PARERIGHT  EOM
y  EQUAL  to_categorical( PARERIGHT  EOM
folds  EQUAL  KFold(len( PARERIGHT  COMMA  n_folds  EQUAL  COMMA  shuffle  EQUAL  PARERIGHT  EOM
currentFold  EQUAL  0 EOM
foldScores  EQUAL  [] EOM
for ( PARERIGHT  in folds: EOM
xtr  EQUAL  X[] EOM
ytr  EQUAL  y[] EOM
xte  EQUAL  X[] EOM
yte  EQUAL  y[] EOM
model  EQUAL  nn_model( PARERIGHT  EOM
callbacks  EQUAL  [] EOM
model DOT fit(xtr COMMA  ytr COMMA  batch_size EQUAL  COMMA  nb_epoch EQUAL  COMMA rbose EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  COMMA callbacks EQUAL  PARERIGHT  EOM
ypred  EQUAL  model DOT predict( PARERIGHT  EOM
ypred_max  EQUAL  ypred DOT argmax( PARERIGHT  EOM
yte_max  EQUAL  yte DOT argmax( PARERIGHT  EOM
score  EQUAL  f1_score( PARERIGHT  EOM
foldScores DOT append( PARERIGHT  EOM
currentFold + EQUAL  1 EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten COMMA  BatchNormalization EOM
from keras DOT layers import Convolution2D COMMA  MaxPooling2D EOM
from keras DOT callbacks import ModelCheckpoint EOM
from keras DOT utils import np_utils EOM
from keras DOT optimizers import adagrad COMMA  adadelta EOM
from keras import regularizers EOM
from keras DOT layers import LSTM EOM
from keras DOT regularizers import l2 EOM
class LSTM_M2: EOM
def __init__( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(1000 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
self DOT Model  EQUAL  modelimport os EOM
global_model_version  EQUAL  47 EOM
global_batch_size  EQUAL  16 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_2  EQUAL  Sequential( PARERIGHT  EOM
branch_2 DOT add( PARERIGHT  EOM
branch_2 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_6  EQUAL  Sequential( PARERIGHT  EOM
branch_6 DOT add( PARERIGHT  EOM
branch_6 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import os EOM
global_model_version  EQUAL  50 EOM
global_batch_size  EQUAL  16 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_2  EQUAL  Sequential( PARERIGHT  EOM
branch_2 DOT add( PARERIGHT  EOM
branch_2 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_6  EQUAL  Sequential( PARERIGHT  EOM
branch_6 DOT add( PARERIGHT  EOM
branch_6 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_8  EQUAL  Sequential( PARERIGHT  EOM
branch_8 DOT add( PARERIGHT  EOM
branch_8 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_8 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_8 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_8 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_8 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_8 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_8 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_10  EQUAL  Sequential( PARERIGHT  EOM
branch_10 DOT add( PARERIGHT  EOM
branch_10 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_10 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_10 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_10 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_10 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_10 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_10 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import load_model EOM
import numpy as np EOM
import data_proc EOM
import os EOM
def lstm_with_generator( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(128 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit_generator(data_proc DOT generator_from_path( PARERIGHT  COMMA  steps_per_epoch EQUAL  COMMA  epochs EQUAL  COMMA  validation_data  EQUAL ( PARERIGHT  COMMA  validation_steps  EQUAL  PARERIGHT  EOM
model  EQUAL  load_model( PARERIGHT  EOM
res  EQUAL  model DOT evaluate_generator(data_proc DOT generator_from_path( PARERIGHT  COMMA  steps EQUAL  PARERIGHT  EOM
def lstm_train( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(128 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(X_train COMMA  Y_train COMMA  batch_size EQUAL  COMMA  epochs EQUAL  COMMA validation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
res  EQUAL  model DOT evaluate( PARERIGHT  EOM
def lstm_predict( PARERIGHT : EOM
model  EQUAL  load_model( PARERIGHT  EOM
return res EOM
if __name__ EQUAL  EQUAL : EOM
lstm_with_generator( PARERIGHT  EOM
from __future__ import absolute_import COMMA  division COMMA  print_function EOM
import tensorflow as tf EOM
from tensorflow import keras EOM
from keras DOT layers import LSTM EOM
def build_basic_model( PARERIGHT : EOM
model  EQUAL  keras DOT Sequential([] PARERIGHT  EOM
optimizer  EQUAL  tf DOT train DOT RMSPropOptimizer( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def build_lstm_model( PARERIGHT : EOM
model  EQUAL  keras DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM(nn_nodes COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
optimizer  EQUAL  keras DOT optimizers DOT Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
import json EOM
from collections import defaultdict EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import LSTM COMMA  GRU EOM
from keras DOT optimizers import SGD EOM
from keras DOT callbacks import LearningRateScheduler EOM
from keras DOT callbacks import EarlyStopping EOM
from keras DOT callbacks import ModelCheckpoint EOM
maxlen  EQUAL  50 EOM
PATH_PN  EQUAL  EOM
PATH_TOKENIZER  EQUAL  EOM
tokenizer  EQUAL  defaultdict( PARERIGHT  EOM
tokenizer DOT update(json DOT load(open( PARERIGHT  PARERIGHT  PARERIGHT  EOM
tokens  EQUAL  list(set( PARERIGHT  PARERIGHT  EOM
token_min  EQUAL  min( PARERIGHT  EOM
token_max  EQUAL  max( PARERIGHT  EOM
def tokenize( PARERIGHT : EOM
return list(map( PARERIGHT  PARERIGHT  EOM
pn  EQUAL  pd DOT read_csv( PARERIGHT  EOM
pn[]  EQUAL  pn[] DOT apply(lambda line: list(jieba DOT cut( PARERIGHT  PARERIGHT  PARERIGHT  EOM
pn[]  EQUAL  list(sequence DOT pad_sequences( PARERIGHT  PARERIGHT  EOM
x  EQUAL  np DOT array(list( PARERIGHT  PARERIGHT  EOM
y  EQUAL  np DOT array(list( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
MODEL_LSTM_PATH  EQUAL  EOM
model_checkpoint_better_path  EQUAL  MODEL_LSTM_PATH + EOM
model_checkpoint_best_path  EQUAL  MODEL_LSTM_PATH + EOM
sgd  EQUAL  SGD( PARERIGHT  EOM
early_stopping  EQUAL  EarlyStopping( PARERIGHT  EOM
checkpoint_better  EQUAL  ModelCheckpoint( PARERIGHT  EOM
checkpoint_best  EQUAL  ModelCheckpoint( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout EOM
from keras DOT layers import LSTM COMMA  Merge COMMA  Dense EOM
def VQA_MODEL( PARERIGHT : EOM
image_feature_size  EQUAL  4096 EOM
word_feature_size  EQUAL  300 EOM
number_of_LSTM  EQUAL  3 EOM
number_of_hidden_units_LSTM  EQUAL  512 EOM
max_length_questions  EQUAL  30 EOM
number_of_dense_layers  EQUAL  3 EOM
number_of_hidden_units  EQUAL  1024 EOM
activation_function  EQUAL  EOM
dropout_pct  EQUAL  0 DOT 5 EOM
model_image  EQUAL  Sequential( PARERIGHT  EOM
model_image DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language  EQUAL  Sequential( PARERIGHT  EOM
model_language DOT add(LSTM(number_of_hidden_units_LSTM COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
for _ in xrange( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT optimizers import RMSprop EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT callbacks import Callback EOM
class LossHistory( PARERIGHT : EOM
def on_train_begin( PARERIGHT : EOM
self DOT losses  EQUAL  [] EOM
def on_batch_end( PARERIGHT : EOM
self DOT losses DOT append(logs DOT get( PARERIGHT  PARERIGHT  EOM
def neural_net( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(rams[] COMMA  init EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
rms  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if load: EOM
model DOT load_weights( PARERIGHT  EOM
return model EOM
def lstm_net( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT layers DOT recurrent import LSTM COMMA  GRU EOM
from keras DOT models import Sequential EOM
def get_lstm( PARERIGHT : EOM
model DOT add(LSTM(units[] COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def get_gru( PARERIGHT : EOM
model DOT add(GRU(units[] COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def _get_sae( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def get_saes( PARERIGHT : EOM
sae2  EQUAL  _get_sae( PARERIGHT  EOM
sae3  EQUAL  _get_sae( PARERIGHT  EOM
saes  EQUAL  Sequential( PARERIGHT  EOM
saes DOT add(Dense( PARERIGHT  PARERIGHT  EOM
saes DOT add(Activation( PARERIGHT  PARERIGHT  EOM
saes DOT add(Dense( PARERIGHT  PARERIGHT  EOM
saes DOT add(Activation( PARERIGHT  PARERIGHT  EOM
saes DOT add(Dense( PARERIGHT  PARERIGHT  EOM
saes DOT add(Activation( PARERIGHT  PARERIGHT  EOM
saes DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
saes DOT add(Dense( PARERIGHT  PARERIGHT  EOM
models  EQUAL  [] EOM
return modelsimport keras DOT backend as k EOM
from keras import layers EOM
from keras DOT layers import Input COMMA  Dense COMMA  Reshape COMMA  Flatten COMMA  Embedding COMMA  Dropout COMMA  LSTM EOM
from keras DOT layers DOT advanced_activations import LeakyReLU EOM
from keras DOT layers DOT convolutional import UpSampling2D COMMA  Conv2D EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT optimizers import Adam EOM
from keras DOT utils DOT generic_utils import Progbar EOM
import numpy as np EOM
import pickle EOM
import datetime EOM
from ml DOT public import * EOM
def ann_build_generator( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
def ann_train_test( PARERIGHT : EOM
st  EQUAL  datetime DOT datetime DOT now( PARERIGHT  EOM
model  EQUAL  ann_build_generator(len( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
with open( PARERIGHT  as handle: EOM
pickle DOT dump( PARERIGHT  EOM
Y_pred  EQUAL  model DOT predict( PARERIGHT  EOM
tp COMMA  tn COMMA  fp COMMA  fn  EQUAL  pred_test_lstm( PARERIGHT  EOM
ed  EQUAL  datetime DOT datetime DOT now( PARERIGHT  EOM
return  + gen_result_line( PARERIGHT  EOM
def dnn_build_generator( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def dnn_train_test( PARERIGHT : EOM
st  EQUAL  datetime DOT datetime DOT now( PARERIGHT  EOM
model  EQUAL  dnn_build_generator(len( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
with open( PARERIGHT  as handle: EOM
pickle DOT dump( PARERIGHT  EOM
Y_pred  EQUAL  model DOT predict( PARERIGHT  EOM
tp COMMA  tn COMMA  fp COMMA  fn  EQUAL  pred_test_lstm( PARERIGHT  EOM
ed  EQUAL  datetime DOT datetime DOT now( PARERIGHT  EOM
return  + gen_result_line( PARERIGHT  EOM
def lstm_build_generator( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(4 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm_build_generator2( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(4 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def lstm_data_gen( PARERIGHT : EOM
n_X_train  EQUAL  [] EOM
cur_X_train  EQUAL  [] EOM
n_Y_train  EQUAL  [] EOM
cur_Y_train  EQUAL  [] EOM
for i in range(cnt COMMA  len( PARERIGHT  PARERIGHT : EOM
n_X_train DOT append( PARERIGHT  EOM
n_Y_train DOT append( PARERIGHT  EOM
return np DOT array( PARERIGHT  COMMA  np DOT array( PARERIGHT  EOM
def lstm_train_test( PARERIGHT : EOM
st  EQUAL  datetime DOT datetime DOT now( PARERIGHT  EOM
model  EQUAL  lstm_build_generator(len( PARERIGHT  PARERIGHT  EOM
n_X_train COMMA  n_Y_train  EQUAL  lstm_data_gen( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
n_X_test COMMA  n_Y_test  EQUAL  lstm_data_gen( PARERIGHT  EOM
Y_pred  EQUAL  model DOT predict( PARERIGHT  EOM
tp COMMA  tn COMMA  fp COMMA  fn  EQUAL  pred_test_lstm( PARERIGHT  EOM
return  + gen_result_line( PARERIGHT from keras DOT models import Sequential EOM
from keras DOT layers import LSTM COMMA  Dense EOM
import numpy as np EOM
import matplotlib DOT pyplot as plt EOM
import numpy as np EOM
import time EOM
import csv EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout COMMA Merge EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
import copy EOM
data_dim  EQUAL  1 EOM
timesteps  EQUAL  13 EOM
model_A  EQUAL  Sequential( PARERIGHT  EOM
model_B  EQUAL  Sequential( PARERIGHT  EOM
model_Combine  EQUAL  Sequential( PARERIGHT  EOM
lstm_hidden_size  EQUAL  [] EOM
drop_out_rate  EQUAL  [] EOM
model_A DOT add(LSTM(lstm_hidden_size[] COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_A DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_A DOT add(Dense( PARERIGHT  PARERIGHT  EOM
in_dimension  EQUAL  3 EOM
nn_hidden_size  EQUAL  [] EOM
nn_drop_rate  EQUAL  [] EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model_B DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_Combine DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model_Combine DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model_Combine DOT compile( PARERIGHT  EOM
from keras DOT utils DOT visualize_util import plot COMMA  to_graph EOM
graph  EQUAL  to_graph( PARERIGHT  EOM
graph DOT write_png( PARERIGHT from utility DOT enums import Processor COMMA  RnnType EOM
def CreateModel( PARERIGHT : EOM
keras_impl  EQUAL  __getKerasImplementation( PARERIGHT  EOM
if( PARERIGHT : EOM
else: EOM
if args[]  EQUAL  EQUAL  RnnType DOT LSTM : EOM
if args[]  EQUAL  EQUAL  Processor DOT GPU and args[]  EQUAL  EQUAL  True: EOM
return __createCUDNN_LSTM_Stateless( PARERIGHT  EOM
else: EOM
return __createLSTM_Stateless( PARERIGHT  EOM
elif args[]  EQUAL  EQUAL  RnnType DOT GRU: EOM
if args[]  EQUAL  EQUAL  Processor DOT GPU and args[]  EQUAL  EQUAL  True: EOM
return __createCUDNN_GRU_Stateless( PARERIGHT  EOM
else: EOM
return __createGRU_Stateless( PARERIGHT  EOM
elif args[]  EQUAL  EQUAL  RnnType DOT RNN: EOM
return __createRNN_Stateless( PARERIGHT  EOM
else: EOM
raise ValueError( PARERIGHT  EOM
def CreateCallbacks( PARERIGHT : EOM
callbacks  EQUAL  [] EOM
keras_impl  EQUAL  __getKerasImplementation( PARERIGHT  EOM
callbacks DOT append(keras_impl DOT callbacks DOT EarlyStopping( PARERIGHT  PARERIGHT  EOM
if( PARERIGHT : EOM
callbacks DOT append(keras_impl DOT callbacks DOT ModelCheckpoint( PARERIGHT  PARERIGHT  EOM
if( PARERIGHT : EOM
callbacks DOT append(keras_impl DOT callbacks DOT ReduceLROnPlateau( PARERIGHT  PARERIGHT  EOM
callbacks DOT append(keras_impl DOT callbacks DOT CSVLogger( DOT format( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if args[]  EQUAL  EQUAL  True: EOM
callsbacks DOT append(tensorboard_cb  EQUAL ( PARERIGHT  PARERIGHT  EOM
return callbacks EOM
def CreateOptimizer( PARERIGHT : EOM
if args[]  EQUAL  EQUAL  Processor DOT TPU: EOM
import tensorflow as tf EOM
return tf DOT contrib DOT opt DOT NadamOptimizer( PARERIGHT  EOM
else: EOM
return keras_impl DOT optimizers DOT Nadam( PARERIGHT  EOM
def __getKerasImplementation( PARERIGHT : EOM
if( PARERIGHT : EOM
import tensorflow EOM
from tensorflow DOT python import keras as keras_impl EOM
else: EOM
import keras as keras_impl EOM
return keras_impl EOM
def __createCUDNN_LSTM_Stateless( PARERIGHT : EOM
model  EQUAL  keras_impl DOT models DOT Sequential( PARERIGHT  EOM
if args[]  EQUAL  EQUAL  1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT CuDNNLSTM( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT CuDNNLSTM(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  PARERIGHT  PARERIGHT  EOM
if args[] > 1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT CuDNNLSTM( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT CuDNNLSTM(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
if i  EQUAL  EQUAL  args[] - 2: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT CuDNNLSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
else: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT CuDNNLSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT CuDNNLSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  CreateOptimizer( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def __createLSTM_Stateless( PARERIGHT : EOM
model  EQUAL  keras_impl DOT models DOT Sequential( PARERIGHT  EOM
if args[]  EQUAL  EQUAL  1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT LSTM( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT LSTM(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  COMMA  dropout EQUAL [] PARERIGHT  PARERIGHT  EOM
if args[] > 1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT LSTM( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT LSTM(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  COMMA  dropout EQUAL [] PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
if i  EQUAL  EQUAL  args[] - 2: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
else: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  CreateOptimizer( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def __createCUDNN_GRU_Stateless( PARERIGHT : EOM
model  EQUAL  keras_impl DOT models DOT Sequential( PARERIGHT  EOM
if args[]  EQUAL  EQUAL  1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT CuDNNGRU( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT CuDNNGRU(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  PARERIGHT  PARERIGHT  EOM
if args[] > 1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT CuDNNGRU( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT CuDNNGRU(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
if i  EQUAL  EQUAL  args[] - 2: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT CuDNNGRU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT CuDNNGRU( PARERIGHT  PARERIGHT  EOM
else: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT CuDNNGRU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT CuDNNGRU( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  CreateOptimizer( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def __createGRU_Stateless( PARERIGHT : EOM
model  EQUAL  keras_impl DOT models DOT Sequential( PARERIGHT  EOM
if args[]  EQUAL  EQUAL  1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT GRU( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT GRU(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  COMMA  dropout EQUAL [] PARERIGHT  PARERIGHT  EOM
if args[] > 1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT GRU( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT GRU(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  COMMA  dropout EQUAL [] PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
if i  EQUAL  EQUAL  args[] - 2: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT GRU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT GRU( PARERIGHT  PARERIGHT  EOM
else: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT GRU( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  CreateOptimizer( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def __createRNN_Stateless( PARERIGHT : EOM
model  EQUAL  keras_impl DOT models DOT Sequential( PARERIGHT  EOM
if args[]  EQUAL  EQUAL  1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT SimpleRNN( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT SimpleRNN(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  COMMA  dropout EQUAL [] PARERIGHT  PARERIGHT  EOM
if args[] > 1: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT SimpleRNN( PARERIGHT  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT SimpleRNN(args[] COMMA input_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  COMMA  kernel_initializer EQUAL  COMMA  dropout EQUAL [] PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
if i  EQUAL  EQUAL  args[] - 2: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT SimpleRNN( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT SimpleRNN( PARERIGHT  PARERIGHT  EOM
else: EOM
if args[]  EQUAL  EQUAL  True: EOM
model DOT add(keras_impl DOT layers DOT Bidirectional(keras_impl DOT layers DOT SimpleRNN( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(keras_impl DOT layers DOT SimpleRNN( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(keras_impl DOT layers DOT Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  CreateOptimizer( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelimport os EOM
global_model_version  EQUAL  42 EOM
global_batch_size  EQUAL  32 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_2  EQUAL  Sequential( PARERIGHT  EOM
branch_2 DOT add( PARERIGHT  EOM
branch_2 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_6  EQUAL  Sequential( PARERIGHT  EOM
branch_6 DOT add( PARERIGHT  EOM
branch_6 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT recurrent import SimpleRNN  COMMA  LSTM EOM
from keras DOT optimizers import SGD  COMMA  Adagrad EOM
def keras_model( PARERIGHT : EOM
batch_dim  EQUAL  30 EOM
LSTM_layers  EQUAL  1 EOM
LSTM_units   EQUAL  300 EOM
DNN_units    EQUAL  [] EOM
question_LSTM  EQUAL  Sequential( PARERIGHT  EOM
layer_Mask_q  EQUAL  Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
question_LSTM DOT add( PARERIGHT  EOM
question_LSTM DOT add( PARERIGHT  EOM
opt_LSTM_1  EQUAL  Sequential( PARERIGHT  EOM
layer_Mask_1  EQUAL  Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer_LSTM_1  EQUAL  LSTM( PARERIGHT  EOM
opt_LSTM_1 DOT add( PARERIGHT  EOM
opt_LSTM_1 DOT add( PARERIGHT  EOM
opt_LSTM_2  EQUAL  Sequential( PARERIGHT  EOM
layer_Mask_2  EQUAL  Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer_LSTM_2  EQUAL  LSTM( PARERIGHT  EOM
opt_LSTM_2 DOT add( PARERIGHT  EOM
opt_LSTM_2 DOT add( PARERIGHT  EOM
opt_LSTM_3  EQUAL  Sequential( PARERIGHT  EOM
layer_Mask_3  EQUAL  Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer_LSTM_3  EQUAL  LSTM( PARERIGHT  EOM
opt_LSTM_3 DOT add( PARERIGHT  EOM
opt_LSTM_3 DOT add( PARERIGHT  EOM
opt_LSTM_4  EQUAL  Sequential( PARERIGHT  EOM
layer_Mask_4  EQUAL  Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer_LSTM_4  EQUAL  LSTM( PARERIGHT  EOM
opt_LSTM_4 DOT add( PARERIGHT  EOM
opt_LSTM_4 DOT add( PARERIGHT  EOM
opt_LSTM_5  EQUAL  Sequential( PARERIGHT  EOM
layer_Mask_5  EQUAL  Masking(mask_value EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer_LSTM_5  EQUAL  LSTM( PARERIGHT  EOM
opt_LSTM_5 DOT add( PARERIGHT  EOM
opt_LSTM_5 DOT add( PARERIGHT  EOM
image_model  EQUAL  Sequential( PARERIGHT  EOM
image_model DOT add(Reshape(input_shape  EQUAL ( PARERIGHT  COMMA  dims  EQUAL ( PARERIGHT   PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
layer_pre_DNN  EQUAL  Dense( PARERIGHT  EOM
layer_pre_DNN_act  EQUAL  Activation( PARERIGHT  EOM
layer_pre_DNN_dro  EQUAL  Dropout( PARERIGHT  EOM
layer_DNN_1  EQUAL  Dense( PARERIGHT  EOM
layer_DNN_1_act  EQUAL  Activation( PARERIGHT  EOM
layer_DNN_1_dro  EQUAL  Dropout( PARERIGHT  EOM
layer_softmax  EQUAL  Activation( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
X  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
Y  EQUAL  np DOT array( PARERIGHT  EOM
my_model  EQUAL  keras_model( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout COMMA  Highway EOM
from keras DOT layers import LSTM COMMA  Merge COMMA  Dense COMMA  Embedding EOM
def model( PARERIGHT : EOM
model_image  EQUAL  Sequential( PARERIGHT  EOM
model_image DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language  EQUAL  Sequential( PARERIGHT  EOM
model_language DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM(args DOT num_hidden_units_lstm COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
for i in xrange( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return modelimport numpy EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
numpy DOT random DOT seed( PARERIGHT  EOM
top_words  EQUAL  5000 EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
max_review_length  EQUAL  500 EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
embedding_vecor_length  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
import numpy EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dropout EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
max_epoch  EQUAL  100 EOM
features  EQUAL  32 EOM
MAX_FEATURE_LEN  EQUAL  32 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(30 COMMA  return_sequences EQUAL  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
X  EQUAL  np DOT array( PARERIGHT  EOM
Y  EQUAL  np DOT array( PARERIGHT  EOM
X2  EQUAL  np DOT reshape(X COMMA  ( PARERIGHT  PARERIGHT  EOM
Y2  EQUAL  np DOT reshape(Y COMMA  ( PARERIGHT  PARERIGHT  EOM
history  EQUAL  model DOT fit( PARERIGHT  EOM
plt DOT subplot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT title( PARERIGHT  EOM
plt DOT ylabel( PARERIGHT  EOM
plt DOT xlabel( PARERIGHT  EOM
plt DOT legend( PARERIGHT  EOM
plt DOT grid( PARERIGHT  EOM
plt DOT xlim( PARERIGHT  EOM
plt DOT ylim( PARERIGHT  EOM
plt DOT show( PARERIGHT  EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Embedding COMMA  LSTM COMMA  Dense COMMA  Dropout COMMA  Bidirectional COMMA  TimeDistributed COMMA  Activation COMMA  Convolution1D COMMA MaxPool1D COMMA  GRU COMMA  Permute COMMA  Reshape COMMA  Lambda COMMA  RepeatVector COMMA  merge COMMA  K EOM
from keras DOT models import Model EOM
from keras DOT preprocessing import sequence EOM
use_dropout  EQUAL  True EOM
def LSTM_Model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if use_dropout: EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def LSTM2Layer_Model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if use_dropout: EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def BiLSTM_Model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if use_dropout: EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def CLSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
if use_dropout: EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def CBiLSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
if use_dropout: EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
if __name__  EQUAL  EQUAL  : EOM
CBiLSTM( PARERIGHT from __future__ import print_function EOM
from keras DOT models import Sequential COMMA  Graph EOM
from keras DOT layers DOT core import Dense COMMA  TimeDistributedDense COMMA  Dropout EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import LSTM EOM
class nntools( PARERIGHT : EOM
def get_current_model( PARERIGHT : EOM
return nntools DOT build_lstm_network( PARERIGHT  EOM
def build_lstm_network( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(TimeDistributedDense( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def build_bidirectional_lstm_network( PARERIGHT : EOM
model  EQUAL  Graph( PARERIGHT  EOM
model DOT add_input(name EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT add_node(Embedding( PARERIGHT  COMMA  input EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
model DOT add_node(LSTM( PARERIGHT  COMMA  name EQUAL  COMMA  input EQUAL  PARERIGHT  EOM
model DOT add_node(LSTM( PARERIGHT  COMMA  name EQUAL  COMMA  input EQUAL  PARERIGHT  EOM
model DOT add_node(Dropout( PARERIGHT  COMMA  name EQUAL  COMMA  inputs EQUAL [] PARERIGHT  EOM
model DOT add_node(Dense( PARERIGHT  COMMA  name EQUAL  COMMA  input EQUAL  PARERIGHT  EOM
model DOT add_output( PARERIGHT  EOM
return modelfrom keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers import LSTM COMMA  Embedding COMMA  Dense EOM
from keras DOT optimizers import Adam EOM
def _lstm_model( PARERIGHT : EOM
output_dim  EQUAL  16 EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(output_dim COMMA  input_shape  EQUAL ( PARERIGHT  COMMA  return_sequences  EQUAL  PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT : EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def _tokenizer_model( PARERIGHT : EOM
output_dim  EQUAL  32 EOM
optimizer  EQUAL  Adam( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT : EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Flatten COMMA  RepeatVector EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Convolution2D COMMA  MaxPooling2D EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers DOT wrappers import TimeDistributed EOM
from util import categorical_accuracy_per_sequence EOM
from keras DOT regularizers import l2 EOM
def build_CNN_LSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Convolution2D(64 COMMA  3 COMMA  3 COMMA  border_mode EQUAL  COMMA  activation EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Convolution2D( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  COMMA  strides EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
a  EQUAL  model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(RepeatVector( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dropout( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelimport tensorflow as tf EOM
import numpy as np EOM
def network_model( PARERIGHT : EOM
model  EQUAL  tf DOT keras DOT models DOT Sequential( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT optimizers import RMSprop EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT callbacks import Callback EOM
import tensorflow as tf EOM
class LossHistory( PARERIGHT : EOM
def on_train_begin( PARERIGHT : EOM
self DOT losses  EQUAL  [] EOM
def on_batch_end( PARERIGHT : EOM
self DOT losses DOT append(logs DOT get( PARERIGHT  PARERIGHT  EOM
def neural_net( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(params[] COMMA  init EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
rms  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if load: EOM
model DOT load_weights( PARERIGHT  EOM
return model EOM
import pandas as pd EOM
import numpy as np EOM
import os EOM
from keras DOT models import load_model EOM
import math EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Activation COMMA  Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import GRU EOM
from keras DOT layers import ConvLSTM2D EOM
from keras DOT layers import Conv2D EOM
from keras DOT layers import Reshape EOM
from keras DOT layers import Conv1D EOM
from keras DOT layers import Multiply EOM
from keras DOT layers import Input EOM
from keras import Model EOM
from sklearn import preprocessing EOM
from sklearn import metrics EOM
from sklearn DOT metrics import mean_absolute_error EOM
from sklearn import svm EOM
import xgboost as xgb EOM
import data_processing EOM
os DOT chdir( PARERIGHT  EOM
string EQUAL [] EOM
class Price_prediction: EOM
def read_data( PARERIGHT : EOM
data  EQUAL  pd DOT read_csv( PARERIGHT  EOM
return data EOM
def load_data( PARERIGHT : EOM
data  EQUAL  self DOT read_data( PARERIGHT  EOM
data  EQUAL  np DOT array( PARERIGHT  EOM
train_data  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
for row in data: EOM
cut_data  EQUAL  row[] EOM
train_data  EQUAL  np DOT vstack(( PARERIGHT  PARERIGHT  EOM
return train_data EOM
y  EQUAL  data_processing DOT close_price( PARERIGHT  EOM
r  EQUAL  len( PARERIGHT  // 10 EOM
c  EQUAL  0 EOM
train_input  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
for j in range( PARERIGHT : EOM
for u in range( PARERIGHT : EOM
t  EQUAL  x[][] EOM
if x[][] ! EQUAL  0: EOM
s  EQUAL  t / x[][] EOM
else: EOM
s  EQUAL  1 EOM
s  EQUAL  s - 1 EOM
train_input[][][]  EQUAL  s EOM
test_input  EQUAL  np DOT zeros((len( PARERIGHT  - 2 * win - r * p COMMA  win COMMA  x DOT shape[] PARERIGHT  PARERIGHT  EOM
for i in range(r * p + win COMMA  len( PARERIGHT  - win PARERIGHT : EOM
for j in range( PARERIGHT : EOM
for u in range( PARERIGHT : EOM
t  EQUAL  x[][] EOM
if x[][] ! EQUAL  0: EOM
s  EQUAL  t / x[][] EOM
else: EOM
s  EQUAL  1 EOM
s  EQUAL  s - 1 EOM
test_input[][][]  EQUAL  s EOM
c  EQUAL  c + 1 EOM
z  EQUAL  np DOT zeros((len( PARERIGHT  COMMA  1 PARERIGHT  PARERIGHT  EOM
for i in range(0 COMMA  len( PARERIGHT  - win PARERIGHT : EOM
z[][]  EQUAL  y[][] / y[][] - 1 EOM
train_output  EQUAL  z[] EOM
test_output  EQUAL  z[] EOM
trainx  EQUAL  np DOT zeros((len( PARERIGHT  COMMA  win * x DOT shape[] PARERIGHT  PARERIGHT  EOM
testx  EQUAL  np DOT zeros((len( PARERIGHT  COMMA  win * x DOT shape[] PARERIGHT  PARERIGHT  EOM
for i in range(0 COMMA  len( PARERIGHT  PARERIGHT : EOM
trainx[]  EQUAL  train_input[] DOT flatten( PARERIGHT  EOM
for i in range(0 COMMA  len( PARERIGHT  PARERIGHT : EOM
testx[]  EQUAL  test_input[] DOT flatten( PARERIGHT  EOM
return trainx COMMA  testx COMMA  train_output COMMA  test_output EOM
y  EQUAL  data_processing DOT close_price( PARERIGHT  EOM
r  EQUAL  len( PARERIGHT  // 10 EOM
c  EQUAL  0 EOM
train_input  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
for j in range( PARERIGHT : EOM
for u in range( PARERIGHT : EOM
t  EQUAL  x[][] EOM
if x[][] ! EQUAL  0: EOM
s  EQUAL  t / x[][] EOM
else: EOM
s  EQUAL  1 EOM
s  EQUAL  s - 1 EOM
train_input[][][]  EQUAL  s EOM
test_input  EQUAL  np DOT zeros((len( PARERIGHT  - 2 * win - r * p COMMA  win COMMA  x DOT shape[] PARERIGHT  PARERIGHT  EOM
for i in range(r * p + win COMMA  len( PARERIGHT  - win PARERIGHT : EOM
for j in range( PARERIGHT : EOM
for u in range( PARERIGHT : EOM
t  EQUAL  x[][] EOM
if x[][] ! EQUAL  0: EOM
s  EQUAL  t / x[][] EOM
else: EOM
s  EQUAL  1 EOM
s  EQUAL  s - 1 EOM
test_input[][][]  EQUAL  s EOM
c  EQUAL  c + 1 EOM
z  EQUAL  np DOT zeros((len( PARERIGHT  COMMA  1 PARERIGHT  PARERIGHT  EOM
for i in range(0 COMMA  len( PARERIGHT  - win PARERIGHT : EOM
z[][]  EQUAL  y[][] / y[][] - 1 EOM
train_output  EQUAL  z[] EOM
test_output  EQUAL  z[] EOM
trainx  EQUAL  np DOT zeros((len( PARERIGHT  COMMA  win * x DOT shape[] PARERIGHT  PARERIGHT  EOM
testx  EQUAL  np DOT zeros((len( PARERIGHT  COMMA  win * x DOT shape[] PARERIGHT  PARERIGHT  EOM
for i in range(0 COMMA  len( PARERIGHT  PARERIGHT : EOM
trainx[]  EQUAL  train_input[] DOT flatten( PARERIGHT  EOM
for i in range(0 COMMA  len( PARERIGHT  PARERIGHT : EOM
testx[]  EQUAL  test_input[] DOT flatten( PARERIGHT  EOM
return trainx COMMA  testx COMMA  train_output COMMA  test_output EOM
y  EQUAL  data_processing DOT close_price( PARERIGHT  EOM
r  EQUAL  len( PARERIGHT  EOM
c  EQUAL  0 EOM
train_input  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
for j in range( PARERIGHT : EOM
for u in range( PARERIGHT : EOM
t  EQUAL  x[][] EOM
if x[][] ! EQUAL  0: EOM
s  EQUAL  t / x[][] EOM
else: EOM
s  EQUAL  1 EOM
s  EQUAL  s - 1 EOM
train_input[][][]  EQUAL  s EOM
test_input  EQUAL  np DOT zeros((len( PARERIGHT  - 2 * win - r * p COMMA  win COMMA  x DOT shape[] PARERIGHT  PARERIGHT  EOM
for i in range(r * p + win COMMA  len( PARERIGHT  - win PARERIGHT : EOM
for j in range( PARERIGHT : EOM
for u in range( PARERIGHT : EOM
t  EQUAL  x[][] EOM
if x[][] ! EQUAL  0: EOM
s  EQUAL  t / x[][] EOM
else: EOM
s  EQUAL  1 EOM
s  EQUAL  s - 1 EOM
test_input[][][]  EQUAL  s EOM
c  EQUAL  c + 1 EOM
z  EQUAL  np DOT zeros((len( PARERIGHT  COMMA  1 PARERIGHT  PARERIGHT  EOM
for i in range(0 COMMA  len( PARERIGHT  - win PARERIGHT : EOM
z[][]  EQUAL  y[][] / y[][] - 1 EOM
train_output  EQUAL  z[] EOM
test_output  EQUAL  z[] EOM
return train_input COMMA  test_input COMMA  train_output COMMA  test_output EOM
y  EQUAL  data_processing DOT close_price( PARERIGHT  EOM
r  EQUAL  len( PARERIGHT  // 10 EOM
c  EQUAL  0 EOM
train_input  EQUAL  np DOT zeros(( PARERIGHT  PARERIGHT  EOM
for i in range( PARERIGHT : EOM
for j in range( PARERIGHT : EOM
for u in range( PARERIGHT : EOM
t  EQUAL  x[][] EOM
if x[][] ! EQUAL  0: EOM
s  EQUAL  t / x[][] EOM
else: EOM
s  EQUAL  1 EOM
s  EQUAL  s - 1 EOM
train_input[][][]  EQUAL  s EOM
test_input  EQUAL  np DOT zeros((len( PARERIGHT  - 2 * win - r * p COMMA  win COMMA  x DOT shape[] PARERIGHT  PARERIGHT  EOM
for i in range(r * p + win COMMA  len( PARERIGHT  - win PARERIGHT : EOM
for j in range( PARERIGHT : EOM
for u in range( PARERIGHT : EOM
t  EQUAL  x[][] EOM
if x[][] ! EQUAL  0: EOM
s  EQUAL  t / x[][] EOM
else: EOM
s  EQUAL  1 EOM
s  EQUAL  s - 1 EOM
test_input[][][]  EQUAL  s EOM
c  EQUAL  c + 1 EOM
z  EQUAL  np DOT zeros((len( PARERIGHT  COMMA  1 PARERIGHT  PARERIGHT  EOM
for i in range(0 COMMA  len( PARERIGHT  - win PARERIGHT : EOM
z[][]  EQUAL  y[][] / y[][] - 1 EOM
train_output  EQUAL  z[] EOM
test_output  EQUAL  z[] EOM
return train_input COMMA  test_input COMMA  train_output COMMA  test_output EOM
def LSTM_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(64 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def GRU( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(GRU(64 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def DEEPSENSE( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(16 COMMA  ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  padding EQUAL  COMMA data_format EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(8 COMMA  3 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def DEEPSENSE2( PARERIGHT : EOM
inputs  EQUAL  Input(shape EQUAL ( PARERIGHT  PARERIGHT  EOM
x  EQUAL  Conv2D(16 COMMA  ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA dding EQUAL  COMMA  data_format EQUAL  COMMA  activation EQUAL  PARERIGHT ( PARERIGHT  EOM
y1  EQUAL  Conv2D(16 COMMA  ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA dding EQUAL  COMMA  data_format EQUAL  COMMA  activation EQUAL  PARERIGHT ( PARERIGHT  EOM
y2  EQUAL  Conv2D(16 COMMA  ( PARERIGHT  COMMA  padding EQUAL  COMMA  activation EQUAL  PARERIGHT ( PARERIGHT  EOM
y3  EQUAL  Conv2D(16 COMMA  ( PARERIGHT  COMMA  padding EQUAL  COMMA  activation EQUAL  PARERIGHT ( PARERIGHT  EOM
y  EQUAL  Conv2D(16 COMMA  ( PARERIGHT  COMMA  padding EQUAL  COMMA  activation EQUAL  PARERIGHT ( PARERIGHT  EOM
out  EQUAL  Multiply( PARERIGHT ( PARERIGHT  EOM
models  EQUAL  Model( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D(8 COMMA  3 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
dtrain  EQUAL  xgb DOT DMatrix( PARERIGHT  EOM
dtest  EQUAL  xgb DOT DMatrix( PARERIGHT  EOM
bst  EQUAL  xgb DOT XGBRegressor( PARERIGHT  EOM
bst DOT fit( PARERIGHT  EOM
pred  EQUAL  bst DOT predict( PARERIGHT  EOM
plt DOT figure(figsize EQUAL ( PARERIGHT  PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT legend( PARERIGHT  EOM
plt DOT show( PARERIGHT  EOM
clf  EQUAL  svm DOT SVR( PARERIGHT  EOM
clf DOT fit( PARERIGHT  EOM
pred  EQUAL  clf DOT predict( PARERIGHT  EOM
plt DOT figure(figsize EQUAL ( PARERIGHT  PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT legend( PARERIGHT  EOM
plt DOT show( PARERIGHT  EOM
def LSTM_RUN( PARERIGHT : EOM
nn_model  EQUAL  self DOT LSTM_model( PARERIGHT  EOM
nn_history  EQUAL  nn_model DOT fit( PARERIGHT  EOM
plt DOT figure(figsize EQUAL ( PARERIGHT  PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot(nn_model DOT predict( PARERIGHT  COMMA  label EQUAL  PARERIGHT  EOM
plt DOT legend( PARERIGHT  EOM
plt DOT show( PARERIGHT  EOM
MAE  EQUAL  mean_absolute_error(test_output COMMA  nn_model DOT predict( PARERIGHT  PARERIGHT  EOM
def GRU_RUN( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(GRU(neurons COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
pred  EQUAL  model DOT predict( PARERIGHT  EOM
plt DOT figure(figsize EQUAL ( PARERIGHT  PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT legend( PARERIGHT  EOM
plt DOT show( PARERIGHT  EOM
def DEEPSENSE_RUN( PARERIGHT : EOM
model  EQUAL  self DOT DEEPSENSE( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
pred  EQUAL  model DOT predict( PARERIGHT  EOM
plt DOT figure(figsize EQUAL ( PARERIGHT  PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT legend( PARERIGHT  EOM
plt DOT show( PARERIGHT  EOM
MAE  EQUAL  mean_absolute_error( PARERIGHT  EOM
def DEEPSENSE2_RUN( PARERIGHT : EOM
model  EQUAL  self DOT DEEPSENSE2( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
pred  EQUAL  model DOT predict( PARERIGHT  EOM
plt DOT figure(figsize EQUAL ( PARERIGHT  PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT legend( PARERIGHT  EOM
plt DOT show( PARERIGHT  EOM
MAE  EQUAL  mean_absolute_error( PARERIGHT  EOM
def LSTM_model_stacking( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(64 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def stacking_pre( PARERIGHT : EOM
epochs  EQUAL  500 EOM
lstm  EQUAL  self DOT LSTM_model_stacking( PARERIGHT  EOM
cnn_lstm  EQUAL  self DOT DEEPSENSE( PARERIGHT  EOM
cnn_am_lstm  EQUAL  self DOT DEEPSENSE2( PARERIGHT  EOM
lstm DOT fit( PARERIGHT  EOM
cnn_lstm DOT fit( PARERIGHT  EOM
cnn_am_lstm DOT fit( PARERIGHT  EOM
lstm DOT save_weights( PARERIGHT  EOM
cnn_lstm DOT save_weights( PARERIGHT  EOM
cnn_am_lstm DOT save_weights( PARERIGHT  EOM
lstm_model  EQUAL  self DOT LSTM_model( PARERIGHT  EOM
cnn_lstm_model  EQUAL  self DOT DEEPSENSE( PARERIGHT  EOM
cnn_am_lstm_model  EQUAL  self DOT DEEPSENSE2( PARERIGHT  EOM
lstm_model DOT load_weights( PARERIGHT  EOM
cnn_lstm_model DOT load_weights( PARERIGHT  EOM
cnn_am_lstm_model DOT load_weights( PARERIGHT  EOM
models  EQUAL  [] EOM
return models EOM
def stacking( PARERIGHT : EOM
outputs  EQUAL  [] for model in models] EOM
y  EQUAL  np DOT mean( PARERIGHT [] EOM
model  EQUAL  Model( PARERIGHT  EOM
return model EOM
import itertools EOM
import unittest EOM
import numpy as np EOM
import os COMMA  shutil EOM
import tempfile EOM
import pytest EOM
from coremltools DOT _deps import HAS_KERAS_TF EOM
from coremltools DOT models DOT utils import macos_version EOM
if HAS_KERAS_TF: EOM
import keras DOT backend EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers import Dense COMMA  Activation COMMA  Convolution2D COMMA  AtrousConvolution2D COMMA  LSTM COMMA  ZeroPadding2D COMMA  Deconvolution2D COMMA  Permute COMMA  Convolution1D COMMA  AtrousConvolution1D COMMA  MaxPooling2D COMMA  AveragePooling2D COMMA  Flatten COMMA  Dropout COMMA  UpSampling2D COMMA  merge COMMA  Merge COMMA  Input COMMA  GRU COMMA  GlobalMaxPooling2D COMMA  GlobalMaxPooling1D COMMA  GlobalAveragePooling2D COMMA  GlobalAveragePooling1D COMMA Cropping1D COMMA  Cropping2D COMMA  Reshape COMMA  AveragePooling1D COMMA  MaxPooling1D COMMA  RepeatVector COMMA  ELU COMMA SimpleRNN COMMA  BatchNormalization COMMA  Embedding COMMA  ZeroPadding1D COMMA  UpSampling1D EOM
from keras DOT layers DOT wrappers import Bidirectional COMMA  TimeDistributed EOM
from keras DOT optimizers import SGD EOM
from coremltools DOT converters import keras as kerasConverter EOM
def _keras_transpose( PARERIGHT : EOM
if len( PARERIGHT   EQUAL         x  EQUAL  np DOT transpose( PARERIGHT  EOM
return np DOT expand_dims( PARERIGHT  EOM
elif len( PARERIGHT   EQUAL  return np DOT transpose( PARERIGHT  EOM
elif len( PARERIGHT   EQUAL  return x DOT reshape(x DOT shape[] + ( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL  return x DOT reshape(( PARERIGHT  PARERIGHT  EOM
else: EOM
return x EOM
else: EOM
return x EOM
def _get_coreml_model( PARERIGHT : EOM
from coremltools DOT converters import keras as keras_converter EOM
model  EQUAL  keras_converter DOT convert( PARERIGHT  EOM
return model EOM
def _generate_data( PARERIGHT : EOM
X  EQUAL  np DOT zeros( PARERIGHT  EOM
elif mode  EQUAL  EQUAL  : EOM
X  EQUAL  np DOT ones( PARERIGHT  EOM
elif mode  EQUAL  EQUAL  : EOM
X  EQUAL  np DOT array(range(np DOT product( PARERIGHT  PARERIGHT  PARERIGHT  DOT reshape( PARERIGHT  EOM
elif mode  EQUAL  EQUAL  : EOM
X  EQUAL  np DOT random DOT rand( PARERIGHT  EOM
elif mode  EQUAL  EQUAL  : EOM
X  EQUAL  np DOT random DOT rand( PARERIGHT -0 DOT 5 EOM
return X EOM
def conv2d_bn(x COMMA  nb_filter COMMA  nb_row COMMA  nb_col COMMA  border_mode EQUAL  COMMA  subsample EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT : EOM
bn_name  EQUAL  name + EOM
conv_name  EQUAL  name + EOM
else: EOM
bn_name  EQUAL  None EOM
conv_name  EQUAL  None EOM
bn_axis  EQUAL  3 EOM
x  EQUAL  Convolution2D( PARERIGHT ( PARERIGHT  EOM
x  EQUAL  BatchNormalization( PARERIGHT ( PARERIGHT  EOM
return x EOM
from keras DOT models import Sequential COMMA  Input COMMA  Model EOM
from keras DOT layers import Dense COMMA  Flatten COMMA  Embedding COMMA  Average COMMA  Activation COMMA  Lambda COMMA  Dropout COMMA  LSTM COMMA  Bidirectional EOM
from keras DOT initializers import Constant EOM
import numpy as np EOM
import keras DOT backend as K EOM
from keras import regularizers EOM
def create_baseline_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(embedding_matrix DOT shape[] COMMA  embedding_matrix DOT shape[] COMMA mbeddings_initializer EQUAL ( PARERIGHT  COMMA  input_length EQUAL  COMMA rainable EQUAL  COMMA  mask_zero EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Lambda(lambda x: K DOT mean( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def create_rnn_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(embedding_matrix DOT shape[] COMMA  embedding_matrix DOT shape[] COMMA mbeddings_initializer EQUAL ( PARERIGHT  COMMA  input_length EQUAL  COMMA rainable EQUAL  COMMA  mask_zero EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def create_bidir_rnn_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(embedding_matrix DOT shape[] COMMA  embedding_matrix DOT shape[] COMMA mbeddings_initializer EQUAL ( PARERIGHT  COMMA  input_length EQUAL  COMMA rainable EQUAL  COMMA  mask_zero EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def create_train_emb_rnn_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelimport numpy as np EOM
from sklearn DOT preprocessing import MinMaxScaler EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from utils import transform EOM
class LstmModel( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT scaler  EQUAL  MinMaxScaler(feature_range EQUAL ( PARERIGHT  PARERIGHT  EOM
self DOT series  EQUAL  self DOT scaler DOT fit_transform(series DOT reshape( PARERIGHT  PARERIGHT  EOM
def transform_split( PARERIGHT : EOM
raise Exception( PARERIGHT  EOM
train_size  EQUAL  int(len( PARERIGHT  * train_composition PARERIGHT  EOM
train  EQUAL  self DOT series[] EOM
test  EQUAL  self DOT series[] EOM
train_x COMMA  train_y  EQUAL  transform DOT series_to_features_matrix( PARERIGHT  EOM
test_x COMMA  test_y  EQUAL  transform DOT series_to_features_matrix( PARERIGHT  EOM
train_x  EQUAL  transform DOT features_matrix_to_rnn_matrix( PARERIGHT  EOM
test_x  EQUAL  transform DOT features_matrix_to_rnn_matrix( PARERIGHT  EOM
return train_x COMMA  train_y COMMA  test_x COMMA  test_y COMMA  train_size EOM
def build_model( PARERIGHT : EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def build_model2( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def build_model3( PARERIGHT : EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def fit( PARERIGHT : EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import CuDNNLSTM EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import GRU EOM
from keras DOT layers import CuDNNGRU EOM
from keras DOT layers import Activation EOM
from keras DOT layers import Bidirectional COMMA  Flatten EOM
def create_network( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if mode  EQUAL  EQUAL  : EOM
model DOT add(LSTM(256 COMMA nput_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif mode  EQUAL  EQUAL  : EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
elif mode  EQUAL  EQUAL  : EOM
model DOT add(LSTM(256 COMMA nput_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif mode  EQUAL  EQUAL  : EOM
model DOT add(GRU(256 COMMA nput_shape EQUAL ( PARERIGHT  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(GRU( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if weights: EOM
model DOT load_weights( PARERIGHT  EOM
return modelimport utils EOM
import numpy as np EOM
import matplotlib DOT pyplot as plt EOM
import seaborn as sns EOM
DATASET_DIR  EQUAL  EOM
audioFiles  EQUAL  [] EOM
from keras DOT utils import to_categorical EOM
audioFiles  EQUAL  utils DOT findMusic( PARERIGHT  EOM
np DOT random DOT shuffle( PARERIGHT  EOM
labels  EQUAL  []  PARERIGHT  for af in audioFiles ] EOM
labels  EQUAL  np DOT array( np DOT array( PARERIGHT   EQUAL  COMMA  dtype EQUAL  PARERIGHT  EOM
labels  EQUAL  labels DOT reshape( PARERIGHT  EOM
matrixAudioData  EQUAL  utils DOT getAudioData( PARERIGHT  EOM
cantTrain  EQUAL  int( np DOT round( len( PARERIGHT  * 0 DOT 7  PARERIGHT   PARERIGHT  EOM
X_train  EQUAL  matrixAudioData[] EOM
X_test  EQUAL  matrixAudioData[] EOM
y_train  EQUAL  labels[] EOM
y_test  EQUAL  labels[] EOM
from librosa DOT display import specshow EOM
unMFCC  EQUAL  X_train[] DOT reshape( (20 COMMA  int( PARERIGHT  PARERIGHT   PARERIGHT  EOM
plt DOT figure(figsize EQUAL ( PARERIGHT  PARERIGHT  EOM
specshow( PARERIGHT  EOM
plt DOT colorbar( PARERIGHT  EOM
plt DOT title( PARERIGHT  EOM
plt DOT tight_layout( PARERIGHT  EOM
matrixAudioDataReshaped  EQUAL  matrixAudioData DOT reshape(( PARERIGHT  PARERIGHT  EOM
matrixAudioDataReshaped[] DOT shape EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT optimizers import RMSprop EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add( Dense( PARERIGHT   PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
rms  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
epochs  EQUAL  1000 EOM
batch_size  EQUAL  100 EOM
history  EQUAL  model DOT fit(X_train COMMA  y_train COMMA  epochs  EQUAL  COMMA  batch_size  EQUAL  COMMA  validation_data EQUAL ( PARERIGHT   PARERIGHT  EOM
plt DOT title( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT legend( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Input EOM
matrixAudioDataReshaped  EQUAL  matrixAudioData DOT reshape(( PARERIGHT  PARERIGHT  EOM
cantTrain  EQUAL  int( np DOT round( len( PARERIGHT  * 0 DOT 7  PARERIGHT   PARERIGHT  EOM
X_train_RNN  EQUAL  matrixAudioDataReshaped[] EOM
X_test_RNN  EQUAL  matrixAudioDataReshaped[] EOM
y_train_RNN  EQUAL  to_categorical( PARERIGHT  EOM
y_test_RNN  EQUAL  to_categorical( PARERIGHT  EOM
modelLSTM  EQUAL  Sequential( PARERIGHT  EOM
modelLSTM DOT add( LSTM(500 COMMA  input_shape  EQUAL ( PARERIGHT  COMMA  dropout EQUAL  COMMA  recurrent_dropout EQUAL  COMMA  return_sequences EQUAL  PARERIGHT   PARERIGHT  EOM
modelLSTM DOT add( LSTM( PARERIGHT   PARERIGHT  EOM
modelLSTM DOT add(Dense( PARERIGHT  PARERIGHT  EOM
modelLSTM DOT add(Activation( PARERIGHT  PARERIGHT  EOM
modelLSTM DOT compile( PARERIGHT  EOM
modelLSTM DOT summary( PARERIGHT  EOM
batch_size  EQUAL  100 EOM
modelLSTM DOT fit(X_train_RNN COMMA  y_train_RNN COMMA  epochs  EQUAL  COMMA  batch_size  EQUAL  COMMA  alidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
plt DOT title( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT legend( PARERIGHT  EOM
scores  EQUAL  modelLSTM DOT evaluate( PARERIGHT  EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten EOM
from keras DOT layers import Conv2D COMMA  MaxPooling2D EOM
matrixAudioDataConv2D  EQUAL  matrixAudioData DOT reshape(( PARERIGHT  PARERIGHT  EOM
X_train_Conv2D  EQUAL  matrixAudioDataConv2D[] EOM
X_test_Conv2D  EQUAL  matrixAudioDataConv2D[] EOM
y_train_Conv2D  EQUAL  to_categorical( PARERIGHT  EOM
y_test_Conv2D  EQUAL  to_categorical( PARERIGHT  EOM
modelConv2D  EQUAL  Sequential( PARERIGHT  EOM
modelConv2D DOT add( Conv2D(32 COMMA  ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT   PARERIGHT   PARERIGHT  EOM
modelConv2D DOT add( Activation( PARERIGHT   PARERIGHT  EOM
modelConv2D DOT add(Conv2D(32 COMMA  ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
modelConv2D DOT add(Activation( PARERIGHT  PARERIGHT  EOM
modelConv2D DOT add(MaxPooling2D(pool_size EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
modelConv2D DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
modelConv2D DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
modelConv2D DOT add(Dense( PARERIGHT  PARERIGHT  EOM
modelConv2D DOT add(Activation( PARERIGHT  PARERIGHT  EOM
modelConv2D DOT compile( PARERIGHT  EOM
epochs  EQUAL  200 EOM
batch_size  EQUAL  128 EOM
history  EQUAL  modelConv2D DOT fit(X_train_Conv2D COMMA  y_train_Conv2D COMMA  epochs  EQUAL  COMMA  batch_size  EQUAL  COMMA  alidation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
plt DOT title( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT legend( PARERIGHT  EOM
scores  EQUAL  modelConv2D DOT evaluate( PARERIGHT  EOM
global_model_version  EQUAL  45 EOM
global_batch_size  EQUAL  16 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_2  EQUAL  Sequential( PARERIGHT  EOM
branch_2 DOT add( PARERIGHT  EOM
branch_2 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_6  EQUAL  Sequential( PARERIGHT  EOM
branch_6 DOT add( PARERIGHT  EOM
branch_6 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
def build_improved_model( PARERIGHT : EOM
model DOT add(LSTM(nput_shape EQUAL ( PARERIGHT  COMMA units EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def build_basic_model( PARERIGHT : EOM
model DOT add(LSTM(nput_shape EQUAL ( PARERIGHT  COMMA units EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return modelfrom keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
X_train COMMA  y_train COMMA  X_test COMMA  y_test  EQUAL  lstm DOT load_data( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
start  EQUAL  time DOT time( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
predictions  EQUAL  lstm DOT predict_sequences_multiple( PARERIGHT  EOM
lstm DOT plot_results_multiple( PARERIGHT import tensorflow as tf EOM
import pandas as pd EOM
import numpy as np EOM
import matplotlib EOM
matplotlib DOT use( PARERIGHT  EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  LSTM COMMA  Embedding COMMA  Activation COMMA  Lambda COMMA  Bidirectional EOM
from keras DOT engine import Input COMMA  Model COMMA  InputSpec EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Conv1D EOM
from keras DOT models import Model COMMA  Sequential EOM
from keras DOT utils import to_categorical EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers import Concatenate COMMA  LeakyReLU COMMA  concatenate COMMA  MaxPool1D COMMA GlobalMaxPool1D COMMA add EOM
from keras DOT layers import Dense COMMA  Embedding COMMA  Input COMMA  Masking COMMA  Dropout COMMA  MaxPooling1D COMMA Lambda COMMA  BatchNormalization EOM
from keras DOT layers import LSTM COMMA  TimeDistributed COMMA  AveragePooling1D COMMA  Flatten COMMA Activation COMMA ZeroPadding1D COMMA  UpSampling1D EOM
from keras DOT optimizers import Adam COMMA  rmsprop EOM
from keras DOT callbacks import ReduceLROnPlateau COMMA  EarlyStopping COMMA ModelCheckpoint COMMA  CSVLogger EOM
from keras DOT layers import Conv1D COMMA  GlobalMaxPooling1D COMMA  ConvLSTM2D COMMA  Bidirectional COMMA RepeatVector EOM
from keras import regularizers EOM
from keras DOT utils import plot_model COMMA  to_categorical EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from keras DOT utils import plot_model EOM
from keras DOT utils DOT data_utils import get_file EOM
from keras DOT models import Sequential EOM
from keras DOT optimizers import Adam EOM
from keras DOT callbacks import ModelCheckpoint EOM
from sklearn DOT utils import class_weight EOM
from keras import backend as K EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import model_from_json EOM
import os EOM
import pydot EOM
import graphviz EOM
RNN_HIDDEN_DIM  EQUAL  62 EOM
checkpoint_dir  EQUAL  EOM
os DOT path DOT exists( PARERIGHT  EOM
input_file  EQUAL  EOM
input_file  EQUAL  EOM
def letter_to_index( PARERIGHT : EOM
_alphabet  EQUAL  EOM
return next((i for i COMMA  _letter in enumerate( PARERIGHT  if _letter  EQUAL  PARERIGHT  COMMA  None PARERIGHT  EOM
def load_data( PARERIGHT : EOM
df  EQUAL  pd DOT read_csv( PARERIGHT  EOM
df DOT columns  EQUAL  [] EOM
df[]  EQUAL  df[] DOT apply(lambda x: [] PARERIGHT  EOM
df  EQUAL  df DOT reindex(np DOT random DOT permutation( PARERIGHT  PARERIGHT  EOM
train_size  EQUAL  int(len( PARERIGHT  * ( PARERIGHT  PARERIGHT  EOM
X_train  EQUAL  df[] DOT values[] EOM
y_train  EQUAL  np DOT array( PARERIGHT  EOM
X_test  EQUAL  np DOT array( PARERIGHT  EOM
y_test  EQUAL  np DOT array( PARERIGHT  EOM
return pad_sequences( PARERIGHT  COMMA  y_train COMMA  pad_sequences( PARERIGHT  COMMA  y_test EOM
def create_lstm_rna_seq( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def create_plots( PARERIGHT : EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT title( PARERIGHT  EOM
plt DOT ylabel( PARERIGHT  EOM
plt DOT xlabel( PARERIGHT  EOM
plt DOT legend( PARERIGHT  EOM
plt DOT savefig( PARERIGHT  EOM
plt DOT clf( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
X_train COMMA  y_train COMMA  X_test COMMA  y_test  EQUAL  load_data( PARERIGHT  EOM
model  EQUAL  create_lstm_rna_seq(len( PARERIGHT  PARERIGHT  EOM
filepath EQUAL  checkpoint_dir + EOM
checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
callbacks_list  EQUAL  [] EOM
class_weight  EQUAL  class_weight DOT compute_class_weight( COMMA  np DOT unique( PARERIGHT  COMMA  y_train PARERIGHT  EOM
history  EQUAL  model DOT fit( PARERIGHT  EOM
model_json  EQUAL  model DOT to_json( PARERIGHT  EOM
with open( PARERIGHT  as json_file: EOM
json_file DOT write( PARERIGHT  EOM
model DOT save_weights( PARERIGHT  EOM
create_plots( PARERIGHT  EOM
plot_model( PARERIGHT  EOM
score COMMA  acc  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout EOM
from keras DOT layers import LSTM COMMA  SimpleRNN COMMA  RNN EOM
import numpy as np EOM
import pickle EOM
import load_sherlock as sh EOM
import read_write_helpers as rw EOM
import midi_to_data as md EOM
from custom_rnns import MinimalLSTMCell COMMA  MinimalRNNCell EOM
[]  EQUAL  sh DOT load( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(RNN(MinimalRNNCell( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
history  EQUAL  model DOT fit(X COMMA y COMMA  epochs EQUAL  COMMA  batch_size EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
rw DOT save( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(RNN(MinimalLSTMCell( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
history  EQUAL  model DOT fit(X COMMA y COMMA  epochs EQUAL  COMMA  batch_size EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
rw DOT save( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(SimpleRNN(256 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
history  EQUAL  model DOT fit(X COMMA y COMMA  epochs EQUAL  COMMA  batch_size EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
rw DOT save( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(256 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
history  EQUAL  model DOT fit(X COMMA y COMMA  epochs EQUAL  COMMA  batch_size EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
rw DOT save( PARERIGHT  EOM
[]  EQUAL  md DOT load_midi_prediction( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(RNN(MinimalRNNCell( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
history  EQUAL  model DOT fit(X COMMA y COMMA  epochs EQUAL  COMMA  batch_size EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
rw DOT save( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(RNN(MinimalLSTMCell( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
history  EQUAL  model DOT fit(X COMMA y COMMA  epochs EQUAL  COMMA  batch_size EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
rw DOT save( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(SimpleRNN(256 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
history  EQUAL  model DOT fit(X COMMA y COMMA  epochs EQUAL  COMMA  batch_size EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
rw DOT save( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(256 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
history  EQUAL  model DOT fit(X COMMA y COMMA  epochs EQUAL  COMMA  batch_size EQUAL  COMMA  validation_data EQUAL ( PARERIGHT  PARERIGHT  EOM
rw DOT save( PARERIGHT from keras DOT layers DOT convolutional import Conv2DTranspose  COMMA  Conv1D COMMA  Conv2D COMMA Convolution3D COMMA  MaxPooling2D COMMA UpSampling1D COMMA UpSampling2D COMMA UpSampling3D EOM
from keras DOT layers import Input COMMA Embedding COMMA  Dense COMMA  Dropout COMMA  Activation COMMA  Flatten COMMA Reshape COMMA  Flatten COMMA  Lambda EOM
from keras DOT layers DOT noise import GaussianDropout COMMA  GaussianNoise EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras import initializers EOM
from keras import regularizers EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers DOT advanced_activations import LeakyReLU EOM
import numpy as np EOM
import pandas as pd EOM
import os EOM
def create_LSTM( PARERIGHT : EOM
embedding_vecor_length  EQUAL  32 EOM
model1  EQUAL  Sequential( PARERIGHT  EOM
model1 DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model1 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model2  EQUAL  Sequential( PARERIGHT  EOM
model2 DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model3  EQUAL  Sequential( PARERIGHT  EOM
model3 DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model4  EQUAL  Model(inputs EQUAL (shape EQUAL ( PARERIGHT  PARERIGHT  COMMA  outputs EQUAL  PARERIGHT  EOM
education  EQUAL  [] EOM
for i in range(len( PARERIGHT  PARERIGHT : EOM
JD  EQUAL  JD_ls[] EOM
education DOT append( PARERIGHT  EOM
edu_types  EQUAL  list(set(sum( PARERIGHT  PARERIGHT  PARERIGHT  EOM
to_categorical( PARERIGHT  EOM
import pandas as pd EOM
s  EQUAL  pd DOT Series( PARERIGHT  EOM
pd DOT get_dummies( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
if __name__  EQUAL  EQUAL  : EOM
model_id  EQUAL  EOM
model  EQUAL  create_LSTM( PARERIGHT  EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout EOM
from keras DOT layers DOT recurrent import SimpleRNN COMMA  LSTM COMMA  GRU EOM
import keras EOM
import pandas as pd EOM
from keras DOT models import load_model EOM
from shutil import copyfile EOM
from datetime import datetime EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Model EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense EOM
if len( PARERIGHT  EQUAL ( PARERIGHT  EOM
out_neurons  EQUAL  1 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
for i COMMA  dimx in enumerate( PARERIGHT : EOM
if i EQUAL  EQUAL 0: EOM
else: EOM
model DOT add(LSTM(dimx COMMA  return_sequences EQUAL ( PARERIGHT ! EQUAL ( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
if len( PARERIGHT  EQUAL ( PARERIGHT  EOM
out_neurons  EQUAL  1 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
for i COMMA  dimx in enumerate( PARERIGHT : EOM
if i EQUAL  EQUAL 0: EOM
else: EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
if len( PARERIGHT  EQUAL ( PARERIGHT  EOM
out_neurons  EQUAL  1 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
for i COMMA  dimx in enumerate( PARERIGHT : EOM
if i EQUAL  EQUAL 0: EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
return model EOM
from keras DOT utils import np_utils EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers DOT recurrent import LSTM EOM
def get_simple_net( PARERIGHT : EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def get_dropout_net( PARERIGHT : EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
import numpy as np EOM
from keras DOT callbacks import EarlyStopping EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import LSTM EOM
from keras DOT models import Sequential EOM
from keras DOT models import load_model EOM
from LSTM_for_Stock DOT unit import get_param_default_value as def_val EOM
import os EOM
from keras DOT backend import clear_session EOM
from keras DOT layers import CuDNNLSTM EOM
class Model( PARERIGHT : EOM
pass EOM
class SequentialModel( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT __model  EQUAL  Sequential( PARERIGHT  EOM
self DOT __history  EQUAL  None EOM
def model( PARERIGHT : EOM
return self DOT __model EOM
def history( PARERIGHT : EOM
return self DOT __history EOM
def build_model( PARERIGHT : EOM
t  EQUAL  layer DOT pop( PARERIGHT  EOM
if t  EQUAL  EQUAL  : EOM
self DOT __model DOT add(Dense DOT from_config( PARERIGHT  PARERIGHT  EOM
elif t  EQUAL  EQUAL  : EOM
self DOT __model DOT add(LSTM DOT from_config( PARERIGHT  PARERIGHT  EOM
elif t  EQUAL  EQUAL  : EOM
self DOT __model DOT add(Dropout DOT from_config( PARERIGHT  PARERIGHT  EOM
elif t  EQUAL  EQUAL  : EOM
self DOT __model DOT add(CuDNNLSTM DOT from_config( PARERIGHT  PARERIGHT  EOM
self DOT __model DOT compile( PARERIGHT  EOM
def train(self COMMA X COMMA Y COMMA train EQUAL  COMMA callbacks EQUAL [] PARERIGHT : EOM
batch_size  EQUAL  train DOT pop( COMMA ef_val( PARERIGHT  PARERIGHT  EOM
verbose  EQUAL  train DOT pop( COMMA  def_val( PARERIGHT  PARERIGHT  EOM
validation_split  EQUAL  train DOT pop(alidation_splitvalidation_split EOM
validation_data  EQUAL  train DOT pop(alidation_datavalidation_data EOM
shuffle  EQUAL  train DOT pop( COMMA  def_val( PARERIGHT  PARERIGHT  EOM
class_weight  EQUAL  train DOT pop( COMMA ef_val( PARERIGHT  PARERIGHT  EOM
sample_weight  EQUAL  train DOT pop( COMMA ef_val( PARERIGHT  PARERIGHT  EOM
initial_epoch  EQUAL  train DOT pop( COMMA ef_val( PARERIGHT  PARERIGHT  EOM
steps_per_epoch  EQUAL  train DOT pop(teps_per_epochsteps_per_epoch EOM
validation_steps  EQUAL  train DOT pop(alidation_stepsvalidation_steps EOM
self DOT __history  EQUAL  self DOT __model DOT fit( PARERIGHT  EOM
return self DOT __history EOM
def predict( PARERIGHT : EOM
batch_size  EQUAL  predict DOT pop( COMMA ef_val( PARERIGHT  PARERIGHT  EOM
verbose  EQUAL  predict DOT pop( COMMA ef_val( PARERIGHT  PARERIGHT  EOM
return self DOT __model DOT predict( PARERIGHT  EOM
def evaluate( PARERIGHT : EOM
sample_weight  EQUAL  evaluate DOT pop(ample_weightsample_weight EOM
batch_size  EQUAL  evaluate DOT pop( COMMA ef_val( PARERIGHT  PARERIGHT  EOM
verbose  EQUAL  evaluate DOT pop( COMMA ef_val( PARERIGHT  PARERIGHT  EOM
return self DOT __model DOT evaluate( PARERIGHT  EOM
def save( PARERIGHT : EOM
os DOT makedirs(os DOT path DOT dirname( PARERIGHT  COMMA  exist_ok EQUAL  PARERIGHT  EOM
self DOT model DOT save( PARERIGHT  EOM
def load( PARERIGHT : EOM
if clear: EOM
clear_session( PARERIGHT  EOM
self DOT __model  EQUAL  load_model( PARERIGHT from keras DOT models import Sequential EOM
from keras DOT layers import Embedding COMMA  Conv1D COMMA  Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT core import Flatten EOM
def get_simple_cnn( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding(input_dim EQUAL  COMMA output_dim EQUAL  COMMA embeddings_initializer EQUAL  COMMA trainable EQUAL  COMMA put_shape  EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def get_RNN( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
from keras DOT engine import Input EOM
from keras import backend as K EOM
from keras DOT layers import Concatenate EOM
from keras DOT models import Model EOM
def mix_cnn_rnn( PARERIGHT : EOM
input_text  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  PARERIGHT  EOM
embedding_vec  EQUAL  Embedding( PARERIGHT ( PARERIGHT  EOM
cnn_config EQUAL [] EOM
data_aug  EQUAL  [] EOM
for i COMMA  c_conf in enumerate( PARERIGHT : EOM
data_aug DOT append(Conv1D(kernel_size  EQUAL [] COMMA lters  EQUAL [] COMMA dding  EQUAL [] COMMA name EQUAL ( PARERIGHT  PARERIGHT ( PARERIGHT  PARERIGHT  EOM
concat_data  EQUAL  Concatenate( PARERIGHT ( PARERIGHT  EOM
rnn_result  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
rnn_result  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
logist  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelimport numpy as np EOM
from sklearn DOT manifold import TSNE EOM
import matplotlib DOT pyplot as plt EOM
import tensorflow as tf EOM
import os EOM
os DOT environ[] EQUAL  EOM
from tensorflow DOT keras DOT layers import Embedding EOM
from tensorflow DOT keras DOT layers import Dense COMMA  Input COMMA  Flatten EOM
from tensorflow DOT keras DOT layers import Conv1D COMMA  MaxPooling1D COMMA  Embedding COMMA  Dropout COMMA  LSTM COMMA  GRU COMMA  Bidirectional EOM
from tensorflow DOT keras DOT models import Model COMMA Sequential EOM
from tensorflow DOT keras import backend as K EOM
from tensorflow DOT keras DOT layers import Layer EOM
from tensorflow DOT keras import initializers COMMA  optimizers EOM
def lstm_keras( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def blstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
class AttLayer( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
super( PARERIGHT  DOT __init__( PARERIGHT  EOM
def build( PARERIGHT : EOM
self DOT W  EQUAL  self DOT add_weight(name EQUAL  COMMA  shape EQUAL ( PARERIGHT  COMMA initializer EQUAL  COMMA trainable EQUAL  PARERIGHT  EOM
def call( PARERIGHT : EOM
eij  EQUAL  K DOT tanh(K DOT dot( PARERIGHT  PARERIGHT  EOM
ai  EQUAL  K DOT exp( PARERIGHT  EOM
weights  EQUAL  ai/K DOT sum( PARERIGHT  DOT dimshuffle( PARERIGHT  EOM
weighted_input  EQUAL  x*weights DOT dimshuffle( PARERIGHT  EOM
return weighted_input DOT sum( PARERIGHT  EOM
def compute_output_shape( PARERIGHT : EOM
return ( PARERIGHT  EOM
def blstm_atten( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(AttLayer( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
adam  EQUAL  optimizers DOT Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def get_model( PARERIGHT : EOM
if m_type  EQUAL  EQUAL  : EOM
model  EQUAL  lstm_keras( PARERIGHT  EOM
elif m_type  EQUAL  EQUAL  : EOM
model  EQUAL  blstm( PARERIGHT  EOM
elif m_type  EQUAL  EQUAL  : EOM
model  EQUAL  blstm_atten( PARERIGHT  EOM
else: EOM
return None EOM
return modelfrom __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
from __future__ import unicode_literals EOM
import logging EOM
from rasa_core DOT policies DOT keras_policy import KerasPolicy EOM
logger  EQUAL  logging DOT getLogger( PARERIGHT  EOM
class RestaurantPolicy( PARERIGHT : EOM
def model_architecture( PARERIGHT : EOM
from keras DOT layers import LSTM COMMA  Activation COMMA  Masking COMMA  Dense EOM
from keras DOT models import Sequential EOM
from keras DOT models import Sequential EOM
from keras DOT layers import \ EOM
Masking COMMA  LSTM COMMA  Dense COMMA  TimeDistributed COMMA  Activation EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if len( PARERIGHT   EQUAL             model DOT add(Masking( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
elif len( PARERIGHT   EQUAL             model DOT add(Masking(mask_value EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
raise ValueError(th of output_shape  EQUAL (len( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
logger DOT debug(model DOT summary( PARERIGHT  PARERIGHT  EOM
return modelimport keras EOM
import numpy as np EOM
from keras DOT datasets import imdb EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential COMMA  load_model EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import Dropout EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
np DOT random DOT seed( PARERIGHT  EOM
( PARERIGHT  COMMA  ( PARERIGHT   EQUAL ( PARERIGHT  EOM
X_train  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
TOP_WORDS  EQUAL  EOM
EVL  EQUAL  32 EOM
MAX_WORDS  EQUAL  500 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit(X_train COMMA  y_train COMMA  validation_data EQUAL ( PARERIGHT  COMMA  epochs EQUAL  COMMA  batch_size EQUAL  PARERIGHT  EOM
model DOT save( PARERIGHT  EOM
scores  EQUAL  model DOT evaluate( PARERIGHT  EOM
global_model_version  EQUAL  67 EOM
global_batch_size  EQUAL  128 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  keras DOT optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
import pandas as pd EOM
import numpy as np EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Activation COMMA  Dense COMMA  Embedding COMMA  SimpleRNN COMMA  LSTM COMMA  Dropout EOM
from keras import backend as K EOM
from keras DOT callbacks import ReduceLROnPlateau COMMA  EarlyStopping COMMA  ModelCheckpoint EOM
from keras DOT callbacks import TensorBoard EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
imdb_df  EQUAL  pd DOT read_csv( PARERIGHT  EOM
pd DOT set_option( PARERIGHT  EOM
num_words  EQUAL  10000 EOM
tokenizer  EQUAL  Tokenizer( PARERIGHT  EOM
tokenizer DOT fit_on_texts( PARERIGHT  EOM
sequences  EQUAL  tokenizer DOT texts_to_sequences( PARERIGHT  EOM
y  EQUAL  np DOT array( PARERIGHT  EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
max_review_length  EQUAL  552 EOM
pad  EQUAL  EOM
X  EQUAL  pad_sequences( PARERIGHT  EOM
from sklearn DOT model_selection import train_test_split EOM
X_train COMMA  X_test COMMA  y_train COMMA  y_test  EQUAL  train_test_split( PARERIGHT  EOM
input_shape  EQUAL  X_train DOT shape EOM
K DOT clear_session( PARERIGHT  EOM
LSTM_model  EQUAL  Sequential( PARERIGHT  EOM
LSTM_model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
LSTM_model DOT summary( PARERIGHT  EOM
LSTM_model DOT compile( PARERIGHT  EOM
LSTM_history  EQUAL  LSTM_model DOT fit(X_train COMMA y_train COMMA epochs EQUAL  COMMA batch_size EQUAL  COMMA validation_split EQUAL import pytest EOM
import os EOM
import sys EOM
import numpy as np EOM
from keras import Input COMMA  Model EOM
from keras DOT layers import Conv2D COMMA  Bidirectional EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers import TimeDistributed EOM
from keras DOT models import Sequential EOM
from keras DOT utils import vis_utils EOM
def test_plot_model( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Conv2D(2 COMMA  kernel_size EQUAL ( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(16 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  COMMA  name EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(TimeDistributed(Dense( PARERIGHT  PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
inner_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_lstm  EQUAL  Bidirectional(LSTM( PARERIGHT  COMMA  name EQUAL  PARERIGHT ( PARERIGHT  EOM
encoder  EQUAL  Model( PARERIGHT  EOM
outer_input  EQUAL  Input(shape EQUAL ( PARERIGHT  COMMA  dtype EQUAL  COMMA  name EQUAL  PARERIGHT  EOM
inner_encoder  EQUAL  TimeDistributed( PARERIGHT ( PARERIGHT  EOM
lstm  EQUAL  LSTM( PARERIGHT ( PARERIGHT  EOM
preds  EQUAL  Dense( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  Model( PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
def test_plot_sequential_embedding( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
vis_utils DOT plot_model( PARERIGHT  EOM
os DOT remove( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
pytest DOT main( PARERIGHT from __future__ import absolute_import EOM
from __future__ import division EOM
from __future__ import print_function EOM
from absl DOT testing import parameterized EOM
import numpy as np EOM
from tensorflow DOT python import keras EOM
from tensorflow DOT python DOT eager import context EOM
from tensorflow DOT python DOT framework import test_util EOM
from tensorflow DOT python DOT keras import keras_parameterized EOM
from tensorflow DOT python DOT keras import testing_utils EOM
from tensorflow DOT python DOT platform import test EOM
from tensorflow DOT python DOT training import adam EOM
from tensorflow DOT python DOT training import gradient_descent EOM
from tensorflow DOT python DOT training DOT rmsprop import RMSPropOptimizer EOM
class LSTMLayerTest( PARERIGHT : EOM
def test_return_sequences_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA return_sequences EOM
def test_static_shape_inference_LSTM( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
inputs  EQUAL  keras DOT layers DOT Dense(embedding_dim COMMA nput_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
outputs  EQUAL  model DOT layers[] DOT output EOM
self DOT assertEqual(outputs DOT get_shape( PARERIGHT  DOT as_list( PARERIGHT  COMMA  [] PARERIGHT  EOM
def test_dynamic_behavior_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
layer  EQUAL  keras DOT layers DOT LSTM(units COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile(RMSPropOptimizer( PARERIGHT  COMMA   COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
x  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
y  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_dropout_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA dropout: 0 DOT 1} COMMA put_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
def test_implementation_mode_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
testing_utils DOT layer_test(keras DOT layers DOT LSTM COMMA wargs EQUAL  COMMA implementation EOM
def test_constraints_LSTM( PARERIGHT : EOM
embedding_dim  EQUAL  4 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
k_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
r_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
b_constraint  EQUAL  keras DOT constraints DOT max_norm( PARERIGHT  EOM
layer  EQUAL  layer_class(5 COMMA return_sequences EQUAL  COMMA weights EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA kernel_constraint EQUAL  COMMA recurrent_constraint EQUAL  COMMA bias_constraint EQUAL  PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
self DOT assertEqual( PARERIGHT  EOM
def test_with_masking_layer_LSTM( PARERIGHT : EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT abs(np DOT random DOT random(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
targets / EQUAL  targets DOT sum( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Masking(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(layer_class( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
def test_masking_with_stacking_LSTM( PARERIGHT : EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT abs(np DOT random DOT random(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
targets / EQUAL  targets DOT sum( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Masking(input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
lstm_cells  EQUAL  [] EOM
model DOT add(keras DOT layers DOT RNN( PARERIGHT  PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
def test_from_config_LSTM( PARERIGHT : EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
for stateful in ( PARERIGHT : EOM
l1  EQUAL  layer_class( PARERIGHT  EOM
l2  EQUAL  layer_class DOT from_config(l1 DOT get_config( PARERIGHT  PARERIGHT  EOM
assert l1 DOT get_config( PARERIGHT   EQUAL ( PARERIGHT  EOM
def test_specify_initial_state_keras_tensor( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
if len( PARERIGHT   EQUAL       output  EQUAL  layer( PARERIGHT  EOM
else: EOM
output  EQUAL  layer( PARERIGHT  EOM
assert initial_state[] in layer DOT _inbound_nodes[] DOT input_tensors EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_specify_initial_state_non_keras_tensor( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
output  EQUAL  layer( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_reset_states_with_values( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
assert len( PARERIGHT   EQUAL  assert layer DOT states[] is not None EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA np DOT zeros(keras DOT backend DOT int_shape( PARERIGHT  PARERIGHT  COMMA atol EQUAL  PARERIGHT  EOM
state_shapes  EQUAL  [] EOM
values  EQUAL  [] EOM
if len( PARERIGHT   EQUAL  : EOM
values  EQUAL  values[] EOM
layer DOT reset_states( PARERIGHT  EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA np DOT ones(keras DOT backend DOT int_shape( PARERIGHT  PARERIGHT  COMMA atol EQUAL  PARERIGHT  EOM
with self DOT assertRaises( PARERIGHT : EOM
layer DOT reset_states([] * (len( PARERIGHT  + 1 PARERIGHT  PARERIGHT  EOM
def test_specify_state_with_masking( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
_  EQUAL  keras DOT layers DOT Masking( PARERIGHT ( PARERIGHT  EOM
initial_state  EQUAL  [] EOM
output  EQUAL  keras DOT layers DOT LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_return_state( PARERIGHT : EOM
num_states  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(batch_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
outputs  EQUAL  layer( PARERIGHT  EOM
state  EQUAL  outputs[] EOM
assert len( PARERIGHT   EQUAL  model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
state  EQUAL  model DOT predict( PARERIGHT  EOM
self DOT assertAllClose(keras DOT backend DOT eval( PARERIGHT  COMMA  state COMMA  atol EQUAL  PARERIGHT  EOM
def test_state_reuse( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
inputs  EQUAL  keras DOT Input(batch_shape EQUAL ( PARERIGHT  PARERIGHT  EOM
layer  EQUAL  keras DOT layers DOT LSTM( PARERIGHT  EOM
outputs  EQUAL  layer( PARERIGHT  EOM
output COMMA  state  EQUAL  outputs[] COMMA  outputs[] EOM
output  EQUAL  keras DOT layers DOT LSTM( PARERIGHT ( PARERIGHT  EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
outputs  EQUAL  model DOT predict( PARERIGHT  EOM
def test_initial_states_as_other_inputs( PARERIGHT : EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  3 EOM
num_samples  EQUAL  2 EOM
num_states  EQUAL  2 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
main_inputs  EQUAL  keras DOT Input(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [] EOM
inputs  EQUAL  [] + initial_state EOM
layer  EQUAL  layer_class( PARERIGHT  EOM
output  EQUAL  layer( PARERIGHT  EOM
assert initial_state[] in layer DOT _inbound_nodes[] DOT input_tensors EOM
model  EQUAL  keras DOT models DOT Model( PARERIGHT  EOM
model DOT compile(loss EQUAL  COMMA optimizer EQUAL ( PARERIGHT  COMMA run_eagerly EQUAL ( PARERIGHT  PARERIGHT  EOM
main_inputs  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
initial_state  EQUAL  [np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
for _ in range( PARERIGHT ] EOM
targets  EQUAL  np DOT random DOT random(( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch( PARERIGHT  EOM
def test_regularizers_LSTM( PARERIGHT : EOM
embedding_dim  EQUAL  4 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
layer  EQUAL  layer_class(5 COMMA return_sequences EQUAL  COMMA weights EQUAL  COMMA nput_shape EQUAL ( PARERIGHT  COMMA kernel_regularizer EQUAL ( PARERIGHT  COMMA recurrent_regularizer EQUAL ( PARERIGHT  COMMA bias_regularizer EQUAL  COMMA activity_regularizer EQUAL  PARERIGHT  EOM
layer DOT build(( PARERIGHT  PARERIGHT  EOM
self DOT assertEqual(len( PARERIGHT  COMMA  3 PARERIGHT  EOM
x  EQUAL  keras DOT backend DOT variable(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
layer( PARERIGHT  EOM
if context DOT executing_eagerly( PARERIGHT : EOM
self DOT assertEqual(len( PARERIGHT  COMMA  4 PARERIGHT  EOM
else: EOM
self DOT assertEqual(len(layer DOT get_losses_for( PARERIGHT  PARERIGHT  COMMA  1 PARERIGHT  EOM
class LSTMLayerV1OnlyTest( PARERIGHT : EOM
def test_statefulness_LSTM( PARERIGHT : EOM
num_samples  EQUAL  2 EOM
timesteps  EQUAL  3 EOM
embedding_dim  EQUAL  4 EOM
units  EQUAL  2 EOM
layer_class  EQUAL  keras DOT layers DOT LSTM EOM
model  EQUAL  keras DOT models DOT Sequential( PARERIGHT  EOM
model DOT add(keras DOT layers DOT Embedding(4 COMMA embedding_dim COMMA mask_zero EQUAL  COMMA input_length EQUAL  COMMA atch_input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
layer  EQUAL  layer_class( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT compile(optimizer EQUAL ( PARERIGHT  COMMA loss EQUAL  PARERIGHT  EOM
out1  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertEqual(out1 DOT shape COMMA  ( PARERIGHT  PARERIGHT  EOM
model DOT train_on_batch(ones(( PARERIGHT  PARERIGHT  COMMA  np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
out2  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out1 DOT max( PARERIGHT  COMMA  out2 DOT max( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
out3  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out2 DOT max( PARERIGHT  COMMA  out3 DOT max( PARERIGHT  PARERIGHT  EOM
model DOT reset_states( PARERIGHT  EOM
out4  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertAllClose( PARERIGHT  EOM
out5  EQUAL  model DOT predict(np DOT ones(( PARERIGHT  PARERIGHT  PARERIGHT  EOM
self DOT assertNotEqual(out4 DOT max( PARERIGHT  COMMA  out5 DOT max( PARERIGHT  PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
left_padded_input  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
left_padded_input[]  EQUAL  0 EOM
left_padded_input[]  EQUAL  0 EOM
out6  EQUAL  model DOT predict( PARERIGHT  EOM
layer DOT reset_states( PARERIGHT  EOM
right_padded_input  EQUAL  np DOT ones(( PARERIGHT  PARERIGHT  EOM
right_padded_input[]  EQUAL  0 EOM
right_padded_input[]  EQUAL  0 EOM
out7  EQUAL  model DOT predict( PARERIGHT  EOM
self DOT assertAllClose( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
test DOT main( PARERIGHT import numpy as np EOM
from readData import * EOM
import keras COMMA os EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Flatten COMMA Input COMMA LSTM COMMA Convolution1D COMMA MaxPooling1D COMMA Merge EOM
from keras DOT layers import Conv2D COMMA  MaxPooling2D EOM
from keras DOT optimizers import SGD EOM
from keras DOT models import Model EOM
from keras DOT utils DOT np_utils import to_categorical EOM
def LSTMModel( PARERIGHT : EOM
QA_EMBED_SIZE  EQUAL  64 EOM
BATCH_SIZE  EQUAL  32 EOM
NBR_EPOCHS  EQUAL  20 EOM
qenc  EQUAL  Sequential( PARERIGHT  EOM
qenc DOT add(LSTM(QA_EMBED_SIZE COMMA  return_sequences EQUAL  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
qenc DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
qenc DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
qenc DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
qenc DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
qenc DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
aenc  EQUAL  Sequential( PARERIGHT  EOM
aenc DOT add(LSTM(QA_EMBED_SIZE COMMA  return_sequences EQUAL  COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
aenc DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
aenc DOT add(Convolution1D( PARERIGHT  PARERIGHT  EOM
aenc DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
aenc DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
aenc DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
import tensorflow as tf EOM
import pandas as pd EOM
import numpy as np EOM
import matplotlib EOM
matplotlib DOT use( PARERIGHT  EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  LSTM COMMA  Embedding COMMA  Activation COMMA  Lambda COMMA  Bidirectional EOM
from keras DOT engine import Input COMMA  Model COMMA  InputSpec EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Conv1D EOM
from keras DOT models import Model COMMA  Sequential EOM
from keras DOT utils import to_categorical EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers import Concatenate COMMA  LeakyReLU COMMA  concatenate COMMA  MaxPool1D COMMA GlobalMaxPool1D COMMA add EOM
from keras DOT layers import Dense COMMA  Embedding COMMA  Input COMMA  Masking COMMA  Dropout COMMA  MaxPooling1D COMMA Lambda COMMA  BatchNormalization EOM
from keras DOT layers import LSTM COMMA  TimeDistributed COMMA  AveragePooling1D COMMA  Flatten COMMA Activation COMMA ZeroPadding1D COMMA  UpSampling1D EOM
from keras DOT optimizers import Adam COMMA  rmsprop EOM
from keras DOT callbacks import ReduceLROnPlateau COMMA  EarlyStopping COMMA ModelCheckpoint COMMA  CSVLogger EOM
from keras DOT layers import Conv1D COMMA  GlobalMaxPooling1D COMMA  ConvLSTM2D COMMA  Bidirectional COMMA RepeatVector EOM
from keras import regularizers EOM
from keras DOT utils import plot_model COMMA  to_categorical EOM
from keras DOT preprocessing DOT text import Tokenizer EOM
from keras DOT preprocessing DOT sequence import pad_sequences EOM
from keras DOT utils import plot_model EOM
from keras DOT utils DOT data_utils import get_file EOM
from keras DOT models import Sequential EOM
from keras DOT optimizers import Adam EOM
from keras DOT callbacks import ModelCheckpoint EOM
from sklearn DOT utils import class_weight EOM
from keras import backend as K EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import model_from_json EOM
import os EOM
import pydot EOM
import graphviz EOM
RNN_HIDDEN_DIM  EQUAL  62 EOM
checkpoint_dir  EQUAL  EOM
os DOT path DOT exists( PARERIGHT  EOM
def letter_to_index( PARERIGHT : EOM
_alphabet  EQUAL  EOM
return next((i for i COMMA  _letter in enumerate( PARERIGHT  if _letter  EQUAL  PARERIGHT  COMMA  None PARERIGHT  EOM
def load_data( PARERIGHT : EOM
df  EQUAL  pd DOT read_csv( PARERIGHT  EOM
df DOT columns  EQUAL  [] EOM
df[]  EQUAL  df[] DOT apply(lambda x: [] PARERIGHT  EOM
df  EQUAL  df DOT reindex(np DOT random DOT permutation( PARERIGHT  PARERIGHT  EOM
train_size  EQUAL  int(len( PARERIGHT  * ( PARERIGHT  PARERIGHT  EOM
X_train  EQUAL  df[] DOT values[] EOM
y_train  EQUAL  np DOT array( PARERIGHT  EOM
X_test  EQUAL  np DOT array( PARERIGHT  EOM
y_test  EQUAL  np DOT array( PARERIGHT  EOM
return pad_sequences( PARERIGHT  COMMA  y_train COMMA  pad_sequences( PARERIGHT  COMMA  y_test EOM
def create_lstm_rna_seq( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def create_conv_rna_seq( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
forward_lstm  EQUAL  LSTM( PARERIGHT  EOM
backward_lstm  EQUAL  LSTM( PARERIGHT  EOM
brnn  EQUAL  Bidirectional( PARERIGHT  EOM
model DOT add(Conv1D( PARERIGHT  PARERIGHT  EOM
model DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def create_plots( PARERIGHT : EOM
plt DOT plot( PARERIGHT  EOM
plt DOT plot( PARERIGHT  EOM
plt DOT title( PARERIGHT  EOM
plt DOT ylabel( PARERIGHT  EOM
plt DOT xlabel( PARERIGHT  EOM
plt DOT legend( PARERIGHT  EOM
plt DOT savefig( PARERIGHT  EOM
plt DOT clf( PARERIGHT  EOM
if __name__  EQUAL  EQUAL  : EOM
input_file  EQUAL  EOM
X_train COMMA  y_train COMMA  X_test COMMA  y_test  EQUAL  load_data( PARERIGHT  EOM
model  EQUAL  create_lstm_rna_seq(len( PARERIGHT  PARERIGHT  EOM
filepath EQUAL  checkpoint_dir + EOM
checkpoint  EQUAL  ModelCheckpoint( PARERIGHT  EOM
callbacks_list  EQUAL  [] EOM
class_weight  EQUAL  class_weight DOT compute_class_weight( COMMA  np DOT unique( PARERIGHT  COMMA  y_train PARERIGHT  EOM
history  EQUAL  model DOT fit( PARERIGHT  EOM
model_json  EQUAL  model DOT to_json( PARERIGHT  EOM
with open( PARERIGHT  as json_file: EOM
json_file DOT write( PARERIGHT  EOM
model DOT save_weights( PARERIGHT  EOM
create_plots( PARERIGHT  EOM
plot_model( PARERIGHT  EOM
score COMMA  acc  EQUAL  model DOT evaluate( PARERIGHT  EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT wrappers import TimeDistributed COMMA  Bidirectional EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT import numpy as np EOM
from loop import make_generator EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Dropout COMMA  Flatten EOM
EMBEDDING_DIMS  EQUAL  300 EOM
CONTEXT_LENGTH  EQUAL  700 EOM
QUESTION_LENGTH  EQUAL  40 EOM
ANSWER_LENGTH  EQUAL  1 EOM
cenc  EQUAL  Sequential( PARERIGHT  EOM
cenc DOT add(LSTM(128 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
cenc DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
qenc  EQUAL  Sequential( PARERIGHT  EOM
qenc DOT add(LSTM(128 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
qenc DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
aenc  EQUAL  Sequential( PARERIGHT  EOM
aenc DOT add(LSTM(128 COMMA  input_shape EQUAL ( PARERIGHT  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
aenc DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
facts  EQUAL  Sequential( PARERIGHT  EOM
facts DOT add(Merge( PARERIGHT  PARERIGHT  EOM
attn  EQUAL  Sequential( PARERIGHT  EOM
attn DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
dev_gen  EQUAL  make_generator( PARERIGHT  EOM
train_gen  EQUAL  make_generator( PARERIGHT  EOM
for cycle in range( PARERIGHT : EOM
model DOT save_weights( + str( PARERIGHT  +  PARERIGHT  EOM
model DOT fit_generator( PARERIGHT import os EOM
global_model_version  EQUAL  49 EOM
global_batch_size  EQUAL  16 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_2  EQUAL  Sequential( PARERIGHT  EOM
branch_2 DOT add( PARERIGHT  EOM
branch_2 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_2 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4  EQUAL  Sequential( PARERIGHT  EOM
branch_4 DOT add( PARERIGHT  EOM
branch_4 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_4 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_6  EQUAL  Sequential( PARERIGHT  EOM
branch_6 DOT add( PARERIGHT  EOM
branch_6 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_6 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_8  EQUAL  Sequential( PARERIGHT  EOM
branch_8 DOT add( PARERIGHT  EOM
branch_8 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_8 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_8 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_8 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_8 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_8 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_8 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_10  EQUAL  Sequential( PARERIGHT  EOM
branch_10 DOT add( PARERIGHT  EOM
branch_10 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_10 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_10 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_10 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_10 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_10 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_10 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout EOM
from keras DOT layers import LSTM COMMA  Merge COMMA  Dense  COMMA  Concatenate EOM
def VQA_MODEL( PARERIGHT : EOM
image_feature_size  EQUAL  4096 EOM
word_feature_size  EQUAL  300 EOM
number_of_LSTM  EQUAL  3 EOM
number_of_hidden_units_LSTM  EQUAL  512 EOM
max_length_questions  EQUAL  30 EOM
number_of_dense_layers  EQUAL  3 EOM
number_of_hidden_units  EQUAL  1024 EOM
activation_function          EQUAL  EOM
dropout_pct  EQUAL  0 DOT 5 EOM
model_image  EQUAL  Sequential( PARERIGHT  EOM
model_image DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language  EQUAL  Sequential( PARERIGHT  EOM
model_language DOT add(LSTM(number_of_hidden_units_LSTM COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
for _ in xrange( PARERIGHT : EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Reshape COMMA  Activation COMMA  Dropout EOM
from keras DOT layers import LSTM COMMA  Merge COMMA  Dense EOM
from keras DOT layers import concatenate COMMA Concatenate COMMA Dot EOM
from keras DOT layers import Add EOM
from keras DOT models import Model EOM
def VQA_MODEL( PARERIGHT : EOM
image_feature_size  EQUAL  4096 EOM
word_feature_size  EQUAL  300 EOM
number_of_LSTM  EQUAL  3 EOM
number_of_hidden_units_LSTM  EQUAL  512 EOM
max_length_questions  EQUAL  30 EOM
number_of_dense_layers  EQUAL  3 EOM
number_of_hidden_units  EQUAL  1024 EOM
activation_function          EQUAL  EOM
dropout_pct  EQUAL  0 DOT 5 EOM
model_image  EQUAL  Sequential( PARERIGHT  EOM
model_image DOT add(Reshape(( PARERIGHT  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language  EQUAL  Sequential( PARERIGHT  EOM
model_language DOT add(LSTM(number_of_hidden_units_LSTM COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model_language DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
x EQUAL concatenate( PARERIGHT  EOM
for _ in xrange( PARERIGHT : EOM
x EQUAL Dense( PARERIGHT ( PARERIGHT  EOM
x EQUAL Activation( PARERIGHT ( PARERIGHT  EOM
x EQUAL Dropout( PARERIGHT ( PARERIGHT  EOM
model_output EQUAL Dense( PARERIGHT ( PARERIGHT  EOM
model_output EQUAL Activation( PARERIGHT ( PARERIGHT  EOM
final EQUAL Model( PARERIGHT  EOM
return final EOM
model EQUAL VQA_MODEL( PARERIGHT  EOM
model_json  EQUAL  model DOT to_json( PARERIGHT  EOM
with open( PARERIGHT  as json_file: EOM
json_file DOT write( PARERIGHT  EOM
from __future__ import print_function EOM
import numpy as np EOM
from keras DOT preprocessing import sequence EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Dropout COMMA  Activation COMMA  Lambda EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Convolution1D COMMA MaxPooling1D COMMA  Flatten EOM
from keras DOT datasets import imdb EOM
from keras import backend as K EOM
from sklearn DOT cross_validation import train_test_split EOM
import pandas as pd EOM
from keras DOT utils DOT np_utils import to_categorical EOM
from sklearn DOT preprocessing import Normalizer EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Convolution1D COMMA  Dense COMMA  Dropout COMMA  Flatten COMMA  MaxPooling1D EOM
from keras DOT utils import np_utils EOM
import numpy as np EOM
import h5py EOM
from keras import callbacks EOM
from keras DOT layers import LSTM COMMA  GRU COMMA  SimpleRNN EOM
from keras DOT callbacks import CSVLogger EOM
from keras DOT callbacks import ModelCheckpoint COMMA  EarlyStopping COMMA  ReduceLROnPlateau COMMA  CSVLogger EOM
import csv EOM
from sklearn DOT cross_validation import StratifiedKFold EOM
from sklearn DOT cross_validation import cross_val_score EOM
from keras DOT wrappers DOT scikit_learn import KerasClassifier EOM
with open( PARERIGHT  as f: EOM
reader  EQUAL  csv DOT reader( PARERIGHT  EOM
your_list  EQUAL  list( PARERIGHT  EOM
trainX  EQUAL  np DOT array( PARERIGHT  EOM
traindata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
Y  EQUAL  traindata DOT iloc[] EOM
y_train1  EQUAL  np DOT array( PARERIGHT  EOM
y_train EQUAL  to_categorical( PARERIGHT  EOM
maxlen  EQUAL  44100 EOM
trainX  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_train  EQUAL  np DOT reshape(trainX COMMA  ( PARERIGHT  PARERIGHT  EOM
with open( PARERIGHT  as f: EOM
reader1  EQUAL  csv DOT reader( PARERIGHT  EOM
your_list1  EQUAL  list( PARERIGHT  EOM
testX  EQUAL  np DOT array( PARERIGHT  EOM
testdata  EQUAL  pd DOT read_csv( PARERIGHT  EOM
Y1  EQUAL  testdata DOT iloc[] EOM
y_test1  EQUAL  np DOT array( PARERIGHT  EOM
y_test EQUAL  to_categorical( PARERIGHT  EOM
maxlen  EQUAL  44100 EOM
testX  EQUAL  sequence DOT pad_sequences( PARERIGHT  EOM
X_test  EQUAL  np DOT reshape(testX COMMA  ( PARERIGHT  PARERIGHT  EOM
batch_size  EQUAL  2 EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
checkpointer  EQUAL  callbacks DOT ModelCheckpoint( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
model DOT save( PARERIGHT  import tflearn EOM
import numpy as np EOM
from sklearn DOT manifold import TSNE EOM
import matplotlib DOT pyplot as plt EOM
from tflearn DOT layers DOT core import input_data COMMA  dropout COMMA  fully_connected EOM
from tflearn DOT layers DOT conv import conv_1d COMMA  global_max_pool EOM
from tflearn DOT layers DOT merge_ops import merge EOM
from tflearn DOT layers DOT estimator import regression EOM
import tensorflow as tf EOM
import os EOM
os DOT environ[] EQUAL  EOM
from keras DOT layers import Embedding EOM
from keras DOT layers import Dense COMMA  Input COMMA  Flatten EOM
from keras DOT layers import Conv1D COMMA  MaxPooling1D COMMA  Embedding COMMA  Merge COMMA  Dropout COMMA  LSTM COMMA  GRU COMMA  Bidirectional EOM
from keras DOT models import Model COMMA Sequential EOM
from keras import backend as K EOM
from keras DOT engine DOT topology import Layer COMMA  InputSpec EOM
from keras import initializers COMMA  optimizers EOM
def lstm_keras( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
def cnn( PARERIGHT : EOM
tf DOT reset_default_graph( PARERIGHT  EOM
network  EQUAL  input_data( PARERIGHT  EOM
network  EQUAL  tflearn DOT embedding( PARERIGHT  EOM
network  EQUAL  dropout( PARERIGHT  EOM
branch1  EQUAL  conv_1d( PARERIGHT  EOM
branch2  EQUAL  conv_1d( PARERIGHT  EOM
branch3  EQUAL  conv_1d( PARERIGHT  EOM
network  EQUAL  merge( PARERIGHT  EOM
network  EQUAL  tf DOT expand_dims( PARERIGHT  EOM
network  EQUAL  global_max_pool( PARERIGHT  EOM
network  EQUAL  dropout( PARERIGHT  EOM
network  EQUAL  fully_connected( PARERIGHT  EOM
network  EQUAL  regression( PARERIGHT  EOM
model  EQUAL  tflearn DOT DNN( PARERIGHT  EOM
return model EOM
def blstm( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return model EOM
class AttLayer( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
super( PARERIGHT  DOT __init__( PARERIGHT  EOM
def build( PARERIGHT : EOM
self DOT W  EQUAL  self DOT add_weight(name EQUAL  COMMA  shape EQUAL ( PARERIGHT  COMMA initializer EQUAL  COMMA trainable EQUAL  PARERIGHT  EOM
def call( PARERIGHT : EOM
eij  EQUAL  K DOT tanh(K DOT dot( PARERIGHT  PARERIGHT  EOM
ai  EQUAL  K DOT exp( PARERIGHT  EOM
weights  EQUAL  ai/K DOT sum( PARERIGHT  DOT dimshuffle( PARERIGHT  EOM
weighted_input  EQUAL  x*weights DOT dimshuffle( PARERIGHT  EOM
return weighted_input DOT sum( PARERIGHT  EOM
def compute_output_shape( PARERIGHT : EOM
return ( PARERIGHT  EOM
def blstm_atten( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(AttLayer( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
adam  EQUAL  optimizers DOT Adam( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT summary( PARERIGHT  EOM
return model EOM
def get_model( PARERIGHT : EOM
if m_type  EQUAL  EQUAL  : EOM
model  EQUAL  cnn( PARERIGHT  EOM
elif m_type  EQUAL  EQUAL  : EOM
model  EQUAL  lstm_keras( PARERIGHT  EOM
elif m_type  EQUAL  EQUAL  : EOM
model  EQUAL  blstm( PARERIGHT  EOM
elif m_type  EQUAL  EQUAL  : EOM
model  EQUAL  blstm_atten( PARERIGHT  EOM
else: EOM
return None EOM
return modelimport pandas as pd EOM
import numpy as np EOM
import datetime EOM
import os EOM
from keras DOT models import Sequential EOM
from keras DOT layers DOT core import Dense COMMA  Dropout COMMA  Activation COMMA  Flatten EOM
from keras DOT layers DOT recurrent import LSTM COMMA  GRU EOM
from keras DOT layers import Convolution1D COMMA  MaxPooling1D EOM
from keras DOT callbacks import Callback EOM
from sklearn DOT preprocessing import MinMaxScaler EOM
from sklearn DOT metrics import mean_squared_error EOM
def prepare_data( PARERIGHT : EOM
df__  EQUAL  df[] EOM
dataset  EQUAL  df__ DOT values EOM
dataset  EQUAL  dataset DOT astype( PARERIGHT  EOM
return dataset EOM
def create_dataset( PARERIGHT : EOM
for i in range(len( PARERIGHT -look_back-1 PARERIGHT : EOM
a  EQUAL  dataset[] EOM
dataX DOT append( PARERIGHT  EOM
dataY DOT append( PARERIGHT  EOM
return np DOT array( PARERIGHT  COMMA  np DOT array( PARERIGHT  EOM
def reshape_dataset( PARERIGHT : EOM
if time_series EQUAL False: EOM
else: EOM
return data_reshape EOM
class LSTM_model EOM
def __init__( PARERIGHT : EOM
self DOT trainX  EQUAL  trainX EOM
self DOT trainY  EQUAL  trainY EOM
self DOT look_back  EQUAL  look_back EOM
def simple_LSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(4 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
return model EOM
def LSTM_model_memory_batch( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(4 COMMA  batch_input_shape EQUAL ( PARERIGHT  COMMA  stateful EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT fit( PARERIGHT  EOM
model DOT reset_states( PARERIGHT  EOM
return model EOM
def Stacked_LSTM_model_memory_batch( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(4 COMMA  batch_input_shape EQUAL ( PARERIGHT  COMMA  stateful EQUAL  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(4 COMMA  batch_input_shape EQUAL ( PARERIGHT  COMMA  stateful EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT fit( PARERIGHT  EOM
model DOT reset_states( PARERIGHT  EOM
return model EOM
def Simple_LSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(4 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
return model EOM
def LSTM_model_memory_batch( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(4 COMMA  batch_input_shape EQUAL ( PARERIGHT  COMMA  stateful EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT fit( PARERIGHT  EOM
model DOT reset_states( PARERIGHT  EOM
return model EOM
def Stacked_LSTM_model_memory_batch( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(4 COMMA  batch_input_shape EQUAL ( PARERIGHT  COMMA  stateful EQUAL  COMMA  return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM(4 COMMA  batch_input_shape EQUAL ( PARERIGHT  COMMA  stateful EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
for i in range( PARERIGHT : EOM
model DOT fit( PARERIGHT  EOM
model DOT reset_states( PARERIGHT  EOM
return model EOM
import os EOM
global_model_version  EQUAL  63 EOM
global_batch_size  EQUAL  128 EOM
global_top_words  EQUAL  5000 EOM
global_max_review_length  EQUAL  500 EOM
global_dir_name  EQUAL  os DOT path DOT dirname(os DOT path DOT realpath( PARERIGHT  PARERIGHT  EOM
global_embedding_vecor_length  EQUAL  32 EOM
global_model_description  EQUAL  EOM
import sys EOM
sys DOT path DOT append( PARERIGHT  EOM
from master import run_model COMMA  generate_read_me COMMA  get_text_data COMMA  load_word2vec EOM
import time EOM
import numpy as np EOM
import matplotlib EOM
import argparse EOM
import keras EOM
import csv EOM
from keras DOT datasets import imdb EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense COMMA  Merge COMMA  Input COMMA  Reshape COMMA  Activation COMMA  Dropout COMMA  Flatten EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT convolutional import Conv1D EOM
from keras DOT layers DOT convolutional import MaxPooling1D EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import plot_model EOM
import matplotlib DOT pyplot as plt EOM
from keras DOT regularizers import l2 EOM
def build_model( PARERIGHT : EOM
input_layer  EQUAL  Embedding( PARERIGHT  EOM
branch_3  EQUAL  Sequential( PARERIGHT  EOM
branch_3 DOT add( PARERIGHT  EOM
branch_3 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_3 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_5  EQUAL  Sequential( PARERIGHT  EOM
branch_5 DOT add( PARERIGHT  EOM
branch_5 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_5 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_7  EQUAL  Sequential( PARERIGHT  EOM
branch_7 DOT add( PARERIGHT  EOM
branch_7 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_7 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
branch_9  EQUAL  Sequential( PARERIGHT  EOM
branch_9 DOT add( PARERIGHT  EOM
branch_9 DOT add(Conv1D(filters EQUAL  COMMA  kernel_size EQUAL  COMMA  padding EQUAL  COMMA  kernel_regularizer EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Activation( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(MaxPooling1D( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
branch_9 DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Merge( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
opt  EQUAL  keras DOT optimizers DOT RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if show_summaries: EOM
return model EOM
os DOT environ[] EQUAL  EOM
parser  EQUAL  argparse DOT ArgumentParser( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
parser DOT add_argument( PARERIGHT  EOM
inputs  EQUAL  parser DOT parse_args( PARERIGHT  EOM
generate_read_me( PARERIGHT  EOM
run_model(build_model( PARERIGHT  COMMA  global_model_version COMMA  global_batch_size COMMA  inputs DOT num_epochs COMMA  global_top_words COMMA  global_max_review_length COMMA  global_dir_name PARERIGHT  EOM
from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT models import Sequential EOM
def build_improved_model( PARERIGHT : EOM
model DOT add(LSTM(nput_shape EQUAL ( PARERIGHT  COMMA units EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
def build_basic_model( PARERIGHT : EOM
model DOT add(LSTM(nput_shape EQUAL ( PARERIGHT  COMMA units EQUAL  COMMA return_sequences EQUAL  PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
from keras DOT callbacks import ModelCheckpoint EOM
from keras DOT layers import Dense EOM
from keras DOT layers import Dropout EOM
from keras DOT layers import Flatten EOM
from keras DOT layers import LSTM EOM
from keras DOT layers DOT embeddings import Embedding EOM
from keras DOT models import Sequential EOM
from keras DOT models import load_model EOM
from keras DOT models import model_from_json EOM
from keras DOT preprocessing import sequence EOM
from keras DOT utils import np_utils EOM
def baseModel( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Embedding( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelimport keras EOM
from keras DOT models import Sequential EOM
from keras DOT layers import Dense EOM
from keras DOT layers import LSTM EOM
from keras DOT optimizers import RMSprop EOM
from keras DOT utils import multi_gpu_model EOM
from models import timehistory EOM
from data_generator import generate_text_input_data EOM
if keras DOT backend DOT backend( PARERIGHT   EQUAL   from gpu_mode import cntk_gpu_mode_config EOM
class LstmBenchmark( PARERIGHT : EOM
def __init__( PARERIGHT : EOM
self DOT test_name  EQUAL  EOM
self DOT sample_type  EQUAL  EOM
self DOT total_time  EQUAL  0 EOM
self DOT batch_size  EQUAL  128 EOM
self DOT epochs  EQUAL  2 EOM
self DOT num_samples  EQUAL  1000 EOM
def run_benchmark( PARERIGHT : EOM
input_dim_1  EQUAL  40 EOM
input_dim_2  EQUAL  60 EOM
input_shape  EQUAL  ( PARERIGHT  EOM
x COMMA  y  EQUAL  generate_text_input_data( PARERIGHT  EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM(128 COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  COMMA  activation EQUAL  PARERIGHT  EOM
optimizer  EQUAL  RMSprop( PARERIGHT  EOM
if keras DOT backend DOT backend( PARERIGHT  is  and gpus > 1: EOM
model  EQUAL  multi_gpu_model( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if keras DOT backend DOT backend( PARERIGHT  is  and gpus > 1: EOM
start COMMA  end  EQUAL  cntk_gpu_mode_config( PARERIGHT  EOM
x  EQUAL  x[] EOM
y  EQUAL  y[] EOM
time_callback  EQUAL  timehistory DOT TimeHistory( PARERIGHT  EOM
model DOT fit( PARERIGHT  EOM
self DOT total_time  EQUAL  0 EOM
for i in range( PARERIGHT : EOM
self DOT total_time + EQUAL  time_callback DOT times[]from keras DOT layers DOT core import Dense COMMA  Activation COMMA  Dropout EOM
from keras DOT optimizers import RMSprop EOM
from keras DOT layers DOT recurrent import LSTM EOM
from keras DOT callbacks import Callback EOM
import tensorflow as tf EOM
class LossHistory( PARERIGHT : EOM
def on_train_begin( PARERIGHT : EOM
self DOT losses  EQUAL  [] EOM
def on_batch_end( PARERIGHT : EOM
self DOT losses DOT append(logs DOT get( PARERIGHT  PARERIGHT  EOM
def neural_net( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(Dense(rams[] COMMA  init EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
rms  EQUAL  RMSprop( PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
if load: EOM
model DOT load_weights( PARERIGHT  EOM
return model EOM
def lstm_net( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Dropout( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT compile( PARERIGHT  EOM
return modelfrom keras DOT layers DOT convolutional import Conv2DTranspose  COMMA  Conv1D COMMA  Conv2D COMMA Convolution3D COMMA  MaxPooling2D COMMA UpSampling1D COMMA UpSampling2D COMMA UpSampling3D EOM
from keras DOT layers import Input COMMA LSTM COMMA Bidirectional COMMA TimeDistributed COMMA Embedding COMMA  Dense COMMA  Dropout COMMA  Activation COMMA  Flatten COMMA    Reshape COMMA  Flatten COMMA  Lambda EOM
from keras DOT layers DOT noise import GaussianDropout COMMA  GaussianNoise EOM
from keras DOT layers DOT normalization import BatchNormalization EOM
from keras import initializers EOM
from keras import regularizers EOM
from keras DOT models import Sequential COMMA  Model EOM
from keras DOT layers DOT advanced_activations import LeakyReLU EOM
import numpy as np EOM
import pandas as pd EOM
import os EOM
def create_LSTM( PARERIGHT : EOM
model  EQUAL  Sequential( PARERIGHT  EOM
if embedding_matrix ! EQUAL  []: EOM
embedding_layer  EQUAL  Embedding( PARERIGHT  EOM
model DOT add( PARERIGHT  EOM
model DOT add(LSTM( PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM( PARERIGHT  PARERIGHT  PARERIGHT  EOM
else: EOM
model DOT add(LSTM(150 COMMA input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(Bidirectional(LSTM(150 COMMA  return_sequences EQUAL  COMMA  input_shape EQUAL ( PARERIGHT  PARERIGHT  PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
model DOT add(Flatten( PARERIGHT  PARERIGHT  EOM
model DOT add(Dense( PARERIGHT  PARERIGHT  EOM
model DOT add(BatchNormalization( PARERIGHT  PARERIGHT  EOM
model DOT add(Activation( PARERIGHT  PARERIGHT  EOM
return model EOM
if __name__  EQUAL  EQUAL  : EOM
model_id  EQUAL  EOM
model  EQUAL  create_LSTM( PARERIGHT  EOM

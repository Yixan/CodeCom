from keras.datasets import imdb
from keras.preprocessing import sequence
max_features=10000
maxlen = 500
(input_train,y_train),(input_test,y_test)=imdb.load_data(num_words=max_features)
input_train
input_test
input_train.shape, input_test.shape
x_train=sequence.pad_sequences(input_train,maxlen=maxlen)
x_test=sequence.pad_sequences(input_test,maxlen=maxlen)
x_train.shape,x_test.shape
x_train
from keras.models import Sequential
from keras.layers import SimpleRNN, Dense, Embedding
model = Sequential()
model.add(Embedding(max_features, 32))
model.add(SimpleRNN(32))
model.add(Dense(1, activation='sigmoid'))
model.summary()
model.compile(optimizer='rmsprop', loss='binary_crossentropy', metrics=['acc'])
history = model.fit(x_train, y_train, epochs=10, batch_size=128, validation_split=0.2)
from keras.layers import LSTM
model_lstm = Sequential()
model_lstm.add(Embedding(max_features, 32))
model_lstm.add(LSTM(32))
model_lstm.add(Dense(1,activation='sigmoid'))
model_lstm.summary()
model_lstm.compile(optimizer='rmsprop',loss='binary_crossentropy',metrics=['acc'])
history = model_lstm.fit(x_train, y_train, epochs=10, batch_size=128, validation_split=0.2 )

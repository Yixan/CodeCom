from __future__ import print_function
import os
from keras.models import Sequential
from keras.models import load_model
from keras.layers import Dropout
from keras.layers import Dense
from keras.layers import Activation
from keras.layers import LSTM
from getdata import GetData
from logger import Logger
log = Logger('Model')
class Model(object):
    gd.get_dataset()
    def __init__(self):
        self.maxlen = self.gd.preprocess.__defaults__[0]
        self.model = Sequential()
    def lstm_(self, units=512):
            log.info("LSTM-model subfolder not found.")
            os.mkdir(self.gd.model_dir)
            log.info("'model' subfolder created.")
        if os.path.exists(self.gd.model_dir):
            if os.path.exists(os.path.join(self.gd.model_dir, 'model.h5')):
                log.info("LSTM-model found.")
                self.model = load_model(os.path.join(self.gd.model_dir, 'model.h5'))
                self.model.summary()
                return self.model
            else:
                log.info("Previous state not found. Initializing LSTM-model structure. Stand by ...")
